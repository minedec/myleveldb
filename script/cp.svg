<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="742.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="725" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="725" > </text>
<g id="frames">
<g >
<title>std::__future_base::_State_baseV2::_State_baseV2 (40,000,000 samples, 0.17%)</title><rect x="1147.3" y="309" width="2.0" height="15.0" fill="rgb(235,222,6)" rx="2" ry="2" />
<text  x="1150.33" y="319.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (32,000,000 samples, 0.14%)</title><rect x="570.1" y="373" width="1.7" height="15.0" fill="rgb(221,157,7)" rx="2" ry="2" />
<text  x="573.15" y="383.5" ></text>
</g>
<g >
<title>do_munmap (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="581" width="0.2" height="15.0" fill="rgb(223,14,25)" rx="2" ry="2" />
<text  x="1183.98" y="591.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Update (4,000,000 samples, 0.02%)</title><rect x="669.9" y="309" width="0.2" height="15.0" fill="rgb(227,96,10)" rx="2" ry="2" />
<text  x="672.92" y="319.5" ></text>
</g>
<g >
<title>dax_direct_access (44,000,000 samples, 0.19%)</title><rect x="62.5" y="469" width="2.2" height="15.0" fill="rgb(228,82,48)" rx="2" ry="2" />
<text  x="65.49" y="479.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::_Reset (4,000,000 samples, 0.02%)</title><rect x="946.4" y="453" width="0.2" height="15.0" fill="rgb(254,155,45)" rx="2" ry="2" />
<text  x="949.39" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="1165.4" y="389" width="0.2" height="15.0" fill="rgb(247,92,39)" rx="2" ry="2" />
<text  x="1168.36" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (4,000,000 samples, 0.02%)</title><rect x="780.5" y="405" width="0.2" height="15.0" fill="rgb(254,223,31)" rx="2" ry="2" />
<text  x="783.51" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="1102.1" y="405" width="0.2" height="15.0" fill="rgb(239,80,33)" rx="2" ry="2" />
<text  x="1105.05" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt;::_Deque_base (4,000,000 samples, 0.02%)</title><rect x="26.2" y="421" width="0.2" height="15.0" fill="rgb(211,201,9)" rx="2" ry="2" />
<text  x="29.23" y="431.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (4,000,000 samples, 0.02%)</title><rect x="1162.4" y="261" width="0.2" height="15.0" fill="rgb(235,87,35)" rx="2" ry="2" />
<text  x="1165.35" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="10.2" y="517" width="0.2" height="15.0" fill="rgb(242,73,23)" rx="2" ry="2" />
<text  x="13.20" y="527.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Value (320,000,000 samples, 1.36%)</title><rect x="616.2" y="325" width="16.1" height="15.0" fill="rgb(220,32,52)" rx="2" ry="2" />
<text  x="619.23" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt;, std::allocator&lt;std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt; &gt; &gt;::resize (4,000,000 samples, 0.02%)</title><rect x="26.2" y="549" width="0.2" height="15.0" fill="rgb(209,154,34)" rx="2" ry="2" />
<text  x="29.23" y="559.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="533" width="0.2" height="15.0" fill="rgb(216,86,11)" rx="2" ry="2" />
<text  x="1183.58" y="543.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (20,000,000 samples, 0.08%)</title><rect x="616.2" y="309" width="1.0" height="15.0" fill="rgb(226,210,28)" rx="2" ry="2" />
<text  x="619.23" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait (4,000,000 samples, 0.02%)</title><rect x="953.0" y="437" width="0.2" height="15.0" fill="rgb(253,151,35)" rx="2" ry="2" />
<text  x="956.00" y="447.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (16,000,000 samples, 0.07%)</title><rect x="1130.1" y="405" width="0.8" height="15.0" fill="rgb(212,173,5)" rx="2" ry="2" />
<text  x="1133.10" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,000,000 samples, 0.03%)</title><rect x="1153.9" y="405" width="0.4" height="15.0" fill="rgb(209,61,42)" rx="2" ry="2" />
<text  x="1156.94" y="415.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (8,000,000 samples, 0.03%)</title><rect x="354.4" y="421" width="0.4" height="15.0" fill="rgb(226,69,52)" rx="2" ry="2" />
<text  x="357.38" y="431.5" ></text>
</g>
<g >
<title>proc_reg_read (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="549" width="0.2" height="15.0" fill="rgb(209,158,35)" rx="2" ry="2" />
<text  x="1187.19" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (4,000,000 samples, 0.02%)</title><rect x="1172.4" y="469" width="0.2" height="15.0" fill="rgb(237,13,46)" rx="2" ry="2" />
<text  x="1175.37" y="479.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (4,000,000 samples, 0.02%)</title><rect x="25.4" y="437" width="0.2" height="15.0" fill="rgb(243,13,19)" rx="2" ry="2" />
<text  x="28.43" y="447.5" ></text>
</g>
<g >
<title>submit_bio_wait (412,000,000 samples, 1.75%)</title><rect x="363.8" y="421" width="20.6" height="15.0" fill="rgb(245,220,35)" rx="2" ry="2" />
<text  x="366.80" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (16,000,000 samples, 0.07%)</title><rect x="521.3" y="485" width="0.8" height="15.0" fill="rgb(217,114,36)" rx="2" ry="2" />
<text  x="524.27" y="495.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::__basic_future (36,000,000 samples, 0.15%)</title><rect x="954.6" y="421" width="1.8" height="15.0" fill="rgb(229,212,45)" rx="2" ry="2" />
<text  x="957.60" y="431.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::GetRestartPoint (16,000,000 samples, 0.07%)</title><rect x="671.9" y="293" width="0.8" height="15.0" fill="rgb(231,190,48)" rx="2" ry="2" />
<text  x="674.92" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (8,000,000 samples, 0.03%)</title><rect x="1088.6" y="373" width="0.4" height="15.0" fill="rgb(227,71,22)" rx="2" ry="2" />
<text  x="1091.63" y="383.5" ></text>
</g>
<g >
<title>leveldb::MemTable::Add (2,052,000,000 samples, 8.71%)</title><rect x="794.3" y="389" width="102.8" height="15.0" fill="rgb(241,11,8)" rx="2" ry="2" />
<text  x="797.33" y="399.5" >leveldb::Mem..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt; &gt;::construct&lt;std::__future_base::_State_baseV2&gt; (52,000,000 samples, 0.22%)</title><rect x="1146.9" y="341" width="2.6" height="15.0" fill="rgb(225,153,30)" rx="2" ry="2" />
<text  x="1149.93" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (4,000,000 samples, 0.02%)</title><rect x="1142.9" y="325" width="0.2" height="15.0" fill="rgb(246,162,1)" rx="2" ry="2" />
<text  x="1145.92" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt;::_M_initialize_map (4,000,000 samples, 0.02%)</title><rect x="26.2" y="405" width="0.2" height="15.0" fill="rgb(218,182,53)" rx="2" ry="2" />
<text  x="29.23" y="415.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_M_get_result (4,000,000 samples, 0.02%)</title><rect x="1134.7" y="453" width="0.2" height="15.0" fill="rgb(218,96,44)" rx="2" ry="2" />
<text  x="1137.71" y="463.5" ></text>
</g>
<g >
<title>ksys_read (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="597" width="0.2" height="15.0" fill="rgb(213,135,16)" rx="2" ry="2" />
<text  x="1187.19" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (4,000,000 samples, 0.02%)</title><rect x="504.4" y="453" width="0.2" height="15.0" fill="rgb(243,22,53)" rx="2" ry="2" />
<text  x="507.44" y="463.5" ></text>
</g>
<g >
<title>ext4_ext_remove_space (4,000,000 samples, 0.02%)</title><rect x="25.6" y="421" width="0.2" height="15.0" fill="rgb(219,228,38)" rx="2" ry="2" />
<text  x="28.63" y="431.5" ></text>
</g>
<g >
<title>madvise_free_single_vma (4,000,000 samples, 0.02%)</title><rect x="10.0" y="437" width="0.2" height="15.0" fill="rgb(230,138,34)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__ext4_ext_dirty (28,000,000 samples, 0.12%)</title><rect x="348.0" y="421" width="1.4" height="15.0" fill="rgb(236,182,35)" rx="2" ry="2" />
<text  x="350.97" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::WriteUnbuffered (4,000,000 samples, 0.02%)</title><rect x="566.9" y="357" width="0.2" height="15.0" fill="rgb(230,145,12)" rx="2" ry="2" />
<text  x="569.94" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base*&amp;, std::__future_base::_Result_base::_Deleter, void&gt; (28,000,000 samples, 0.12%)</title><rect x="510.4" y="453" width="1.5" height="15.0" fill="rgb(246,10,8)" rx="2" ry="2" />
<text  x="513.45" y="463.5" ></text>
</g>
<g >
<title>leveldb::MutexLock::MutexLock (4,000,000 samples, 0.02%)</title><rect x="785.5" y="437" width="0.2" height="15.0" fill="rgb(234,222,9)" rx="2" ry="2" />
<text  x="788.51" y="447.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::InitDataBlock (88,000,000 samples, 0.37%)</title><rect x="665.1" y="325" width="4.4" height="15.0" fill="rgb(208,31,8)" rx="2" ry="2" />
<text  x="668.11" y="335.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Sequence (12,000,000 samples, 0.05%)</title><rect x="1094.6" y="421" width="0.6" height="15.0" fill="rgb(224,93,54)" rx="2" ry="2" />
<text  x="1097.64" y="431.5" ></text>
</g>
<g >
<title>std::operator&amp; (12,000,000 samples, 0.05%)</title><rect x="1077.6" y="325" width="0.6" height="15.0" fill="rgb(230,7,27)" rx="2" ry="2" />
<text  x="1080.61" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::size (4,000,000 samples, 0.02%)</title><rect x="750.7" y="357" width="0.2" height="15.0" fill="rgb(245,65,19)" rx="2" ry="2" />
<text  x="753.66" y="367.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::future (4,000,000 samples, 0.02%)</title><rect x="946.8" y="453" width="0.2" height="15.0" fill="rgb(220,228,36)" rx="2" ry="2" />
<text  x="949.79" y="463.5" ></text>
</g>
<g >
<title>_raw_read_lock (4,000,000 samples, 0.02%)</title><rect x="342.8" y="469" width="0.2" height="15.0" fill="rgb(222,193,2)" rx="2" ry="2" />
<text  x="345.76" y="479.5" ></text>
</g>
<g >
<title>std::swap&lt;std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="524.3" y="501" width="0.4" height="15.0" fill="rgb(247,119,7)" rx="2" ry="2" />
<text  x="527.27" y="511.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.11 (8,000,000 samples, 0.03%)</title><rect x="353.6" y="325" width="0.4" height="15.0" fill="rgb(211,143,36)" rx="2" ry="2" />
<text  x="356.58" y="335.5" ></text>
</g>
<g >
<title>ext4_iomap_begin (4,000,000 samples, 0.02%)</title><rect x="668.7" y="133" width="0.2" height="15.0" fill="rgb(212,87,15)" rx="2" ry="2" />
<text  x="671.72" y="143.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (4,000,000 samples, 0.02%)</title><rect x="704.2" y="421" width="0.2" height="15.0" fill="rgb(221,168,30)" rx="2" ry="2" />
<text  x="707.18" y="431.5" ></text>
</g>
<g >
<title>is_ISA_range (4,000,000 samples, 0.02%)</title><rect x="669.1" y="85" width="0.2" height="15.0" fill="rgb(252,168,2)" rx="2" ry="2" />
<text  x="672.12" y="95.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (12,000,000 samples, 0.05%)</title><rect x="584.0" y="341" width="0.6" height="15.0" fill="rgb(243,92,10)" rx="2" ry="2" />
<text  x="586.97" y="351.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::WriteLevel0Table (220,000,000 samples, 0.93%)</title><rect x="691.8" y="405" width="11.0" height="15.0" fill="rgb(218,164,8)" rx="2" ry="2" />
<text  x="694.76" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (4,000,000 samples, 0.02%)</title><rect x="935.6" y="437" width="0.2" height="15.0" fill="rgb(236,116,8)" rx="2" ry="2" />
<text  x="938.57" y="447.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::WriteUnbuffered (4,000,000 samples, 0.02%)</title><rect x="1101.4" y="389" width="0.3" height="15.0" fill="rgb(223,122,31)" rx="2" ry="2" />
<text  x="1104.45" y="399.5" ></text>
</g>
<g >
<title>std::operator&amp; (4,000,000 samples, 0.02%)</title><rect x="1083.4" y="325" width="0.2" height="15.0" fill="rgb(217,81,16)" rx="2" ry="2" />
<text  x="1086.42" y="335.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::WriteRawBlock (328,000,000 samples, 1.39%)</title><rect x="615.8" y="341" width="16.5" height="15.0" fill="rgb(230,98,1)" rx="2" ry="2" />
<text  x="618.83" y="351.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::FindShortestSeparator (8,000,000 samples, 0.03%)</title><rect x="745.8" y="389" width="0.4" height="15.0" fill="rgb(252,67,5)" rx="2" ry="2" />
<text  x="748.85" y="399.5" ></text>
</g>
<g >
<title>path_openat (4,000,000 samples, 0.02%)</title><rect x="566.7" y="293" width="0.2" height="15.0" fill="rgb(236,101,31)" rx="2" ry="2" />
<text  x="569.74" y="303.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (124,000,000 samples, 0.53%)</title><rect x="430.1" y="389" width="6.2" height="15.0" fill="rgb(209,110,18)" rx="2" ry="2" />
<text  x="433.11" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::__setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; (12,000,000 samples, 0.05%)</title><rect x="942.2" y="421" width="0.6" height="15.0" fill="rgb(211,91,18)" rx="2" ry="2" />
<text  x="945.18" y="431.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (8,000,000 samples, 0.03%)</title><rect x="768.5" y="389" width="0.4" height="15.0" fill="rgb(222,17,25)" rx="2" ry="2" />
<text  x="771.49" y="399.5" ></text>
</g>
<g >
<title>__vfs_write (8,264,000,000 samples, 35.08%)</title><rect x="42.3" y="549" width="413.9" height="15.0" fill="rgb(237,83,12)" rx="2" ry="2" />
<text  x="45.25" y="559.5" >__vfs_write</text>
</g>
<g >
<title>__find_get_block (8,000,000 samples, 0.03%)</title><rect x="390.4" y="405" width="0.4" height="15.0" fill="rgb(239,29,10)" rx="2" ry="2" />
<text  x="393.44" y="415.5" ></text>
</g>
<g >
<title>jbd2__journal_start (164,000,000 samples, 0.70%)</title><rect x="395.3" y="453" width="8.2" height="15.0" fill="rgb(218,178,45)" rx="2" ry="2" />
<text  x="398.25" y="463.5" ></text>
</g>
<g >
<title>ext4_free_blocks (4,000,000 samples, 0.02%)</title><rect x="25.6" y="405" width="0.2" height="15.0" fill="rgb(247,218,42)" rx="2" ry="2" />
<text  x="28.63" y="415.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (8,000,000 samples, 0.03%)</title><rect x="906.7" y="421" width="0.4" height="15.0" fill="rgb(217,90,39)" rx="2" ry="2" />
<text  x="909.72" y="431.5" ></text>
</g>
<g >
<title>should_fail_bio (4,000,000 samples, 0.02%)</title><rect x="384.0" y="373" width="0.2" height="15.0" fill="rgb(217,29,53)" rx="2" ry="2" />
<text  x="387.03" y="383.5" ></text>
</g>
<g >
<title>all (23,560,000,000 samples, 100%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(233,88,30)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (16,000,000 samples, 0.07%)</title><rect x="639.3" y="405" width="0.8" height="15.0" fill="rgb(213,133,11)" rx="2" ry="2" />
<text  x="642.27" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::~allocator (4,000,000 samples, 0.02%)</title><rect x="962.0" y="373" width="0.2" height="15.0" fill="rgb(224,81,40)" rx="2" ry="2" />
<text  x="965.01" y="383.5" ></text>
</g>
<g >
<title>[unknown] (12,156,000,000 samples, 51.60%)</title><rect x="565.1" y="629" width="608.9" height="15.0" fill="rgb(230,211,41)" rx="2" ry="2" />
<text  x="568.14" y="639.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (28,000,000 samples, 0.12%)</title><rect x="512.9" y="469" width="1.4" height="15.0" fill="rgb(208,76,26)" rx="2" ry="2" />
<text  x="515.85" y="479.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (40,000,000 samples, 0.17%)</title><rect x="799.1" y="325" width="2.0" height="15.0" fill="rgb(238,220,40)" rx="2" ry="2" />
<text  x="802.14" y="335.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (8,000,000 samples, 0.03%)</title><rect x="693.0" y="357" width="0.4" height="15.0" fill="rgb(207,142,42)" rx="2" ry="2" />
<text  x="695.96" y="367.5" ></text>
</g>
<g >
<title>leveldb::Arena::Allocate (4,000,000 samples, 0.02%)</title><rect x="794.7" y="373" width="0.2" height="15.0" fill="rgb(232,159,21)" rx="2" ry="2" />
<text  x="797.73" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (4,000,000 samples, 0.02%)</title><rect x="1170.6" y="437" width="0.2" height="15.0" fill="rgb(227,18,44)" rx="2" ry="2" />
<text  x="1173.57" y="447.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Finish (8,000,000 samples, 0.03%)</title><rect x="750.5" y="373" width="0.4" height="15.0" fill="rgb(230,203,37)" rx="2" ry="2" />
<text  x="753.46" y="383.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::WriteRandom (4,236,000,000 samples, 17.98%)</title><rect x="774.3" y="501" width="212.2" height="15.0" fill="rgb(215,195,22)" rx="2" ry="2" />
<text  x="777.30" y="511.5" >leveldb::Benchmark::WriteRa..</text>
</g>
<g >
<title>std::__exception_ptr::operator==@plt (4,000,000 samples, 0.02%)</title><rect x="952.4" y="437" width="0.2" height="15.0" fill="rgb(254,199,31)" rx="2" ry="2" />
<text  x="955.40" y="447.5" ></text>
</g>
<g >
<title>__snprintf (4,000,000 samples, 0.02%)</title><rect x="775.7" y="469" width="0.2" height="15.0" fill="rgb(206,29,50)" rx="2" ry="2" />
<text  x="778.70" y="479.5" ></text>
</g>
<g >
<title>std::atomic&lt;unsigned int&gt;::atomic (4,000,000 samples, 0.02%)</title><rect x="958.8" y="277" width="0.2" height="15.0" fill="rgb(250,194,51)" rx="2" ry="2" />
<text  x="961.81" y="287.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (24,000,000 samples, 0.10%)</title><rect x="941.0" y="405" width="1.2" height="15.0" fill="rgb(249,119,36)" rx="2" ry="2" />
<text  x="943.98" y="415.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (4,000,000 samples, 0.02%)</title><rect x="768.9" y="389" width="0.2" height="15.0" fill="rgb(227,79,25)" rx="2" ry="2" />
<text  x="771.89" y="399.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Write (4,000,000 samples, 0.02%)</title><rect x="1173.6" y="485" width="0.2" height="15.0" fill="rgb(244,115,48)" rx="2" ry="2" />
<text  x="1176.57" y="495.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32 (48,000,000 samples, 0.20%)</title><rect x="897.7" y="389" width="2.4" height="15.0" fill="rgb(217,79,19)" rx="2" ry="2" />
<text  x="900.70" y="399.5" ></text>
</g>
<g >
<title>std::swap&lt;std::__future_base::_State_baseV2*&gt; (4,000,000 samples, 0.02%)</title><rect x="1139.7" y="389" width="0.2" height="15.0" fill="rgb(213,130,50)" rx="2" ry="2" />
<text  x="1142.71" y="399.5" ></text>
</g>
<g >
<title>vfprintf (4,000,000 samples, 0.02%)</title><rect x="1180.8" y="629" width="0.2" height="15.0" fill="rgb(221,172,24)" rx="2" ry="2" />
<text  x="1183.78" y="639.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::Put (12,000,000 samples, 0.05%)</title><rect x="790.7" y="421" width="0.6" height="15.0" fill="rgb(219,114,36)" rx="2" ry="2" />
<text  x="793.72" y="431.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (16,000,000 samples, 0.07%)</title><rect x="357.2" y="373" width="0.8" height="15.0" fill="rgb(245,217,32)" rx="2" ry="2" />
<text  x="360.19" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (4,000,000 samples, 0.02%)</title><rect x="964.4" y="373" width="0.2" height="15.0" fill="rgb(245,56,7)" rx="2" ry="2" />
<text  x="967.42" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,000,000 samples, 0.02%)</title><rect x="980.2" y="389" width="0.2" height="15.0" fill="rgb(245,134,28)" rx="2" ry="2" />
<text  x="983.24" y="399.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (4,000,000 samples, 0.02%)</title><rect x="906.3" y="421" width="0.2" height="15.0" fill="rgb(215,159,23)" rx="2" ry="2" />
<text  x="909.32" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="504.2" y="437" width="0.2" height="15.0" fill="rgb(234,103,45)" rx="2" ry="2" />
<text  x="507.24" y="447.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::Next (856,000,000 samples, 3.63%)</title><rect x="640.3" y="421" width="42.8" height="15.0" fill="rgb(207,50,8)" rx="2" ry="2" />
<text  x="643.27" y="431.5" >leve..</text>
</g>
<g >
<title>leveldb::Status::operator= (20,000,000 samples, 0.08%)</title><rect x="1102.5" y="405" width="1.0" height="15.0" fill="rgb(233,139,3)" rx="2" ry="2" />
<text  x="1105.45" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (12,000,000 samples, 0.05%)</title><rect x="800.3" y="293" width="0.6" height="15.0" fill="rgb(230,214,7)" rx="2" ry="2" />
<text  x="803.34" y="303.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::key (4,000,000 samples, 0.02%)</title><rect x="676.9" y="309" width="0.2" height="15.0" fill="rgb(210,129,6)" rx="2" ry="2" />
<text  x="679.93" y="319.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::_Reset (4,000,000 samples, 0.02%)</title><rect x="1138.1" y="437" width="0.2" height="15.0" fill="rgb(221,161,28)" rx="2" ry="2" />
<text  x="1141.11" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="507.2" y="469" width="0.6" height="15.0" fill="rgb(216,94,38)" rx="2" ry="2" />
<text  x="510.24" y="479.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (4,000,000 samples, 0.02%)</title><rect x="783.9" y="421" width="0.2" height="15.0" fill="rgb(243,101,24)" rx="2" ry="2" />
<text  x="786.91" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="521.7" y="469" width="0.2" height="15.0" fill="rgb(205,174,44)" rx="2" ry="2" />
<text  x="524.67" y="479.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (8,000,000 samples, 0.03%)</title><rect x="978.0" y="469" width="0.4" height="15.0" fill="rgb(209,75,17)" rx="2" ry="2" />
<text  x="981.04" y="479.5" ></text>
</g>
<g >
<title>aperfmperf_get_khz (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="501" width="0.2" height="15.0" fill="rgb(247,60,37)" rx="2" ry="2" />
<text  x="1187.19" y="511.5" ></text>
</g>
<g >
<title>up_write (8,000,000 samples, 0.03%)</title><rect x="454.8" y="517" width="0.4" height="15.0" fill="rgb(212,225,41)" rx="2" ry="2" />
<text  x="457.75" y="527.5" ></text>
</g>
<g >
<title>__libc_write (4,000,000 samples, 0.02%)</title><rect x="912.1" y="373" width="0.2" height="15.0" fill="rgb(212,63,47)" rx="2" ry="2" />
<text  x="915.13" y="383.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Append (40,000,000 samples, 0.17%)</title><rect x="908.3" y="405" width="2.0" height="15.0" fill="rgb(223,80,44)" rx="2" ry="2" />
<text  x="911.32" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="974.6" y="389" width="0.2" height="15.0" fill="rgb(230,35,49)" rx="2" ry="2" />
<text  x="977.63" y="399.5" ></text>
</g>
<g >
<title>iput (4,000,000 samples, 0.02%)</title><rect x="773.3" y="341" width="0.2" height="15.0" fill="rgb(209,25,41)" rx="2" ry="2" />
<text  x="776.29" y="351.5" ></text>
</g>
<g >
<title>ext4_mb_mark_diskspace_used (92,000,000 samples, 0.39%)</title><rect x="355.8" y="421" width="4.6" height="15.0" fill="rgb(210,69,12)" rx="2" ry="2" />
<text  x="358.79" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::Put (12,000,000 samples, 0.05%)</title><rect x="1004.9" y="421" width="0.6" height="15.0" fill="rgb(244,21,30)" rx="2" ry="2" />
<text  x="1007.89" y="431.5" ></text>
</g>
<g >
<title>ext4_evict_inode (4,000,000 samples, 0.02%)</title><rect x="773.3" y="309" width="0.2" height="15.0" fill="rgb(249,123,44)" rx="2" ry="2" />
<text  x="776.29" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt;&gt; (112,000,000 samples, 0.48%)</title><rect x="956.6" y="405" width="5.6" height="15.0" fill="rgb(231,36,54)" rx="2" ry="2" />
<text  x="959.60" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (164,000,000 samples, 0.70%)</title><rect x="964.6" y="373" width="8.2" height="15.0" fill="rgb(210,33,54)" rx="2" ry="2" />
<text  x="967.62" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="901.7" y="405" width="0.2" height="15.0" fill="rgb(246,40,54)" rx="2" ry="2" />
<text  x="904.71" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Append (8,000,000 samples, 0.03%)</title><rect x="1099.4" y="405" width="0.4" height="15.0" fill="rgb(251,164,9)" rx="2" ry="2" />
<text  x="1102.45" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::KeyBuffer::slice (8,000,000 samples, 0.03%)</title><rect x="775.9" y="469" width="0.4" height="15.0" fill="rgb(214,168,23)" rx="2" ry="2" />
<text  x="778.90" y="479.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::iter (12,000,000 samples, 0.05%)</title><rect x="662.7" y="357" width="0.6" height="15.0" fill="rgb(223,113,45)" rx="2" ry="2" />
<text  x="665.71" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="503.6" y="469" width="0.4" height="15.0" fill="rgb(252,213,1)" rx="2" ry="2" />
<text  x="506.64" y="479.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (28,000,000 samples, 0.12%)</title><rect x="351.8" y="341" width="1.4" height="15.0" fill="rgb(215,89,41)" rx="2" ry="2" />
<text  x="354.78" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (496,000,000 samples, 2.11%)</title><rect x="491.8" y="517" width="24.9" height="15.0" fill="rgb(243,36,13)" rx="2" ry="2" />
<text  x="494.82" y="527.5" >s..</text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::Valid (12,000,000 samples, 0.05%)</title><rect x="683.1" y="421" width="0.6" height="15.0" fill="rgb(239,91,33)" rx="2" ry="2" />
<text  x="686.14" y="431.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::~__basic_future (12,000,000 samples, 0.05%)</title><rect x="953.6" y="437" width="0.6" height="15.0" fill="rgb(236,76,19)" rx="2" ry="2" />
<text  x="956.60" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="502.4" y="389" width="0.2" height="15.0" fill="rgb(223,33,32)" rx="2" ry="2" />
<text  x="505.43" y="399.5" ></text>
</g>
<g >
<title>vfs_write (4,000,000 samples, 0.02%)</title><rect x="25.4" y="565" width="0.2" height="15.0" fill="rgb(234,206,40)" rx="2" ry="2" />
<text  x="28.43" y="575.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_super (40,000,000 samples, 0.17%)</title><rect x="444.7" y="453" width="2.0" height="15.0" fill="rgb(248,73,8)" rx="2" ry="2" />
<text  x="447.74" y="463.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (4,000,000 samples, 0.02%)</title><rect x="25.4" y="405" width="0.2" height="15.0" fill="rgb(230,229,20)" rx="2" ry="2" />
<text  x="28.43" y="415.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::WriteSeq (3,744,000,000 samples, 15.89%)</title><rect x="986.5" y="501" width="187.5" height="15.0" fill="rgb(245,153,24)" rx="2" ry="2" />
<text  x="989.46" y="511.5" >leveldb::Benchmark::Writ..</text>
</g>
<g >
<title>leveldb::Status::ok (4,000,000 samples, 0.02%)</title><rect x="1173.8" y="485" width="0.2" height="15.0" fill="rgb(238,118,14)" rx="2" ry="2" />
<text  x="1176.77" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1150.9" y="357" width="0.2" height="15.0" fill="rgb(218,7,9)" rx="2" ry="2" />
<text  x="1153.93" y="367.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::SeekToFirst (4,000,000 samples, 0.02%)</title><rect x="669.7" y="309" width="0.2" height="15.0" fill="rgb(249,192,11)" rx="2" ry="2" />
<text  x="672.72" y="319.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (16,000,000 samples, 0.07%)</title><rect x="826.4" y="309" width="0.8" height="15.0" fill="rgb(212,142,11)" rx="2" ry="2" />
<text  x="829.38" y="319.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::key (4,000,000 samples, 0.02%)</title><rect x="680.7" y="341" width="0.2" height="15.0" fill="rgb(233,130,27)" rx="2" ry="2" />
<text  x="683.74" y="351.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (4,000,000 samples, 0.02%)</title><rect x="798.5" y="325" width="0.2" height="15.0" fill="rgb(208,67,30)" rx="2" ry="2" />
<text  x="801.54" y="335.5" ></text>
</g>
<g >
<title>leveldb::Random::OneIn (24,000,000 samples, 0.10%)</title><rect x="1083.6" y="341" width="1.2" height="15.0" fill="rgb(217,106,28)" rx="2" ry="2" />
<text  x="1086.62" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="1163.4" y="261" width="0.2" height="15.0" fill="rgb(236,225,45)" rx="2" ry="2" />
<text  x="1166.35" y="271.5" ></text>
</g>
<g >
<title>leveldb::Arena::Allocate (8,000,000 samples, 0.03%)</title><rect x="1009.1" y="389" width="0.4" height="15.0" fill="rgb(219,77,3)" rx="2" ry="2" />
<text  x="1012.09" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (16,000,000 samples, 0.07%)</title><rect x="721.0" y="357" width="0.8" height="15.0" fill="rgb(235,156,53)" rx="2" ry="2" />
<text  x="724.01" y="367.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt; (8,000,000 samples, 0.03%)</title><rect x="493.6" y="485" width="0.4" height="15.0" fill="rgb(254,118,35)" rx="2" ry="2" />
<text  x="496.62" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4,000,000 samples, 0.02%)</title><rect x="671.3" y="309" width="0.2" height="15.0" fill="rgb(226,124,53)" rx="2" ry="2" />
<text  x="674.32" y="319.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (8,000,000 samples, 0.03%)</title><rect x="1031.1" y="309" width="0.4" height="15.0" fill="rgb(241,143,51)" rx="2" ry="2" />
<text  x="1034.13" y="319.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::RandomGenerator::Generate (16,000,000 samples, 0.07%)</title><rect x="776.3" y="469" width="0.8" height="15.0" fill="rgb(244,110,49)" rx="2" ry="2" />
<text  x="779.30" y="479.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (236,000,000 samples, 1.00%)</title><rect x="869.1" y="293" width="11.8" height="15.0" fill="rgb(217,112,25)" rx="2" ry="2" />
<text  x="872.06" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::new_allocator (4,000,000 samples, 0.02%)</title><rect x="1151.3" y="405" width="0.2" height="15.0" fill="rgb(213,45,30)" rx="2" ry="2" />
<text  x="1154.33" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (40,000,000 samples, 0.17%)</title><rect x="667.5" y="245" width="2.0" height="15.0" fill="rgb(223,177,17)" rx="2" ry="2" />
<text  x="670.51" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (4,000,000 samples, 0.02%)</title><rect x="530.5" y="597" width="0.2" height="15.0" fill="rgb(242,207,19)" rx="2" ry="2" />
<text  x="533.48" y="607.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="977.6" y="453" width="0.2" height="15.0" fill="rgb(245,222,3)" rx="2" ry="2" />
<text  x="980.64" y="463.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Flush (72,000,000 samples, 0.31%)</title><rect x="910.3" y="405" width="3.6" height="15.0" fill="rgb(225,27,26)" rx="2" ry="2" />
<text  x="913.33" y="415.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Valid (4,000,000 samples, 0.02%)</title><rect x="662.5" y="357" width="0.2" height="15.0" fill="rgb(223,121,17)" rx="2" ry="2" />
<text  x="665.51" y="367.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (4,000,000 samples, 0.02%)</title><rect x="643.5" y="389" width="0.2" height="15.0" fill="rgb(252,112,43)" rx="2" ry="2" />
<text  x="646.47" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="783.1" y="405" width="0.2" height="15.0" fill="rgb(246,52,14)" rx="2" ry="2" />
<text  x="786.11" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="801.1" y="325" width="0.2" height="15.0" fill="rgb(228,52,13)" rx="2" ry="2" />
<text  x="804.14" y="335.5" ></text>
</g>
<g >
<title>find_next_zero_bit (4,000,000 samples, 0.02%)</title><rect x="360.4" y="389" width="0.2" height="15.0" fill="rgb(244,111,10)" rx="2" ry="2" />
<text  x="363.39" y="399.5" ></text>
</g>
<g >
<title>__brelse (4,000,000 samples, 0.02%)</title><rect x="452.8" y="437" width="0.2" height="15.0" fill="rgb(220,189,17)" rx="2" ry="2" />
<text  x="455.75" y="447.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::GetMaxHeight (12,000,000 samples, 0.05%)</title><rect x="806.1" y="341" width="0.7" height="15.0" fill="rgb(252,174,1)" rx="2" ry="2" />
<text  x="809.15" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (8,000,000 samples, 0.03%)</title><rect x="1098.0" y="389" width="0.4" height="15.0" fill="rgb(205,163,41)" rx="2" ry="2" />
<text  x="1101.04" y="399.5" ></text>
</g>
<g >
<title>leveldb::Env::Default (4,000,000 samples, 0.02%)</title><rect x="26.2" y="597" width="0.2" height="15.0" fill="rgb(239,107,38)" rx="2" ry="2" />
<text  x="29.23" y="607.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (44,000,000 samples, 0.19%)</title><rect x="321.1" y="453" width="2.2" height="15.0" fill="rgb(214,226,11)" rx="2" ry="2" />
<text  x="324.13" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="522.1" y="501" width="0.2" height="15.0" fill="rgb(205,8,43)" rx="2" ry="2" />
<text  x="525.07" y="511.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (44,000,000 samples, 0.19%)</title><rect x="689.2" y="405" width="2.2" height="15.0" fill="rgb(223,59,2)" rx="2" ry="2" />
<text  x="692.15" y="415.5" ></text>
</g>
<g >
<title>walk_page_range (4,000,000 samples, 0.02%)</title><rect x="10.2" y="421" width="0.2" height="15.0" fill="rgb(236,175,40)" rx="2" ry="2" />
<text  x="13.20" y="431.5" ></text>
</g>
<g >
<title>[unknown] (84,000,000 samples, 0.36%)</title><rect x="10.0" y="645" width="4.2" height="15.0" fill="rgb(218,192,46)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;std::__future_base::_State_baseV2&gt;, true&gt;::~_Sp_ebo_helper (4,000,000 samples, 0.02%)</title><rect x="966.0" y="325" width="0.2" height="15.0" fill="rgb(205,96,54)" rx="2" ry="2" />
<text  x="969.02" y="335.5" ></text>
</g>
<g >
<title>rcu_all_qs (8,000,000 samples, 0.03%)</title><rect x="36.0" y="533" width="0.4" height="15.0" fill="rgb(250,107,22)" rx="2" ry="2" />
<text  x="39.04" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (40,000,000 samples, 0.17%)</title><rect x="667.5" y="261" width="2.0" height="15.0" fill="rgb(229,44,49)" rx="2" ry="2" />
<text  x="670.51" y="271.5" ></text>
</g>
<g >
<title>page_fault (4,000,000 samples, 0.02%)</title><rect x="472.0" y="629" width="0.2" height="15.0" fill="rgb(231,225,7)" rx="2" ry="2" />
<text  x="474.98" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (12,000,000 samples, 0.05%)</title><rect x="1148.7" y="293" width="0.6" height="15.0" fill="rgb(218,206,8)" rx="2" ry="2" />
<text  x="1151.73" y="303.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::key (4,000,000 samples, 0.02%)</title><rect x="683.9" y="405" width="0.2" height="15.0" fill="rgb(247,38,27)" rx="2" ry="2" />
<text  x="686.94" y="415.5" ></text>
</g>
<g >
<title>do_unlinkat (8,000,000 samples, 0.03%)</title><rect x="773.3" y="357" width="0.4" height="15.0" fill="rgb(227,140,39)" rx="2" ry="2" />
<text  x="776.29" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (20,000,000 samples, 0.08%)</title><rect x="28.8" y="613" width="1.0" height="15.0" fill="rgb(218,186,19)" rx="2" ry="2" />
<text  x="31.83" y="623.5" ></text>
</g>
<g >
<title>__do_page_fault (4,000,000 samples, 0.02%)</title><rect x="980.2" y="405" width="0.2" height="15.0" fill="rgb(240,202,46)" rx="2" ry="2" />
<text  x="983.24" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (4,000,000 samples, 0.02%)</title><rect x="1143.7" y="437" width="0.2" height="15.0" fill="rgb(231,22,16)" rx="2" ry="2" />
<text  x="1146.72" y="447.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (16,000,000 samples, 0.07%)</title><rect x="980.8" y="437" width="0.8" height="15.0" fill="rgb(215,167,47)" rx="2" ry="2" />
<text  x="983.85" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (16,000,000 samples, 0.07%)</title><rect x="1141.3" y="389" width="0.8" height="15.0" fill="rgb(233,153,24)" rx="2" ry="2" />
<text  x="1144.32" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (8,000,000 samples, 0.03%)</title><rect x="959.6" y="293" width="0.4" height="15.0" fill="rgb(241,211,9)" rx="2" ry="2" />
<text  x="962.61" y="303.5" ></text>
</g>
<g >
<title>leveldb::MemTable::KeyComparator::operator (60,000,000 samples, 0.25%)</title><rect x="798.3" y="341" width="3.0" height="15.0" fill="rgb(211,177,13)" rx="2" ry="2" />
<text  x="801.34" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="25.6" y="549" width="0.2" height="15.0" fill="rgb(244,151,0)" rx="2" ry="2" />
<text  x="28.63" y="559.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (68,000,000 samples, 0.29%)</title><rect x="886.9" y="325" width="3.4" height="15.0" fill="rgb(234,223,39)" rx="2" ry="2" />
<text  x="889.89" y="335.5" ></text>
</g>
<g >
<title>leveldb::PutLengthPrefixedSlice (4,000,000 samples, 0.02%)</title><rect x="975.8" y="469" width="0.2" height="15.0" fill="rgb(232,8,48)" rx="2" ry="2" />
<text  x="978.84" y="479.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::value (4,000,000 samples, 0.02%)</title><rect x="685.5" y="373" width="0.2" height="15.0" fill="rgb(252,51,30)" rx="2" ry="2" />
<text  x="688.54" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (72,000,000 samples, 0.31%)</title><rect x="1159.9" y="341" width="3.7" height="15.0" fill="rgb(219,78,37)" rx="2" ry="2" />
<text  x="1162.95" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (4,000,000 samples, 0.02%)</title><rect x="739.6" y="389" width="0.2" height="15.0" fill="rgb(223,29,47)" rx="2" ry="2" />
<text  x="742.64" y="399.5" ></text>
</g>
<g >
<title>__srcu_read_lock (32,000,000 samples, 0.14%)</title><rect x="64.7" y="453" width="1.6" height="15.0" fill="rgb(233,7,39)" rx="2" ry="2" />
<text  x="67.69" y="463.5" ></text>
</g>
<g >
<title>up_write (20,000,000 samples, 0.08%)</title><rect x="448.5" y="469" width="1.0" height="15.0" fill="rgb(221,140,39)" rx="2" ry="2" />
<text  x="451.54" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get (20,000,000 samples, 0.08%)</title><rect x="497.6" y="469" width="1.0" height="15.0" fill="rgb(244,167,51)" rx="2" ry="2" />
<text  x="500.63" y="479.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (4,000,000 samples, 0.02%)</title><rect x="632.5" y="341" width="0.2" height="15.0" fill="rgb(214,42,15)" rx="2" ry="2" />
<text  x="635.46" y="351.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::WriteWrapper (2,836,000,000 samples, 12.04%)</title><rect x="991.3" y="453" width="142.0" height="15.0" fill="rgb(213,207,38)" rx="2" ry="2" />
<text  x="994.26" y="463.5" >leveldb::DBImpl::W..</text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Node (4,000,000 samples, 0.02%)</title><rect x="1080.0" y="341" width="0.2" height="15.0" fill="rgb(222,139,34)" rx="2" ry="2" />
<text  x="1083.01" y="351.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_init_functor (12,000,000 samples, 0.05%)</title><rect x="1132.1" y="389" width="0.6" height="15.0" fill="rgb(224,52,6)" rx="2" ry="2" />
<text  x="1135.10" y="399.5" ></text>
</g>
<g >
<title>blk_finish_plug (4,000,000 samples, 0.02%)</title><rect x="361.4" y="437" width="0.2" height="15.0" fill="rgb(235,197,2)" rx="2" ry="2" />
<text  x="364.40" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (12,000,000 samples, 0.05%)</title><rect x="744.0" y="373" width="0.6" height="15.0" fill="rgb(212,171,38)" rx="2" ry="2" />
<text  x="747.04" y="383.5" ></text>
</g>
<g >
<title>jbd2_transaction_committed (28,000,000 samples, 0.12%)</title><rect x="391.0" y="469" width="1.4" height="15.0" fill="rgb(212,70,14)" rx="2" ry="2" />
<text  x="394.05" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (4,000,000 samples, 0.02%)</title><rect x="472.0" y="613" width="0.2" height="15.0" fill="rgb(240,134,7)" rx="2" ry="2" />
<text  x="474.98" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="1131.3" y="421" width="0.2" height="15.0" fill="rgb(241,45,16)" rx="2" ry="2" />
<text  x="1134.30" y="431.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (24,000,000 samples, 0.10%)</title><rect x="570.6" y="357" width="1.2" height="15.0" fill="rgb(244,122,49)" rx="2" ry="2" />
<text  x="573.55" y="367.5" ></text>
</g>
<g >
<title>pthread_cond_destroy@@GLIBC_2.3.2 (8,000,000 samples, 0.03%)</title><rect x="998.5" y="421" width="0.4" height="15.0" fill="rgb(213,122,12)" rx="2" ry="2" />
<text  x="1001.48" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (8,000,000 samples, 0.03%)</title><rect x="1093.8" y="405" width="0.4" height="15.0" fill="rgb(244,186,35)" rx="2" ry="2" />
<text  x="1096.84" y="415.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (12,000,000 samples, 0.05%)</title><rect x="1103.5" y="405" width="0.6" height="15.0" fill="rgb(241,95,10)" rx="2" ry="2" />
<text  x="1106.45" y="415.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (12,000,000 samples, 0.05%)</title><rect x="1000.9" y="421" width="0.6" height="15.0" fill="rgb(215,133,10)" rx="2" ry="2" />
<text  x="1003.88" y="431.5" ></text>
</g>
<g >
<title>std::mutex::lock (4,000,000 samples, 0.02%)</title><rect x="785.5" y="405" width="0.2" height="15.0" fill="rgb(234,229,25)" rx="2" ry="2" />
<text  x="788.51" y="415.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (4,000,000 samples, 0.02%)</title><rect x="351.0" y="389" width="0.2" height="15.0" fill="rgb(224,99,23)" rx="2" ry="2" />
<text  x="353.98" y="399.5" ></text>
</g>
<g >
<title>__es_remove_extent (8,000,000 samples, 0.03%)</title><rect x="346.2" y="437" width="0.4" height="15.0" fill="rgb(232,178,7)" rx="2" ry="2" />
<text  x="349.17" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (36,000,000 samples, 0.15%)</title><rect x="1060.6" y="277" width="1.8" height="15.0" fill="rgb(247,87,41)" rx="2" ry="2" />
<text  x="1063.58" y="287.5" ></text>
</g>
<g >
<title>clean_bdev_aliases (4,000,000 samples, 0.02%)</title><rect x="345.8" y="453" width="0.2" height="15.0" fill="rgb(251,229,22)" rx="2" ry="2" />
<text  x="348.77" y="463.5" ></text>
</g>
<g >
<title>do_sys_open (4,000,000 samples, 0.02%)</title><rect x="783.1" y="357" width="0.2" height="15.0" fill="rgb(222,167,24)" rx="2" ry="2" />
<text  x="786.11" y="367.5" ></text>
</g>
<g >
<title>ksys_write (8,000,000 samples, 0.03%)</title><rect x="458.6" y="597" width="0.4" height="15.0" fill="rgb(252,22,11)" rx="2" ry="2" />
<text  x="461.56" y="607.5" ></text>
</g>
<g >
<title>pmem_dax_direct_access (36,000,000 samples, 0.15%)</title><rect x="317.7" y="469" width="1.8" height="15.0" fill="rgb(225,95,15)" rx="2" ry="2" />
<text  x="320.72" y="479.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Lock (12,000,000 samples, 0.05%)</title><rect x="1123.5" y="437" width="0.6" height="15.0" fill="rgb(224,36,33)" rx="2" ry="2" />
<text  x="1126.49" y="447.5" ></text>
</g>
<g >
<title>hash_futex (24,000,000 samples, 0.10%)</title><rect x="484.4" y="565" width="1.2" height="15.0" fill="rgb(213,180,9)" rx="2" ry="2" />
<text  x="487.40" y="575.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (212,000,000 samples, 0.90%)</title><rect x="644.1" y="389" width="10.6" height="15.0" fill="rgb(248,113,51)" rx="2" ry="2" />
<text  x="647.07" y="399.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (4,000,000 samples, 0.02%)</title><rect x="452.8" y="453" width="0.2" height="15.0" fill="rgb(217,33,31)" rx="2" ry="2" />
<text  x="455.75" y="463.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (8,000,000 samples, 0.03%)</title><rect x="447.5" y="389" width="0.4" height="15.0" fill="rgb(213,133,9)" rx="2" ry="2" />
<text  x="450.54" y="399.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt;&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="943.8" y="373" width="0.2" height="15.0" fill="rgb(236,74,27)" rx="2" ry="2" />
<text  x="946.78" y="383.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (8,000,000 samples, 0.03%)</title><rect x="496.2" y="469" width="0.4" height="15.0" fill="rgb(225,202,6)" rx="2" ry="2" />
<text  x="499.22" y="479.5" ></text>
</g>
<g >
<title>__copy_user_flushcache (32,000,000 samples, 0.14%)</title><rect x="55.9" y="421" width="1.6" height="15.0" fill="rgb(237,71,10)" rx="2" ry="2" />
<text  x="58.88" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (28,000,000 samples, 0.12%)</title><rect x="397.7" y="437" width="1.4" height="15.0" fill="rgb(236,5,45)" rx="2" ry="2" />
<text  x="400.66" y="447.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::ok (16,000,000 samples, 0.07%)</title><rect x="632.7" y="373" width="0.8" height="15.0" fill="rgb(252,112,19)" rx="2" ry="2" />
<text  x="635.66" y="383.5" ></text>
</g>
<g >
<title>leveldb::MutexLock::~MutexLock (8,000,000 samples, 0.03%)</title><rect x="1133.7" y="453" width="0.4" height="15.0" fill="rgb(232,46,50)" rx="2" ry="2" />
<text  x="1136.70" y="463.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (12,000,000 samples, 0.05%)</title><rect x="963.2" y="421" width="0.6" height="15.0" fill="rgb(231,75,2)" rx="2" ry="2" />
<text  x="966.22" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (20,000,000 samples, 0.08%)</title><rect x="984.3" y="469" width="1.0" height="15.0" fill="rgb(224,221,47)" rx="2" ry="2" />
<text  x="987.25" y="479.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::Valid (12,000,000 samples, 0.05%)</title><rect x="676.3" y="309" width="0.6" height="15.0" fill="rgb(246,177,51)" rx="2" ry="2" />
<text  x="679.33" y="319.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::key (4,000,000 samples, 0.02%)</title><rect x="680.5" y="341" width="0.2" height="15.0" fill="rgb(205,78,45)" rx="2" ry="2" />
<text  x="683.54" y="351.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_destroy (4,000,000 samples, 0.02%)</title><rect x="1133.1" y="373" width="0.2" height="15.0" fill="rgb(206,140,39)" rx="2" ry="2" />
<text  x="1136.10" y="383.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (196,000,000 samples, 0.83%)</title><rect x="393.7" y="469" width="9.8" height="15.0" fill="rgb(248,8,31)" rx="2" ry="2" />
<text  x="396.65" y="479.5" ></text>
</g>
<g >
<title>ext4_create (4,000,000 samples, 0.02%)</title><rect x="566.7" y="277" width="0.2" height="15.0" fill="rgb(208,185,7)" rx="2" ry="2" />
<text  x="569.74" y="287.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (20,000,000 samples, 0.08%)</title><rect x="653.1" y="357" width="1.0" height="15.0" fill="rgb(231,0,7)" rx="2" ry="2" />
<text  x="656.09" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::emplace_back&lt;unsigned int&gt; (4,000,000 samples, 0.02%)</title><rect x="739.6" y="373" width="0.2" height="15.0" fill="rgb(210,181,16)" rx="2" ry="2" />
<text  x="742.64" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (12,000,000 samples, 0.05%)</title><rect x="652.3" y="357" width="0.6" height="15.0" fill="rgb(221,110,40)" rx="2" ry="2" />
<text  x="655.29" y="367.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (4,000,000 samples, 0.02%)</title><rect x="633.3" y="341" width="0.2" height="15.0" fill="rgb(247,185,12)" rx="2" ry="2" />
<text  x="636.26" y="351.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8,000,000 samples, 0.03%)</title><rect x="456.2" y="549" width="0.4" height="15.0" fill="rgb(253,132,44)" rx="2" ry="2" />
<text  x="459.16" y="559.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (8,000,000 samples, 0.03%)</title><rect x="353.6" y="341" width="0.4" height="15.0" fill="rgb(243,95,24)" rx="2" ry="2" />
<text  x="356.58" y="351.5" ></text>
</g>
<g >
<title>snappy::RawUncompress (148,000,000 samples, 0.63%)</title><rect x="531.7" y="645" width="7.4" height="15.0" fill="rgb(252,24,31)" rx="2" ry="2" />
<text  x="534.68" y="655.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (4,000,000 samples, 0.02%)</title><rect x="412.5" y="469" width="0.2" height="15.0" fill="rgb(234,14,41)" rx="2" ry="2" />
<text  x="415.48" y="479.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::user_comparator (8,000,000 samples, 0.03%)</title><rect x="703.6" y="405" width="0.4" height="15.0" fill="rgb(205,174,22)" rx="2" ry="2" />
<text  x="706.58" y="415.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Put (96,000,000 samples, 0.41%)</title><rect x="1167.0" y="469" width="4.8" height="15.0" fill="rgb(218,119,40)" rx="2" ry="2" />
<text  x="1169.96" y="479.5" ></text>
</g>
<g >
<title>do_futex (116,000,000 samples, 0.49%)</title><rect x="479.8" y="581" width="5.8" height="15.0" fill="rgb(205,168,8)" rx="2" ry="2" />
<text  x="482.80" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (40,000,000 samples, 0.17%)</title><rect x="943.0" y="421" width="2.0" height="15.0" fill="rgb(231,158,3)" rx="2" ry="2" />
<text  x="945.98" y="431.5" ></text>
</g>
<g >
<title>db_bench (23,560,000,000 samples, 100.00%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(230,128,5)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >db_bench</text>
</g>
<g >
<title>tc_deletearray_nothrow (4,000,000 samples, 0.02%)</title><rect x="10.4" y="597" width="0.2" height="15.0" fill="rgb(216,20,19)" rx="2" ry="2" />
<text  x="13.40" y="607.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (140,000,000 samples, 0.59%)</title><rect x="1055.6" y="293" width="7.0" height="15.0" fill="rgb(228,26,34)" rx="2" ry="2" />
<text  x="1058.57" y="303.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (4,000,000 samples, 0.02%)</title><rect x="784.3" y="421" width="0.2" height="15.0" fill="rgb(220,98,52)" rx="2" ry="2" />
<text  x="787.31" y="431.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (4,000,000 samples, 0.02%)</title><rect x="390.8" y="437" width="0.2" height="15.0" fill="rgb(248,211,29)" rx="2" ry="2" />
<text  x="393.85" y="447.5" ></text>
</g>
<g >
<title>truncate_exceptional_pvec_entries.part.13 (4,000,000 samples, 0.02%)</title><rect x="773.3" y="261" width="0.2" height="15.0" fill="rgb(244,111,10)" rx="2" ry="2" />
<text  x="776.29" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (8,000,000 samples, 0.03%)</title><rect x="914.9" y="373" width="0.4" height="15.0" fill="rgb(211,29,1)" rx="2" ry="2" />
<text  x="917.93" y="383.5" ></text>
</g>
<g >
<title>main (16,000,000 samples, 0.07%)</title><rect x="25.6" y="629" width="0.8" height="15.0" fill="rgb(249,227,19)" rx="2" ry="2" />
<text  x="28.63" y="639.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (116,000,000 samples, 0.49%)</title><rect x="1117.1" y="373" width="5.8" height="15.0" fill="rgb(234,136,18)" rx="2" ry="2" />
<text  x="1120.08" y="383.5" ></text>
</g>
<g >
<title>file_update_time (36,000,000 samples, 0.15%)</title><rect x="451.3" y="517" width="1.9" height="15.0" fill="rgb(246,158,36)" rx="2" ry="2" />
<text  x="454.35" y="527.5" ></text>
</g>
<g >
<title>std::operator!=&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt; (4,000,000 samples, 0.02%)</title><rect x="782.3" y="421" width="0.2" height="15.0" fill="rgb(251,217,29)" rx="2" ry="2" />
<text  x="785.31" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (16,000,000 samples, 0.07%)</title><rect x="1151.7" y="421" width="0.8" height="15.0" fill="rgb(216,81,1)" rx="2" ry="2" />
<text  x="1154.74" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (4,000,000 samples, 0.02%)</title><rect x="509.2" y="485" width="0.2" height="15.0" fill="rgb(250,114,26)" rx="2" ry="2" />
<text  x="512.25" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4,000,000 samples, 0.02%)</title><rect x="1140.5" y="389" width="0.2" height="15.0" fill="rgb(224,27,34)" rx="2" ry="2" />
<text  x="1143.52" y="399.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_State_baseV2*&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="1139.7" y="373" width="0.2" height="15.0" fill="rgb(219,72,50)" rx="2" ry="2" />
<text  x="1142.71" y="383.5" ></text>
</g>
<g >
<title>std::move&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="506.4" y="501" width="0.2" height="15.0" fill="rgb(207,130,18)" rx="2" ry="2" />
<text  x="509.44" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (8,000,000 samples, 0.03%)</title><rect x="515.7" y="421" width="0.4" height="15.0" fill="rgb(214,206,19)" rx="2" ry="2" />
<text  x="518.66" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Append (4,000,000 samples, 0.02%)</title><rect x="615.8" y="325" width="0.2" height="15.0" fill="rgb(211,95,12)" rx="2" ry="2" />
<text  x="618.83" y="335.5" ></text>
</g>
<g >
<title>mempool_alloc (4,000,000 samples, 0.02%)</title><rect x="363.4" y="389" width="0.2" height="15.0" fill="rgb(253,65,35)" rx="2" ry="2" />
<text  x="366.40" y="399.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed32 (4,000,000 samples, 0.02%)</title><rect x="913.9" y="405" width="0.2" height="15.0" fill="rgb(205,78,10)" rx="2" ry="2" />
<text  x="916.93" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (228,000,000 samples, 0.97%)</title><rect x="857.6" y="293" width="11.5" height="15.0" fill="rgb(210,184,23)" rx="2" ry="2" />
<text  x="860.64" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="1151.9" y="405" width="0.2" height="15.0" fill="rgb(235,67,50)" rx="2" ry="2" />
<text  x="1154.94" y="415.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::status (4,000,000 samples, 0.02%)</title><rect x="633.3" y="357" width="0.2" height="15.0" fill="rgb(253,160,52)" rx="2" ry="2" />
<text  x="636.26" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::front (20,000,000 samples, 0.08%)</title><rect x="781.3" y="421" width="1.0" height="15.0" fill="rgb(213,81,27)" rx="2" ry="2" />
<text  x="784.31" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="645" width="0.2" height="15.0" fill="rgb(219,109,6)" rx="2" ry="2" />
<text  x="1183.98" y="655.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (4,000,000 samples, 0.02%)</title><rect x="567.9" y="357" width="0.2" height="15.0" fill="rgb(245,228,39)" rx="2" ry="2" />
<text  x="570.95" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result (48,000,000 samples, 0.20%)</title><rect x="939.8" y="421" width="2.4" height="15.0" fill="rgb(205,188,28)" rx="2" ry="2" />
<text  x="942.78" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12,000,000 samples, 0.05%)</title><rect x="793.1" y="389" width="0.6" height="15.0" fill="rgb(242,201,14)" rx="2" ry="2" />
<text  x="796.13" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_write (8,512,000,000 samples, 36.13%)</title><rect x="32.2" y="597" width="426.4" height="15.0" fill="rgb(230,139,29)" rx="2" ry="2" />
<text  x="35.24" y="607.5" >__x64_sys_write</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1150.1" y="341" width="0.2" height="15.0" fill="rgb(244,2,24)" rx="2" ry="2" />
<text  x="1153.13" y="351.5" ></text>
</g>
<g >
<title>evict (4,000,000 samples, 0.02%)</title><rect x="773.3" y="325" width="0.2" height="15.0" fill="rgb(233,182,54)" rx="2" ry="2" />
<text  x="776.29" y="335.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::key (8,000,000 samples, 0.03%)</title><rect x="683.7" y="421" width="0.4" height="15.0" fill="rgb(231,109,32)" rx="2" ry="2" />
<text  x="686.74" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (4,000,000 samples, 0.02%)</title><rect x="972.4" y="293" width="0.2" height="15.0" fill="rgb(217,186,2)" rx="2" ry="2" />
<text  x="975.43" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="942.8" y="421" width="0.2" height="15.0" fill="rgb(209,214,13)" rx="2" ry="2" />
<text  x="945.78" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (4,000,000 samples, 0.02%)</title><rect x="702.6" y="373" width="0.2" height="15.0" fill="rgb(236,203,7)" rx="2" ry="2" />
<text  x="705.57" y="383.5" ></text>
</g>
<g >
<title>[vmlinux] (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="629" width="0.2" height="15.0" fill="rgb(232,183,48)" rx="2" ry="2" />
<text  x="1183.58" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::operator (24,000,000 samples, 0.10%)</title><rect x="497.4" y="485" width="1.2" height="15.0" fill="rgb(238,201,36)" rx="2" ry="2" />
<text  x="500.43" y="495.5" ></text>
</g>
<g >
<title>leveldb::BlockHandle::EncodeTo (4,000,000 samples, 0.02%)</title><rect x="608.6" y="373" width="0.2" height="15.0" fill="rgb(234,23,44)" rx="2" ry="2" />
<text  x="611.61" y="383.5" ></text>
</g>
<g >
<title>__fget_light (28,000,000 samples, 0.12%)</title><rect x="36.4" y="565" width="1.4" height="15.0" fill="rgb(228,198,10)" rx="2" ry="2" />
<text  x="39.44" y="575.5" ></text>
</g>
<g >
<title>leveldb::DestroyDB (4,000,000 samples, 0.02%)</title><rect x="26.0" y="597" width="0.2" height="15.0" fill="rgb(205,159,21)" rx="2" ry="2" />
<text  x="29.03" y="607.5" ></text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="320.9" y="453" width="0.2" height="15.0" fill="rgb(218,216,18)" rx="2" ry="2" />
<text  x="323.93" y="463.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (28,000,000 samples, 0.12%)</title><rect x="612.8" y="373" width="1.4" height="15.0" fill="rgb(236,0,42)" rx="2" ry="2" />
<text  x="615.82" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (12,000,000 samples, 0.05%)</title><rect x="1089.4" y="389" width="0.6" height="15.0" fill="rgb(250,75,29)" rx="2" ry="2" />
<text  x="1092.43" y="399.5" ></text>
</g>
<g >
<title>page_fault (40,000,000 samples, 0.17%)</title><rect x="667.5" y="277" width="2.0" height="15.0" fill="rgb(248,133,2)" rx="2" ry="2" />
<text  x="670.51" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="703.4" y="389" width="0.2" height="15.0" fill="rgb(205,105,11)" rx="2" ry="2" />
<text  x="706.38" y="399.5" ></text>
</g>
<g >
<title>up_write (4,000,000 samples, 0.02%)</title><rect x="449.5" y="485" width="0.2" height="15.0" fill="rgb(214,43,36)" rx="2" ry="2" />
<text  x="452.54" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4,000,000 samples, 0.02%)</title><rect x="1171.4" y="453" width="0.2" height="15.0" fill="rgb(231,53,14)" rx="2" ry="2" />
<text  x="1174.37" y="463.5" ></text>
</g>
<g >
<title>kernel_fpu_end (20,000,000 samples, 0.08%)</title><rect x="445.3" y="389" width="1.0" height="15.0" fill="rgb(230,60,38)" rx="2" ry="2" />
<text  x="448.34" y="399.5" ></text>
</g>
<g >
<title>file_update_time (4,000,000 samples, 0.02%)</title><rect x="25.4" y="517" width="0.2" height="15.0" fill="rgb(237,173,48)" rx="2" ry="2" />
<text  x="28.43" y="527.5" ></text>
</g>
<g >
<title>std::mutex::unlock (8,000,000 samples, 0.03%)</title><rect x="786.7" y="421" width="0.4" height="15.0" fill="rgb(218,9,38)" rx="2" ry="2" />
<text  x="789.72" y="431.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Value (340,000,000 samples, 1.44%)</title><rect x="751.5" y="357" width="17.0" height="15.0" fill="rgb(232,67,28)" rx="2" ry="2" />
<text  x="754.46" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (4,000,000 samples, 0.02%)</title><rect x="947.8" y="421" width="0.2" height="15.0" fill="rgb(230,158,31)" rx="2" ry="2" />
<text  x="950.79" y="431.5" ></text>
</g>
<g >
<title>leveldb::BuildTable (1,392,000,000 samples, 5.91%)</title><rect x="565.7" y="405" width="69.8" height="15.0" fill="rgb(244,95,8)" rx="2" ry="2" />
<text  x="568.74" y="415.5" >leveldb..</text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::Valid (4,000,000 samples, 0.02%)</title><rect x="680.9" y="389" width="0.2" height="15.0" fill="rgb(245,206,38)" rx="2" ry="2" />
<text  x="683.94" y="399.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (16,000,000 samples, 0.07%)</title><rect x="17.6" y="629" width="0.8" height="15.0" fill="rgb(239,203,22)" rx="2" ry="2" />
<text  x="20.61" y="639.5" ></text>
</g>
<g >
<title>__open64 (4,000,000 samples, 0.02%)</title><rect x="566.7" y="389" width="0.2" height="15.0" fill="rgb(208,198,17)" rx="2" ry="2" />
<text  x="569.74" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (16,000,000 samples, 0.07%)</title><rect x="611.2" y="341" width="0.8" height="15.0" fill="rgb(241,75,28)" rx="2" ry="2" />
<text  x="614.22" y="351.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (632,000,000 samples, 2.68%)</title><rect x="412.7" y="469" width="31.6" height="15.0" fill="rgb(214,76,37)" rx="2" ry="2" />
<text  x="415.68" y="479.5" >ex..</text>
</g>
<g >
<title>do_syscall_64 (8,568,000,000 samples, 36.37%)</title><rect x="29.8" y="613" width="429.2" height="15.0" fill="rgb(233,172,5)" rx="2" ry="2" />
<text  x="32.83" y="623.5" >do_syscall_64</text>
</g>
<g >
<title>leveldb::MutexLock::~MutexLock (4,000,000 samples, 0.02%)</title><rect x="1180.8" y="661" width="0.2" height="15.0" fill="rgb(234,134,42)" rx="2" ry="2" />
<text  x="1183.78" y="671.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::~_Reset (32,000,000 samples, 0.14%)</title><rect x="950.4" y="437" width="1.6" height="15.0" fill="rgb(238,193,24)" rx="2" ry="2" />
<text  x="953.39" y="447.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (76,000,000 samples, 0.32%)</title><rect x="1073.8" y="325" width="3.8" height="15.0" fill="rgb(231,29,51)" rx="2" ry="2" />
<text  x="1076.80" y="335.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::KeyIsAfterNode (8,000,000 samples, 0.03%)</title><rect x="1079.0" y="357" width="0.4" height="15.0" fill="rgb(247,32,29)" rx="2" ry="2" />
<text  x="1082.01" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr (24,000,000 samples, 0.10%)</title><rect x="955.2" y="405" width="1.2" height="15.0" fill="rgb(220,157,8)" rx="2" ry="2" />
<text  x="958.20" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_value (4,000,000 samples, 0.02%)</title><rect x="970.0" y="229" width="0.2" height="15.0" fill="rgb(234,100,30)" rx="2" ry="2" />
<text  x="973.03" y="239.5" ></text>
</g>
<g >
<title>__find_get_block (4,000,000 samples, 0.02%)</title><rect x="349.6" y="405" width="0.2" height="15.0" fill="rgb(213,21,17)" rx="2" ry="2" />
<text  x="352.58" y="415.5" ></text>
</g>
<g >
<title>leveldb::MaxGrandParentOverlapBytes (4,000,000 samples, 0.02%)</title><rect x="691.4" y="405" width="0.2" height="15.0" fill="rgb(254,11,8)" rx="2" ry="2" />
<text  x="694.35" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (4,000,000 samples, 0.02%)</title><rect x="1149.3" y="309" width="0.2" height="15.0" fill="rgb(237,188,24)" rx="2" ry="2" />
<text  x="1152.33" y="319.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r10 (4,000,000 samples, 0.02%)</title><rect x="46.9" y="501" width="0.2" height="15.0" fill="rgb(251,79,22)" rx="2" ry="2" />
<text  x="49.86" y="511.5" ></text>
</g>
<g >
<title>evict (4,000,000 samples, 0.02%)</title><rect x="25.6" y="485" width="0.2" height="15.0" fill="rgb(241,97,0)" rx="2" ry="2" />
<text  x="28.63" y="495.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (8,000,000 samples, 0.03%)</title><rect x="349.0" y="357" width="0.4" height="15.0" fill="rgb(238,42,14)" rx="2" ry="2" />
<text  x="351.97" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (4,000,000 samples, 0.02%)</title><rect x="635.3" y="389" width="0.2" height="15.0" fill="rgb(221,103,27)" rx="2" ry="2" />
<text  x="638.26" y="399.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (4,000,000 samples, 0.02%)</title><rect x="633.1" y="357" width="0.2" height="15.0" fill="rgb(208,35,28)" rx="2" ry="2" />
<text  x="636.06" y="367.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_get_pointer (4,000,000 samples, 0.02%)</title><rect x="491.2" y="517" width="0.2" height="15.0" fill="rgb(221,141,4)" rx="2" ry="2" />
<text  x="494.22" y="527.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (8,000,000 samples, 0.03%)</title><rect x="349.0" y="373" width="0.4" height="15.0" fill="rgb(237,44,47)" rx="2" ry="2" />
<text  x="351.97" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (20,000,000 samples, 0.08%)</title><rect x="1008.1" y="389" width="1.0" height="15.0" fill="rgb(242,54,40)" rx="2" ry="2" />
<text  x="1011.09" y="399.5" ></text>
</g>
<g >
<title>down_write (12,000,000 samples, 0.05%)</title><rect x="411.9" y="469" width="0.6" height="15.0" fill="rgb(223,72,52)" rx="2" ry="2" />
<text  x="414.88" y="479.5" ></text>
</g>
<g >
<title>leveldb::DecodeEntry (12,000,000 samples, 0.05%)</title><rect x="673.5" y="293" width="0.6" height="15.0" fill="rgb(228,8,21)" rx="2" ry="2" />
<text  x="676.52" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="1085.6" y="373" width="0.2" height="15.0" fill="rgb(249,121,33)" rx="2" ry="2" />
<text  x="1088.62" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::operator++ (8,000,000 samples, 0.03%)</title><rect x="993.9" y="421" width="0.4" height="15.0" fill="rgb(223,156,53)" rx="2" ry="2" />
<text  x="996.87" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (4,000,000 samples, 0.02%)</title><rect x="1151.7" y="405" width="0.2" height="15.0" fill="rgb(226,165,37)" rx="2" ry="2" />
<text  x="1154.74" y="415.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (24,000,000 samples, 0.10%)</title><rect x="787.5" y="437" width="1.2" height="15.0" fill="rgb(237,118,32)" rx="2" ry="2" />
<text  x="790.52" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (12,000,000 samples, 0.05%)</title><rect x="1139.1" y="389" width="0.6" height="15.0" fill="rgb(217,116,36)" rx="2" ry="2" />
<text  x="1142.11" y="399.5" ></text>
</g>
<g >
<title>_IO_no_init (4,000,000 samples, 0.02%)</title><rect x="14.6" y="645" width="0.2" height="15.0" fill="rgb(234,77,13)" rx="2" ry="2" />
<text  x="17.61" y="655.5" ></text>
</g>
<g >
<title>vfs_write (8,352,000,000 samples, 35.45%)</title><rect x="40.3" y="565" width="418.3" height="15.0" fill="rgb(242,129,37)" rx="2" ry="2" />
<text  x="43.25" y="575.5" >vfs_write</text>
</g>
<g >
<title>__walk_page_range (4,000,000 samples, 0.02%)</title><rect x="10.2" y="405" width="0.2" height="15.0" fill="rgb(237,80,4)" rx="2" ry="2" />
<text  x="13.20" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;leveldb::DBImpl::CompactionState::Output, std::allocator&lt;leveldb::DBImpl::CompactionState::Output&gt; &gt;::size (12,000,000 samples, 0.05%)</title><rect x="702.8" y="405" width="0.6" height="15.0" fill="rgb(230,9,7)" rx="2" ry="2" />
<text  x="705.77" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (12,000,000 samples, 0.05%)</title><rect x="963.2" y="437" width="0.6" height="15.0" fill="rgb(220,116,15)" rx="2" ry="2" />
<text  x="966.22" y="447.5" ></text>
</g>
<g >
<title>std::condition_variable::condition_variable (4,000,000 samples, 0.02%)</title><rect x="997.9" y="421" width="0.2" height="15.0" fill="rgb(243,161,3)" rx="2" ry="2" />
<text  x="1000.87" y="431.5" ></text>
</g>
<g >
<title>__memset (4,000,000 samples, 0.02%)</title><rect x="323.7" y="437" width="0.2" height="15.0" fill="rgb(214,32,5)" rx="2" ry="2" />
<text  x="326.73" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result_base*, false&gt;::_Head_base&lt;std::__future_base::_Result_base*&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="510.4" y="437" width="0.2" height="15.0" fill="rgb(246,57,39)" rx="2" ry="2" />
<text  x="513.45" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt; (8,000,000 samples, 0.03%)</title><rect x="1125.7" y="421" width="0.4" height="15.0" fill="rgb(214,162,20)" rx="2" ry="2" />
<text  x="1128.69" y="431.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (16,000,000 samples, 0.07%)</title><rect x="389.6" y="389" width="0.8" height="15.0" fill="rgb(229,152,3)" rx="2" ry="2" />
<text  x="392.64" y="399.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (8,000,000 samples, 0.03%)</title><rect x="448.1" y="421" width="0.4" height="15.0" fill="rgb(237,66,11)" rx="2" ry="2" />
<text  x="451.14" y="431.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::NoBarrier_Next (4,000,000 samples, 0.02%)</title><rect x="895.3" y="373" width="0.2" height="15.0" fill="rgb(217,0,51)" rx="2" ry="2" />
<text  x="898.30" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (36,000,000 samples, 0.15%)</title><rect x="1155.3" y="357" width="1.8" height="15.0" fill="rgb(206,14,50)" rx="2" ry="2" />
<text  x="1158.34" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8,000,000 samples, 0.03%)</title><rect x="1174.8" y="565" width="0.4" height="15.0" fill="rgb(210,128,36)" rx="2" ry="2" />
<text  x="1177.77" y="575.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::NewNode (16,000,000 samples, 0.07%)</title><rect x="1079.4" y="357" width="0.8" height="15.0" fill="rgb(248,225,49)" rx="2" ry="2" />
<text  x="1082.41" y="367.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (4,000,000 samples, 0.02%)</title><rect x="770.9" y="405" width="0.2" height="15.0" fill="rgb(251,26,47)" rx="2" ry="2" />
<text  x="773.89" y="415.5" ></text>
</g>
<g >
<title>crypto_shash_update (24,000,000 samples, 0.10%)</title><rect x="386.4" y="421" width="1.2" height="15.0" fill="rgb(226,124,7)" rx="2" ry="2" />
<text  x="389.44" y="431.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Next (16,000,000 samples, 0.07%)</title><rect x="1080.2" y="357" width="0.8" height="15.0" fill="rgb(252,158,41)" rx="2" ry="2" />
<text  x="1083.21" y="367.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (4,000,000 samples, 0.02%)</title><rect x="1180.8" y="645" width="0.2" height="15.0" fill="rgb(252,83,43)" rx="2" ry="2" />
<text  x="1183.78" y="655.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (12,000,000 samples, 0.05%)</title><rect x="348.8" y="405" width="0.6" height="15.0" fill="rgb(234,102,30)" rx="2" ry="2" />
<text  x="351.77" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="513.1" y="453" width="0.2" height="15.0" fill="rgb(215,121,33)" rx="2" ry="2" />
<text  x="516.05" y="463.5" ></text>
</g>
<g >
<title>ext4_issue_zeroout (464,000,000 samples, 1.97%)</title><rect x="361.2" y="453" width="23.2" height="15.0" fill="rgb(209,119,20)" rx="2" ry="2" />
<text  x="364.20" y="463.5" >e..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_init_functor (16,000,000 samples, 0.07%)</title><rect x="1131.9" y="405" width="0.8" height="15.0" fill="rgb(243,6,10)" rx="2" ry="2" />
<text  x="1134.90" y="415.5" ></text>
</g>
<g >
<title>memcmp@plt (4,000,000 samples, 0.02%)</title><rect x="1062.4" y="277" width="0.2" height="15.0" fill="rgb(220,187,24)" rx="2" ry="2" />
<text  x="1065.38" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (4,000,000 samples, 0.02%)</title><rect x="634.9" y="373" width="0.2" height="15.0" fill="rgb(214,90,39)" rx="2" ry="2" />
<text  x="637.86" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="515.9" y="405" width="0.2" height="15.0" fill="rgb(210,210,52)" rx="2" ry="2" />
<text  x="518.86" y="415.5" ></text>
</g>
<g >
<title>leveldb::Options::Options (4,000,000 samples, 0.02%)</title><rect x="26.2" y="613" width="0.2" height="15.0" fill="rgb(235,123,25)" rx="2" ry="2" />
<text  x="29.23" y="623.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (4,000,000 samples, 0.02%)</title><rect x="939.0" y="357" width="0.2" height="15.0" fill="rgb(237,110,41)" rx="2" ry="2" />
<text  x="941.97" y="367.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (4,000,000 samples, 0.02%)</title><rect x="1099.6" y="389" width="0.2" height="15.0" fill="rgb(243,224,45)" rx="2" ry="2" />
<text  x="1102.65" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="703.4" y="373" width="0.2" height="15.0" fill="rgb(240,160,46)" rx="2" ry="2" />
<text  x="706.38" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="504.4" y="389" width="0.2" height="15.0" fill="rgb(254,148,4)" rx="2" ry="2" />
<text  x="507.44" y="399.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Writer::Writer (12,000,000 samples, 0.05%)</title><rect x="783.5" y="437" width="0.6" height="15.0" fill="rgb(222,194,11)" rx="2" ry="2" />
<text  x="786.51" y="447.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (4,000,000 samples, 0.02%)</title><rect x="452.8" y="485" width="0.2" height="15.0" fill="rgb(246,130,54)" rx="2" ry="2" />
<text  x="455.75" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1159.7" y="357" width="0.2" height="15.0" fill="rgb(206,38,28)" rx="2" ry="2" />
<text  x="1162.75" y="367.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="678.3" y="309" width="0.2" height="15.0" fill="rgb(213,175,5)" rx="2" ry="2" />
<text  x="681.33" y="319.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Lock (4,000,000 samples, 0.02%)</title><rect x="785.5" y="421" width="0.2" height="15.0" fill="rgb(237,94,34)" rx="2" ry="2" />
<text  x="788.51" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,000,000 samples, 0.03%)</title><rect x="1153.9" y="421" width="0.4" height="15.0" fill="rgb(209,70,25)" rx="2" ry="2" />
<text  x="1156.94" y="431.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (24,000,000 samples, 0.10%)</title><rect x="697.8" y="357" width="1.2" height="15.0" fill="rgb(219,53,24)" rx="2" ry="2" />
<text  x="700.77" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="1131.3" y="405" width="0.2" height="15.0" fill="rgb(217,36,51)" rx="2" ry="2" />
<text  x="1134.30" y="415.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Lock (28,000,000 samples, 0.12%)</title><rect x="932.0" y="437" width="1.4" height="15.0" fill="rgb(206,54,15)" rx="2" ry="2" />
<text  x="934.96" y="447.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::~__basic_future (8,000,000 samples, 0.03%)</title><rect x="1140.3" y="437" width="0.4" height="15.0" fill="rgb(235,188,29)" rx="2" ry="2" />
<text  x="1143.32" y="447.5" ></text>
</g>
<g >
<title>ext4_mb_use_preallocated.constprop.33 (4,000,000 samples, 0.02%)</title><rect x="360.6" y="421" width="0.2" height="15.0" fill="rgb(217,88,37)" rx="2" ry="2" />
<text  x="363.59" y="431.5" ></text>
</g>
<g >
<title>generic_update_time (4,000,000 samples, 0.02%)</title><rect x="25.4" y="501" width="0.2" height="15.0" fill="rgb(246,76,11)" rx="2" ry="2" />
<text  x="28.43" y="511.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::MakeRoomForWrite (20,000,000 samples, 0.08%)</title><rect x="782.5" y="437" width="1.0" height="15.0" fill="rgb(211,97,24)" rx="2" ry="2" />
<text  x="785.51" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (12,000,000 samples, 0.05%)</title><rect x="1000.1" y="389" width="0.6" height="15.0" fill="rgb(206,190,34)" rx="2" ry="2" />
<text  x="1003.08" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (8,000,000 samples, 0.03%)</title><rect x="786.3" y="389" width="0.4" height="15.0" fill="rgb(244,221,52)" rx="2" ry="2" />
<text  x="789.32" y="399.5" ></text>
</g>
<g >
<title>std::atomic_flag::atomic_flag (4,000,000 samples, 0.02%)</title><rect x="1148.1" y="293" width="0.2" height="15.0" fill="rgb(238,196,10)" rx="2" ry="2" />
<text  x="1151.13" y="303.5" ></text>
</g>
<g >
<title>__gthread_active_p (4,000,000 samples, 0.02%)</title><rect x="1124.5" y="389" width="0.2" height="15.0" fill="rgb(241,83,30)" rx="2" ry="2" />
<text  x="1127.49" y="399.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (8,000,000 samples, 0.03%)</title><rect x="696.2" y="341" width="0.4" height="15.0" fill="rgb(215,152,30)" rx="2" ry="2" />
<text  x="699.16" y="351.5" ></text>
</g>
<g >
<title>do_rmdir (4,000,000 samples, 0.02%)</title><rect x="26.0" y="517" width="0.2" height="15.0" fill="rgb(235,4,36)" rx="2" ry="2" />
<text  x="29.03" y="527.5" ></text>
</g>
<g >
<title>dax_insert_mapping_entry (8,000,000 samples, 0.03%)</title><rect x="668.3" y="133" width="0.4" height="15.0" fill="rgb(237,123,46)" rx="2" ry="2" />
<text  x="671.32" y="143.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::Put (2,076,000,000 samples, 8.81%)</title><rect x="793.1" y="405" width="104.0" height="15.0" fill="rgb(212,30,7)" rx="2" ry="2" />
<text  x="796.13" y="415.5" >leveldb::(an..</text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::~_Result (28,000,000 samples, 0.12%)</title><rect x="1161.0" y="261" width="1.4" height="15.0" fill="rgb(254,93,25)" rx="2" ry="2" />
<text  x="1163.95" y="271.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::RandomHeight (24,000,000 samples, 0.10%)</title><rect x="1083.6" y="357" width="1.2" height="15.0" fill="rgb(225,31,17)" rx="2" ry="2" />
<text  x="1086.62" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (8,000,000 samples, 0.03%)</title><rect x="773.9" y="437" width="0.4" height="15.0" fill="rgb(240,63,32)" rx="2" ry="2" />
<text  x="776.89" y="447.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (32,000,000 samples, 0.14%)</title><rect x="12.6" y="629" width="1.6" height="15.0" fill="rgb(241,11,54)" rx="2" ry="2" />
<text  x="15.60" y="639.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (132,000,000 samples, 0.56%)</title><rect x="625.6" y="293" width="6.7" height="15.0" fill="rgb(234,182,54)" rx="2" ry="2" />
<text  x="628.64" y="303.5" ></text>
</g>
<g >
<title>rcu_all_qs (4,000,000 samples, 0.02%)</title><rect x="444.1" y="453" width="0.2" height="15.0" fill="rgb(234,162,8)" rx="2" ry="2" />
<text  x="447.14" y="463.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::FindShortestSeparator (12,000,000 samples, 0.05%)</title><rect x="745.8" y="405" width="0.6" height="15.0" fill="rgb(236,28,44)" rx="2" ry="2" />
<text  x="748.85" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::MemTableInserter (12,000,000 samples, 0.05%)</title><rect x="1004.3" y="421" width="0.6" height="15.0" fill="rgb(249,148,22)" rx="2" ry="2" />
<text  x="1007.29" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_write (4,000,000 samples, 0.02%)</title><rect x="25.4" y="597" width="0.2" height="15.0" fill="rgb(245,126,16)" rx="2" ry="2" />
<text  x="28.43" y="607.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (64,000,000 samples, 0.27%)</title><rect x="407.5" y="405" width="3.2" height="15.0" fill="rgb(235,72,47)" rx="2" ry="2" />
<text  x="410.47" y="415.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::Next (36,000,000 samples, 0.15%)</title><rect x="677.3" y="357" width="1.8" height="15.0" fill="rgb(234,196,21)" rx="2" ry="2" />
<text  x="680.33" y="367.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (4,000,000 samples, 0.02%)</title><rect x="616.0" y="309" width="0.2" height="15.0" fill="rgb(232,222,46)" rx="2" ry="2" />
<text  x="619.03" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="506.0" y="373" width="0.2" height="15.0" fill="rgb(254,17,23)" rx="2" ry="2" />
<text  x="509.04" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::pop_front (8,000,000 samples, 0.03%)</title><rect x="937.4" y="437" width="0.4" height="15.0" fill="rgb(219,147,13)" rx="2" ry="2" />
<text  x="940.37" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4,000,000 samples, 0.02%)</title><rect x="702.0" y="357" width="0.2" height="15.0" fill="rgb(226,218,0)" rx="2" ry="2" />
<text  x="704.97" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (4,000,000 samples, 0.02%)</title><rect x="964.4" y="357" width="0.2" height="15.0" fill="rgb(246,191,6)" rx="2" ry="2" />
<text  x="967.42" y="367.5" ></text>
</g>
<g >
<title>__kernel_fpu_end (8,000,000 samples, 0.03%)</title><rect x="386.8" y="373" width="0.4" height="15.0" fill="rgb(213,68,8)" rx="2" ry="2" />
<text  x="389.84" y="383.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Equal (64,000,000 samples, 0.27%)</title><rect x="798.1" y="357" width="3.2" height="15.0" fill="rgb(224,77,2)" rx="2" ry="2" />
<text  x="801.14" y="367.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (20,000,000 samples, 0.08%)</title><rect x="696.8" y="341" width="1.0" height="15.0" fill="rgb(213,227,42)" rx="2" ry="2" />
<text  x="699.76" y="351.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::FindGreaterOrEqual (1,316,000,000 samples, 5.59%)</title><rect x="1013.1" y="357" width="65.9" height="15.0" fill="rgb(245,201,22)" rx="2" ry="2" />
<text  x="1016.10" y="367.5" >leveldb..</text>
</g>
<g >
<title>std::__future_base::_Result_base::_Deleter::operator (36,000,000 samples, 0.15%)</title><rect x="1161.0" y="293" width="1.8" height="15.0" fill="rgb(254,6,49)" rx="2" ry="2" />
<text  x="1163.95" y="303.5" ></text>
</g>
<g >
<title>std::operator&amp; (4,000,000 samples, 0.02%)</title><rect x="806.6" y="325" width="0.2" height="15.0" fill="rgb(240,191,31)" rx="2" ry="2" />
<text  x="809.55" y="335.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (24,000,000 samples, 0.10%)</title><rect x="878.5" y="277" width="1.2" height="15.0" fill="rgb(217,16,24)" rx="2" ry="2" />
<text  x="881.47" y="287.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (8,000,000 samples, 0.03%)</title><rect x="998.1" y="421" width="0.4" height="15.0" fill="rgb(212,41,51)" rx="2" ry="2" />
<text  x="1001.07" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::value (8,000,000 samples, 0.03%)</title><rect x="686.3" y="357" width="0.4" height="15.0" fill="rgb(208,107,2)" rx="2" ry="2" />
<text  x="689.35" y="367.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.11 (8,000,000 samples, 0.03%)</title><rect x="448.1" y="405" width="0.4" height="15.0" fill="rgb(217,25,5)" rx="2" ry="2" />
<text  x="451.14" y="415.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (8,000,000 samples, 0.03%)</title><rect x="913.5" y="341" width="0.4" height="15.0" fill="rgb(239,66,40)" rx="2" ry="2" />
<text  x="916.53" y="351.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="697.6" y="325" width="0.2" height="15.0" fill="rgb(233,93,48)" rx="2" ry="2" />
<text  x="700.57" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (4,000,000 samples, 0.02%)</title><rect x="497.2" y="485" width="0.2" height="15.0" fill="rgb(211,159,4)" rx="2" ry="2" />
<text  x="500.23" y="495.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::WriteLevel0Table (1,396,000,000 samples, 5.93%)</title><rect x="565.7" y="421" width="70.0" height="15.0" fill="rgb(240,84,0)" rx="2" ry="2" />
<text  x="568.74" y="431.5" >leveldb..</text>
</g>
<g >
<title>[unknown] (8,000,000 samples, 0.03%)</title><rect x="10.0" y="565" width="0.4" height="15.0" fill="rgb(249,22,14)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>ext4_group_desc_csum (4,000,000 samples, 0.02%)</title><rect x="25.6" y="373" width="0.2" height="15.0" fill="rgb(223,56,48)" rx="2" ry="2" />
<text  x="28.63" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="25.4" y="613" width="0.2" height="15.0" fill="rgb(228,117,21)" rx="2" ry="2" />
<text  x="28.43" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (4,000,000 samples, 0.02%)</title><rect x="10.0" y="469" width="0.2" height="15.0" fill="rgb(223,111,25)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::exception_ptr (4,000,000 samples, 0.02%)</title><rect x="1136.3" y="421" width="0.2" height="15.0" fill="rgb(210,137,32)" rx="2" ry="2" />
<text  x="1139.31" y="431.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (4,000,000 samples, 0.02%)</title><rect x="1162.2" y="229" width="0.2" height="15.0" fill="rgb(226,60,36)" rx="2" ry="2" />
<text  x="1165.15" y="239.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (4,000,000 samples, 0.02%)</title><rect x="707.4" y="421" width="0.2" height="15.0" fill="rgb(235,116,22)" rx="2" ry="2" />
<text  x="710.38" y="431.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (8,000,000 samples, 0.03%)</title><rect x="1149.7" y="341" width="0.4" height="15.0" fill="rgb(213,99,24)" rx="2" ry="2" />
<text  x="1152.73" y="351.5" ></text>
</g>
<g >
<title>crypto_shash_update (4,000,000 samples, 0.02%)</title><rect x="349.2" y="341" width="0.2" height="15.0" fill="rgb(239,3,23)" rx="2" ry="2" />
<text  x="352.17" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt; &gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (4,000,000 samples, 0.02%)</title><rect x="972.8" y="373" width="0.2" height="15.0" fill="rgb(244,159,33)" rx="2" ry="2" />
<text  x="975.83" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::front (28,000,000 samples, 0.12%)</title><rect x="1126.1" y="437" width="1.4" height="15.0" fill="rgb(226,17,5)" rx="2" ry="2" />
<text  x="1129.09" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_rmdir (4,000,000 samples, 0.02%)</title><rect x="26.0" y="533" width="0.2" height="15.0" fill="rgb(233,39,27)" rx="2" ry="2" />
<text  x="29.03" y="543.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::RemoveObsoleteFiles (8,000,000 samples, 0.03%)</title><rect x="773.3" y="437" width="0.4" height="15.0" fill="rgb(240,154,49)" rx="2" ry="2" />
<text  x="776.29" y="447.5" ></text>
</g>
<g >
<title>exit_mmap (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="565" width="0.2" height="15.0" fill="rgb(214,7,4)" rx="2" ry="2" />
<text  x="1183.58" y="575.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (4,000,000 samples, 0.02%)</title><rect x="999.3" y="405" width="0.2" height="15.0" fill="rgb(225,9,6)" rx="2" ry="2" />
<text  x="1002.28" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::emplace_back&lt;unsigned int&gt; (4,000,000 samples, 0.02%)</title><rect x="607.8" y="341" width="0.2" height="15.0" fill="rgb(235,190,37)" rx="2" ry="2" />
<text  x="610.81" y="351.5" ></text>
</g>
<g >
<title>__fget_light (36,000,000 samples, 0.15%)</title><rect x="33.6" y="549" width="1.8" height="15.0" fill="rgb(248,19,37)" rx="2" ry="2" />
<text  x="36.64" y="559.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="517" width="0.2" height="15.0" fill="rgb(249,229,50)" rx="2" ry="2" />
<text  x="1183.58" y="527.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (4,000,000 samples, 0.02%)</title><rect x="940.8" y="405" width="0.2" height="15.0" fill="rgb(224,54,23)" rx="2" ry="2" />
<text  x="943.78" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="883.5" y="309" width="0.4" height="15.0" fill="rgb(210,98,44)" rx="2" ry="2" />
<text  x="886.48" y="319.5" ></text>
</g>
<g >
<title>__find_get_block (60,000,000 samples, 0.25%)</title><rect x="438.7" y="405" width="3.0" height="15.0" fill="rgb(249,225,2)" rx="2" ry="2" />
<text  x="441.73" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="677.1" y="309" width="0.2" height="15.0" fill="rgb(240,141,7)" rx="2" ry="2" />
<text  x="680.13" y="319.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::ParseNextKey (4,000,000 samples, 0.02%)</title><rect x="669.7" y="293" width="0.2" height="15.0" fill="rgb(209,51,19)" rx="2" ry="2" />
<text  x="672.72" y="303.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (4,000,000 samples, 0.02%)</title><rect x="447.9" y="437" width="0.2" height="15.0" fill="rgb(224,48,26)" rx="2" ry="2" />
<text  x="450.94" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="654.1" y="373" width="0.2" height="15.0" fill="rgb(229,118,5)" rx="2" ry="2" />
<text  x="657.09" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="661" width="0.2" height="15.0" fill="rgb(241,101,27)" rx="2" ry="2" />
<text  x="1183.58" y="671.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (16,000,000 samples, 0.07%)</title><rect x="772.3" y="421" width="0.8" height="15.0" fill="rgb(229,105,9)" rx="2" ry="2" />
<text  x="775.29" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::swap (136,000,000 samples, 0.58%)</title><rect x="517.9" y="517" width="6.8" height="15.0" fill="rgb(215,130,17)" rx="2" ry="2" />
<text  x="520.86" y="527.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (32,000,000 samples, 0.14%)</title><rect x="638.5" y="421" width="1.6" height="15.0" fill="rgb(218,7,15)" rx="2" ry="2" />
<text  x="641.47" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt;*, unsigned long&gt; (4,000,000 samples, 0.02%)</title><rect x="26.2" y="501" width="0.2" height="15.0" fill="rgb(234,1,17)" rx="2" ry="2" />
<text  x="29.23" y="511.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::WriteUnbuffered (32,000,000 samples, 0.14%)</title><rect x="912.3" y="373" width="1.6" height="15.0" fill="rgb(208,55,30)" rx="2" ry="2" />
<text  x="915.33" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (16,000,000 samples, 0.07%)</title><rect x="720.2" y="357" width="0.8" height="15.0" fill="rgb(207,48,28)" rx="2" ry="2" />
<text  x="723.20" y="367.5" ></text>
</g>
<g >
<title>generic_make_request (404,000,000 samples, 1.71%)</title><rect x="364.2" y="389" width="20.2" height="15.0" fill="rgb(234,140,35)" rx="2" ry="2" />
<text  x="367.20" y="399.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (20,000,000 samples, 0.08%)</title><rect x="716.2" y="389" width="1.0" height="15.0" fill="rgb(221,84,12)" rx="2" ry="2" />
<text  x="719.20" y="399.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::RandomGenerator::Generate (8,000,000 samples, 0.03%)</title><rect x="988.7" y="469" width="0.4" height="15.0" fill="rgb(245,67,31)" rx="2" ry="2" />
<text  x="991.66" y="479.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (5,008,000,000 samples, 21.26%)</title><rect x="66.3" y="453" width="250.8" height="15.0" fill="rgb(219,44,43)" rx="2" ry="2" />
<text  x="69.30" y="463.5" >__srcu_read_unlock</text>
</g>
<g >
<title>from_kgid (4,000,000 samples, 0.02%)</title><rect x="436.3" y="437" width="0.2" height="15.0" fill="rgb(242,211,38)" rx="2" ry="2" />
<text  x="439.32" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="972.0" y="261" width="0.2" height="15.0" fill="rgb(228,83,14)" rx="2" ry="2" />
<text  x="975.03" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8,000,000 samples, 0.03%)</title><rect x="609.4" y="341" width="0.4" height="15.0" fill="rgb(210,35,2)" rx="2" ry="2" />
<text  x="612.42" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (4,000,000 samples, 0.02%)</title><rect x="499.4" y="469" width="0.2" height="15.0" fill="rgb(244,7,43)" rx="2" ry="2" />
<text  x="502.43" y="479.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Count (12,000,000 samples, 0.05%)</title><rect x="789.7" y="437" width="0.6" height="15.0" fill="rgb(232,198,53)" rx="2" ry="2" />
<text  x="792.72" y="447.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (356,000,000 samples, 1.51%)</title><rect x="1031.5" y="309" width="17.9" height="15.0" fill="rgb(208,182,0)" rx="2" ry="2" />
<text  x="1034.53" y="319.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::value (4,000,000 samples, 0.02%)</title><rect x="635.5" y="405" width="0.2" height="15.0" fill="rgb(214,62,26)" rx="2" ry="2" />
<text  x="638.46" y="415.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::~promise (264,000,000 samples, 1.12%)</title><rect x="1152.5" y="453" width="13.3" height="15.0" fill="rgb(207,70,14)" rx="2" ry="2" />
<text  x="1155.54" y="463.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (100,000,000 samples, 0.42%)</title><rect x="717.4" y="389" width="5.0" height="15.0" fill="rgb(240,87,48)" rx="2" ry="2" />
<text  x="720.40" y="399.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (4,000,000 samples, 0.02%)</title><rect x="14.2" y="645" width="0.2" height="15.0" fill="rgb(209,98,1)" rx="2" ry="2" />
<text  x="17.21" y="655.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::Next (416,000,000 samples, 1.77%)</title><rect x="660.1" y="389" width="20.8" height="15.0" fill="rgb(246,6,42)" rx="2" ry="2" />
<text  x="663.10" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (8,000,000 samples, 0.03%)</title><rect x="934.2" y="437" width="0.4" height="15.0" fill="rgb(246,229,1)" rx="2" ry="2" />
<text  x="937.17" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (788,000,000 samples, 3.34%)</title><rect x="488.2" y="565" width="39.5" height="15.0" fill="rgb(235,54,26)" rx="2" ry="2" />
<text  x="491.21" y="575.5" >std..</text>
</g>
<g >
<title>leveldb::TableBuilder::WriteBlock (28,000,000 samples, 0.12%)</title><rect x="700.4" y="341" width="1.4" height="15.0" fill="rgb(211,42,51)" rx="2" ry="2" />
<text  x="703.37" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8,000,000 samples, 0.03%)</title><rect x="695.0" y="341" width="0.4" height="15.0" fill="rgb(208,92,51)" rx="2" ry="2" />
<text  x="697.96" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_Result_base::_Deleter&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="523.1" y="501" width="0.2" height="15.0" fill="rgb(249,45,53)" rx="2" ry="2" />
<text  x="526.07" y="511.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (92,000,000 samples, 0.39%)</title><rect x="731.2" y="373" width="4.6" height="15.0" fill="rgb(225,153,33)" rx="2" ry="2" />
<text  x="734.22" y="383.5" ></text>
</g>
<g >
<title>leveldb::log::Writer::EmitPhysicalRecord (496,000,000 samples, 2.11%)</title><rect x="907.1" y="421" width="24.9" height="15.0" fill="rgb(220,26,36)" rx="2" ry="2" />
<text  x="910.12" y="431.5" >l..</text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="1001.3" y="405" width="0.2" height="15.0" fill="rgb(210,130,34)" rx="2" ry="2" />
<text  x="1004.28" y="415.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (4,000,000 samples, 0.02%)</title><rect x="441.9" y="421" width="0.2" height="15.0" fill="rgb(217,209,22)" rx="2" ry="2" />
<text  x="444.93" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;void  (4,000,000 samples, 0.02%)</title><rect x="529.7" y="581" width="0.2" height="15.0" fill="rgb(236,81,27)" rx="2" ry="2" />
<text  x="532.68" y="591.5" ></text>
</g>
<g >
<title>kfree (8,000,000 samples, 0.03%)</title><rect x="360.8" y="437" width="0.4" height="15.0" fill="rgb(205,174,1)" rx="2" ry="2" />
<text  x="363.79" y="447.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__future_base::_State_baseV2&gt; (152,000,000 samples, 0.65%)</title><rect x="1143.9" y="437" width="7.6" height="15.0" fill="rgb(238,95,33)" rx="2" ry="2" />
<text  x="1146.92" y="447.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Add (580,000,000 samples, 2.46%)</title><rect x="710.8" y="405" width="29.0" height="15.0" fill="rgb(210,65,24)" rx="2" ry="2" />
<text  x="713.79" y="415.5" >le..</text>
</g>
<g >
<title>leveldb::crc32c::Extend (320,000,000 samples, 1.36%)</title><rect x="915.7" y="405" width="16.1" height="15.0" fill="rgb(209,187,4)" rx="2" ry="2" />
<text  x="918.74" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (8,000,000 samples, 0.03%)</title><rect x="1189.4" y="661" width="0.4" height="15.0" fill="rgb(231,142,51)" rx="2" ry="2" />
<text  x="1192.40" y="671.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Writer::Writer (4,000,000 samples, 0.02%)</title><rect x="945.2" y="453" width="0.2" height="15.0" fill="rgb(231,216,32)" rx="2" ry="2" />
<text  x="948.19" y="463.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (12,000,000 samples, 0.05%)</title><rect x="977.4" y="469" width="0.6" height="15.0" fill="rgb(207,188,27)" rx="2" ry="2" />
<text  x="980.44" y="479.5" ></text>
</g>
<g >
<title>__kernel_fpu_begin (8,000,000 samples, 0.03%)</title><rect x="386.4" y="373" width="0.4" height="15.0" fill="rgb(221,135,25)" rx="2" ry="2" />
<text  x="389.44" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt; (8,000,000 samples, 0.03%)</title><rect x="936.0" y="421" width="0.4" height="15.0" fill="rgb(239,201,5)" rx="2" ry="2" />
<text  x="938.97" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::~MemTableInserter (8,000,000 samples, 0.03%)</title><rect x="1005.5" y="421" width="0.4" height="15.0" fill="rgb(206,25,10)" rx="2" ry="2" />
<text  x="1008.49" y="431.5" ></text>
</g>
<g >
<title>crc_29 (4,000,000 samples, 0.02%)</title><rect x="387.2" y="405" width="0.2" height="15.0" fill="rgb(245,146,3)" rx="2" ry="2" />
<text  x="390.24" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (16,000,000 samples, 0.07%)</title><rect x="528.9" y="581" width="0.8" height="15.0" fill="rgb(205,136,13)" rx="2" ry="2" />
<text  x="531.88" y="591.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (4,000,000 samples, 0.02%)</title><rect x="583.2" y="357" width="0.2" height="15.0" fill="rgb(240,104,0)" rx="2" ry="2" />
<text  x="586.17" y="367.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed64 (20,000,000 samples, 0.08%)</title><rect x="1010.5" y="373" width="1.0" height="15.0" fill="rgb(237,9,2)" rx="2" ry="2" />
<text  x="1013.50" y="383.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (12,156,000,000 samples, 51.60%)</title><rect x="565.1" y="597" width="608.9" height="15.0" fill="rgb(245,54,1)" rx="2" ry="2" />
<text  x="568.14" y="607.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>leveldb::Block::Iter::NextEntryOffset (12,000,000 samples, 0.05%)</title><rect x="677.9" y="325" width="0.6" height="15.0" fill="rgb(253,92,3)" rx="2" ry="2" />
<text  x="680.93" y="335.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (4,000,000 samples, 0.02%)</title><rect x="773.3" y="277" width="0.2" height="15.0" fill="rgb(228,19,54)" rx="2" ry="2" />
<text  x="776.29" y="287.5" ></text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="356.6" y="389" width="0.2" height="15.0" fill="rgb(246,195,50)" rx="2" ry="2" />
<text  x="359.59" y="399.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (280,000,000 samples, 1.19%)</title><rect x="422.3" y="437" width="14.0" height="15.0" fill="rgb(239,49,17)" rx="2" ry="2" />
<text  x="425.30" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl (8,000,000 samples, 0.03%)</title><rect x="1152.1" y="389" width="0.4" height="15.0" fill="rgb(231,71,4)" rx="2" ry="2" />
<text  x="1155.14" y="399.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::get_future (52,000,000 samples, 0.22%)</title><rect x="1140.9" y="453" width="2.6" height="15.0" fill="rgb(241,0,32)" rx="2" ry="2" />
<text  x="1143.92" y="463.5" ></text>
</g>
<g >
<title>leveldb::ParseInternalKey (48,000,000 samples, 0.20%)</title><rect x="704.4" y="421" width="2.4" height="15.0" fill="rgb(243,65,26)" rx="2" ry="2" />
<text  x="707.38" y="431.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (72,000,000 samples, 0.31%)</title><rect x="424.9" y="405" width="3.6" height="15.0" fill="rgb(213,97,34)" rx="2" ry="2" />
<text  x="427.90" y="415.5" ></text>
</g>
<g >
<title>ext4_ext_next_allocated_block (8,000,000 samples, 0.03%)</title><rect x="349.8" y="437" width="0.4" height="15.0" fill="rgb(218,54,52)" rx="2" ry="2" />
<text  x="352.78" y="447.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::InitDataBlock (16,000,000 samples, 0.07%)</title><rect x="661.7" y="357" width="0.8" height="15.0" fill="rgb(241,200,18)" rx="2" ry="2" />
<text  x="664.70" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (20,000,000 samples, 0.08%)</title><rect x="738.4" y="389" width="1.0" height="15.0" fill="rgb(210,213,28)" rx="2" ry="2" />
<text  x="741.43" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (8,000,000 samples, 0.03%)</title><rect x="1140.3" y="405" width="0.4" height="15.0" fill="rgb(240,84,39)" rx="2" ry="2" />
<text  x="1143.32" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="527.1" y="517" width="0.2" height="15.0" fill="rgb(234,46,4)" rx="2" ry="2" />
<text  x="530.08" y="527.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="673.3" y="277" width="0.2" height="15.0" fill="rgb(230,118,43)" rx="2" ry="2" />
<text  x="676.32" y="287.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_State_baseV2 (28,000,000 samples, 0.12%)</title><rect x="958.6" y="309" width="1.4" height="15.0" fill="rgb(210,171,11)" rx="2" ry="2" />
<text  x="961.61" y="319.5" ></text>
</g>
<g >
<title>ext4_group_desc_csum_set (4,000,000 samples, 0.02%)</title><rect x="25.6" y="389" width="0.2" height="15.0" fill="rgb(229,180,10)" rx="2" ry="2" />
<text  x="28.63" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (8,000,000 samples, 0.03%)</title><rect x="881.5" y="293" width="0.4" height="15.0" fill="rgb(225,30,26)" rx="2" ry="2" />
<text  x="884.48" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="515.5" y="453" width="0.2" height="15.0" fill="rgb(209,195,50)" rx="2" ry="2" />
<text  x="518.46" y="463.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (4,000,000 samples, 0.02%)</title><rect x="443.9" y="437" width="0.2" height="15.0" fill="rgb(220,49,15)" rx="2" ry="2" />
<text  x="446.94" y="447.5" ></text>
</g>
<g >
<title>[unknown] (12,000,000 samples, 0.05%)</title><rect x="10.0" y="613" width="0.6" height="15.0" fill="rgb(205,73,50)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8,000,000 samples, 0.03%)</title><rect x="983.4" y="453" width="0.5" height="15.0" fill="rgb(223,125,40)" rx="2" ry="2" />
<text  x="986.45" y="463.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::Benchmark (4,000,000 samples, 0.02%)</title><rect x="25.6" y="613" width="0.2" height="15.0" fill="rgb(219,42,9)" rx="2" ry="2" />
<text  x="28.63" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (4,000,000 samples, 0.02%)</title><rect x="632.3" y="341" width="0.2" height="15.0" fill="rgb(213,112,45)" rx="2" ry="2" />
<text  x="635.25" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_free (12,000,000 samples, 0.05%)</title><rect x="342.2" y="437" width="0.6" height="15.0" fill="rgb(211,218,43)" rx="2" ry="2" />
<text  x="345.16" y="447.5" ></text>
</g>
<g >
<title>_raw_read_lock (4,000,000 samples, 0.02%)</title><rect x="668.7" y="117" width="0.2" height="15.0" fill="rgb(235,17,4)" rx="2" ry="2" />
<text  x="671.72" y="127.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Flush (4,000,000 samples, 0.02%)</title><rect x="700.2" y="341" width="0.2" height="15.0" fill="rgb(210,201,27)" rx="2" ry="2" />
<text  x="703.17" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (24,000,000 samples, 0.10%)</title><rect x="996.3" y="389" width="1.2" height="15.0" fill="rgb(245,94,14)" rx="2" ry="2" />
<text  x="999.27" y="399.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::value (32,000,000 samples, 0.14%)</title><rect x="685.3" y="389" width="1.6" height="15.0" fill="rgb(232,180,12)" rx="2" ry="2" />
<text  x="688.34" y="399.5" ></text>
</g>
<g >
<title>unmap_vmas (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="549" width="0.2" height="15.0" fill="rgb(247,212,28)" rx="2" ry="2" />
<text  x="1183.98" y="559.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__future_base::_State_baseV2&gt; (120,000,000 samples, 0.51%)</title><rect x="956.4" y="437" width="6.0" height="15.0" fill="rgb(253,143,49)" rx="2" ry="2" />
<text  x="959.40" y="447.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (8,000,000 samples, 0.03%)</title><rect x="356.6" y="405" width="0.4" height="15.0" fill="rgb(241,205,17)" rx="2" ry="2" />
<text  x="359.59" y="415.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (4,000,000 samples, 0.02%)</title><rect x="717.2" y="389" width="0.2" height="15.0" fill="rgb(225,90,32)" rx="2" ry="2" />
<text  x="720.20" y="399.5" ></text>
</g>
<g >
<title>ext4_dax_huge_fault (24,000,000 samples, 0.10%)</title><rect x="668.3" y="165" width="1.2" height="15.0" fill="rgb(247,131,13)" rx="2" ry="2" />
<text  x="671.32" y="175.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (128,000,000 samples, 0.54%)</title><rect x="1144.7" y="373" width="6.4" height="15.0" fill="rgb(222,148,26)" rx="2" ry="2" />
<text  x="1147.72" y="383.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (4,000,000 samples, 0.02%)</title><rect x="445.1" y="389" width="0.2" height="15.0" fill="rgb(237,35,1)" rx="2" ry="2" />
<text  x="448.14" y="399.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::promise (128,000,000 samples, 0.54%)</title><rect x="956.4" y="453" width="6.4" height="15.0" fill="rgb(250,21,2)" rx="2" ry="2" />
<text  x="959.40" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (8,000,000 samples, 0.03%)</title><rect x="1132.7" y="405" width="0.4" height="15.0" fill="rgb(207,72,45)" rx="2" ry="2" />
<text  x="1135.70" y="415.5" ></text>
</g>
<g >
<title>__getblk_gfp (8,000,000 samples, 0.03%)</title><rect x="360.0" y="373" width="0.4" height="15.0" fill="rgb(215,67,17)" rx="2" ry="2" />
<text  x="362.99" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (4,000,000 samples, 0.02%)</title><rect x="662.3" y="277" width="0.2" height="15.0" fill="rgb(226,211,50)" rx="2" ry="2" />
<text  x="665.31" y="287.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::SetCount (12,000,000 samples, 0.05%)</title><rect x="1170.8" y="453" width="0.6" height="15.0" fill="rgb(220,6,21)" rx="2" ry="2" />
<text  x="1173.77" y="463.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::_Reset (4,000,000 samples, 0.02%)</title><rect x="1134.9" y="453" width="0.2" height="15.0" fill="rgb(253,87,0)" rx="2" ry="2" />
<text  x="1137.91" y="463.5" ></text>
</g>
<g >
<title>leveldb::Slice::remove_prefix (4,000,000 samples, 0.02%)</title><rect x="791.7" y="421" width="0.2" height="15.0" fill="rgb(209,182,28)" rx="2" ry="2" />
<text  x="794.72" y="431.5" ></text>
</g>
<g >
<title>__virt_addr_valid (20,000,000 samples, 0.08%)</title><rect x="53.5" y="421" width="1.0" height="15.0" fill="rgb(246,60,48)" rx="2" ry="2" />
<text  x="56.47" y="431.5" ></text>
</g>
<g >
<title>__madvise (4,000,000 samples, 0.02%)</title><rect x="10.2" y="533" width="0.2" height="15.0" fill="rgb(220,113,36)" rx="2" ry="2" />
<text  x="13.20" y="543.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::~MemTableInserter (4,000,000 samples, 0.02%)</title><rect x="791.3" y="421" width="0.2" height="15.0" fill="rgb(252,83,41)" rx="2" ry="2" />
<text  x="794.32" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt; &gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (76,000,000 samples, 0.32%)</title><rect x="1159.9" y="357" width="3.9" height="15.0" fill="rgb(224,129,27)" rx="2" ry="2" />
<text  x="1162.95" y="367.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::CompactionState::current_output (12,000,000 samples, 0.05%)</title><rect x="702.8" y="421" width="0.6" height="15.0" fill="rgb(238,107,44)" rx="2" ry="2" />
<text  x="705.77" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (8,000,000 samples, 0.03%)</title><rect x="1139.3" y="357" width="0.4" height="15.0" fill="rgb(239,85,20)" rx="2" ry="2" />
<text  x="1142.31" y="367.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (4,000,000 samples, 0.02%)</title><rect x="698.8" y="341" width="0.2" height="15.0" fill="rgb(241,153,44)" rx="2" ry="2" />
<text  x="701.77" y="351.5" ></text>
</g>
<g >
<title>mark_page_accessed (8,000,000 samples, 0.03%)</title><rect x="441.3" y="389" width="0.4" height="15.0" fill="rgb(234,159,36)" rx="2" ry="2" />
<text  x="444.33" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (16,000,000 samples, 0.07%)</title><rect x="699.4" y="357" width="0.8" height="15.0" fill="rgb(210,124,34)" rx="2" ry="2" />
<text  x="702.37" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="1137.9" y="421" width="0.2" height="15.0" fill="rgb(226,94,17)" rx="2" ry="2" />
<text  x="1140.91" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Append (4,000,000 samples, 0.02%)</title><rect x="906.1" y="421" width="0.2" height="15.0" fill="rgb(239,91,18)" rx="2" ry="2" />
<text  x="909.12" y="431.5" ></text>
</g>
<g >
<title>std::atomic&lt;unsigned int&gt;::atomic (4,000,000 samples, 0.02%)</title><rect x="1147.7" y="277" width="0.2" height="15.0" fill="rgb(212,147,6)" rx="2" ry="2" />
<text  x="1150.73" y="287.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Valid (4,000,000 samples, 0.02%)</title><rect x="686.5" y="325" width="0.2" height="15.0" fill="rgb(216,76,48)" rx="2" ry="2" />
<text  x="689.55" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_write (4,000,000 samples, 0.02%)</title><rect x="25.4" y="645" width="0.2" height="15.0" fill="rgb(225,78,18)" rx="2" ry="2" />
<text  x="28.43" y="655.5" ></text>
</g>
<g >
<title>leveldb::test::RandomString (16,000,000 samples, 0.07%)</title><rect x="989.1" y="437" width="0.8" height="15.0" fill="rgb(239,201,48)" rx="2" ry="2" />
<text  x="992.06" y="447.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (8,000,000 samples, 0.03%)</title><rect x="625.2" y="293" width="0.4" height="15.0" fill="rgb(209,55,13)" rx="2" ry="2" />
<text  x="628.24" y="303.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (28,000,000 samples, 0.12%)</title><rect x="389.0" y="437" width="1.4" height="15.0" fill="rgb(252,179,12)" rx="2" ry="2" />
<text  x="392.04" y="447.5" ></text>
</g>
<g >
<title>release_pages (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="485" width="0.2" height="15.0" fill="rgb(245,184,39)" rx="2" ry="2" />
<text  x="1183.58" y="495.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Extend (356,000,000 samples, 1.51%)</title><rect x="1105.1" y="405" width="17.8" height="15.0" fill="rgb(247,3,49)" rx="2" ry="2" />
<text  x="1108.06" y="415.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed64 (20,000,000 samples, 0.08%)</title><rect x="902.5" y="405" width="1.0" height="15.0" fill="rgb(237,67,44)" rx="2" ry="2" />
<text  x="905.51" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="1002.9" y="421" width="0.2" height="15.0" fill="rgb(239,120,44)" rx="2" ry="2" />
<text  x="1005.88" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::empty (4,000,000 samples, 0.02%)</title><rect x="994.7" y="421" width="0.2" height="15.0" fill="rgb(233,225,3)" rx="2" ry="2" />
<text  x="997.67" y="431.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (8,000,000 samples, 0.03%)</title><rect x="353.2" y="357" width="0.4" height="15.0" fill="rgb(224,136,1)" rx="2" ry="2" />
<text  x="356.18" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::release (4,000,000 samples, 0.02%)</title><rect x="498.6" y="485" width="0.2" height="15.0" fill="rgb(223,130,32)" rx="2" ry="2" />
<text  x="501.63" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="10.2" y="501" width="0.2" height="15.0" fill="rgb(250,227,29)" rx="2" ry="2" />
<text  x="13.20" y="511.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::KeyIsAfterNode (16,000,000 samples, 0.07%)</title><rect x="891.5" y="357" width="0.8" height="15.0" fill="rgb(252,158,50)" rx="2" ry="2" />
<text  x="894.49" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::empty (12,000,000 samples, 0.05%)</title><rect x="935.8" y="437" width="0.6" height="15.0" fill="rgb(238,204,1)" rx="2" ry="2" />
<text  x="938.77" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (180,000,000 samples, 0.76%)</title><rect x="964.0" y="421" width="9.0" height="15.0" fill="rgb(224,51,20)" rx="2" ry="2" />
<text  x="967.02" y="431.5" ></text>
</g>
<g >
<title>read (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="661" width="0.2" height="15.0" fill="rgb(219,104,46)" rx="2" ry="2" />
<text  x="1187.19" y="671.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::ParseNextKey (28,000,000 samples, 0.12%)</title><rect x="677.3" y="341" width="1.4" height="15.0" fill="rgb(236,152,47)" rx="2" ry="2" />
<text  x="680.33" y="351.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (112,000,000 samples, 0.48%)</title><rect x="740.2" y="405" width="5.6" height="15.0" fill="rgb(231,118,49)" rx="2" ry="2" />
<text  x="743.24" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (52,000,000 samples, 0.22%)</title><rect x="866.3" y="277" width="2.6" height="15.0" fill="rgb(211,214,50)" rx="2" ry="2" />
<text  x="869.25" y="287.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Extend (320,000,000 samples, 1.36%)</title><rect x="752.5" y="341" width="16.0" height="15.0" fill="rgb(225,28,10)" rx="2" ry="2" />
<text  x="755.46" y="351.5" ></text>
</g>
<g >
<title>jbd2__journal_start (248,000,000 samples, 1.05%)</title><rect x="323.3" y="453" width="12.5" height="15.0" fill="rgb(250,63,13)" rx="2" ry="2" />
<text  x="326.33" y="463.5" ></text>
</g>
<g >
<title>_IO_setb (4,000,000 samples, 0.02%)</title><rect x="16.0" y="645" width="0.2" height="15.0" fill="rgb(213,131,52)" rx="2" ry="2" />
<text  x="19.01" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (156,000,000 samples, 0.66%)</title><rect x="477.8" y="613" width="7.8" height="15.0" fill="rgb(225,28,48)" rx="2" ry="2" />
<text  x="480.79" y="623.5" ></text>
</g>
<g >
<title>std::once_flag::once_flag (8,000,000 samples, 0.03%)</title><rect x="1148.3" y="293" width="0.4" height="15.0" fill="rgb(205,170,3)" rx="2" ry="2" />
<text  x="1151.33" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (12,000,000 samples, 0.05%)</title><rect x="745.2" y="389" width="0.6" height="15.0" fill="rgb(210,135,1)" rx="2" ry="2" />
<text  x="748.25" y="399.5" ></text>
</g>
<g >
<title>current_time (24,000,000 samples, 0.10%)</title><rect x="451.5" y="501" width="1.3" height="15.0" fill="rgb(249,45,29)" rx="2" ry="2" />
<text  x="454.55" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (36,000,000 samples, 0.15%)</title><rect x="1131.5" y="421" width="1.8" height="15.0" fill="rgb(228,88,37)" rx="2" ry="2" />
<text  x="1134.50" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (8,000,000 samples, 0.03%)</title><rect x="487.8" y="565" width="0.4" height="15.0" fill="rgb(222,81,4)" rx="2" ry="2" />
<text  x="490.81" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (4,000,000 samples, 0.02%)</title><rect x="949.6" y="389" width="0.2" height="15.0" fill="rgb(238,228,48)" rx="2" ry="2" />
<text  x="952.59" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="613" width="0.2" height="15.0" fill="rgb(245,85,16)" rx="2" ry="2" />
<text  x="1183.98" y="623.5" ></text>
</g>
<g >
<title>__vfs_read (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="565" width="0.2" height="15.0" fill="rgb(243,162,40)" rx="2" ry="2" />
<text  x="1187.19" y="575.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (20,000,000 samples, 0.08%)</title><rect x="1067.4" y="277" width="1.0" height="15.0" fill="rgb(237,104,7)" rx="2" ry="2" />
<text  x="1070.39" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="504.2" y="421" width="0.2" height="15.0" fill="rgb(225,135,53)" rx="2" ry="2" />
<text  x="507.24" y="431.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Flush (364,000,000 samples, 1.54%)</title><rect x="750.3" y="405" width="18.2" height="15.0" fill="rgb(248,189,3)" rx="2" ry="2" />
<text  x="753.25" y="415.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="549" width="0.2" height="15.0" fill="rgb(247,95,19)" rx="2" ry="2" />
<text  x="1183.58" y="559.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="1099.4" y="389" width="0.2" height="15.0" fill="rgb(210,57,15)" rx="2" ry="2" />
<text  x="1102.45" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::allocator (4,000,000 samples, 0.02%)</title><rect x="1146.5" y="341" width="0.2" height="15.0" fill="rgb(214,217,5)" rx="2" ry="2" />
<text  x="1149.53" y="351.5" ></text>
</g>
<g >
<title>std::operator&amp; (8,000,000 samples, 0.03%)</title><rect x="889.9" y="309" width="0.4" height="15.0" fill="rgb(239,80,41)" rx="2" ry="2" />
<text  x="892.89" y="319.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::ok (12,000,000 samples, 0.05%)</title><rect x="768.5" y="405" width="0.6" height="15.0" fill="rgb(207,170,52)" rx="2" ry="2" />
<text  x="771.49" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (40,000,000 samples, 0.17%)</title><rect x="518.9" y="501" width="2.0" height="15.0" fill="rgb(213,7,27)" rx="2" ry="2" />
<text  x="521.86" y="511.5" ></text>
</g>
<g >
<title>leveldb::Slice::remove_prefix (20,000,000 samples, 0.08%)</title><rect x="1090.0" y="389" width="1.0" height="15.0" fill="rgb(221,77,20)" rx="2" ry="2" />
<text  x="1093.03" y="399.5" ></text>
</g>
<g >
<title>__GI___unlink (8,000,000 samples, 0.03%)</title><rect x="773.3" y="421" width="0.4" height="15.0" fill="rgb(254,121,19)" rx="2" ry="2" />
<text  x="776.29" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (12,000,000 samples, 0.05%)</title><rect x="769.5" y="405" width="0.6" height="15.0" fill="rgb(216,122,4)" rx="2" ry="2" />
<text  x="772.49" y="415.5" ></text>
</g>
<g >
<title>dax_copy_from_iter (12,000,000 samples, 0.05%)</title><rect x="49.7" y="485" width="0.6" height="15.0" fill="rgb(245,29,24)" rx="2" ry="2" />
<text  x="52.67" y="495.5" ></text>
</g>
<g >
<title>_itoa_word (24,000,000 samples, 0.10%)</title><rect x="19.2" y="629" width="1.2" height="15.0" fill="rgb(217,63,0)" rx="2" ry="2" />
<text  x="22.22" y="639.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (4,000,000 samples, 0.02%)</title><rect x="700.4" y="293" width="0.2" height="15.0" fill="rgb(242,109,35)" rx="2" ry="2" />
<text  x="703.37" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="935.4" y="437" width="0.2" height="15.0" fill="rgb(252,185,24)" rx="2" ry="2" />
<text  x="938.37" y="447.5" ></text>
</g>
<g >
<title>leveldb::MutexLock::~MutexLock (28,000,000 samples, 0.12%)</title><rect x="785.7" y="437" width="1.4" height="15.0" fill="rgb(246,55,11)" rx="2" ry="2" />
<text  x="788.71" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_read (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="613" width="0.2" height="15.0" fill="rgb(210,91,12)" rx="2" ry="2" />
<text  x="1187.19" y="623.5" ></text>
</g>
<g >
<title>leveldb::MutexLock::MutexLock (8,000,000 samples, 0.03%)</title><rect x="998.9" y="437" width="0.4" height="15.0" fill="rgb(251,214,37)" rx="2" ry="2" />
<text  x="1001.88" y="447.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (28,000,000 samples, 0.12%)</title><rect x="572.0" y="357" width="1.4" height="15.0" fill="rgb(230,211,19)" rx="2" ry="2" />
<text  x="574.95" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4,000,000 samples, 0.02%)</title><rect x="1099.2" y="405" width="0.2" height="15.0" fill="rgb(219,127,43)" rx="2" ry="2" />
<text  x="1102.25" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result (4,000,000 samples, 0.02%)</title><rect x="1125.1" y="437" width="0.2" height="15.0" fill="rgb(252,204,0)" rx="2" ry="2" />
<text  x="1128.09" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::front (40,000,000 samples, 0.17%)</title><rect x="995.5" y="421" width="2.0" height="15.0" fill="rgb(253,104,4)" rx="2" ry="2" />
<text  x="998.47" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_M_head (8,000,000 samples, 0.03%)</title><rect x="513.9" y="421" width="0.4" height="15.0" fill="rgb(254,124,29)" rx="2" ry="2" />
<text  x="516.85" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (4,000,000 samples, 0.02%)</title><rect x="702.2" y="357" width="0.2" height="15.0" fill="rgb(238,80,53)" rx="2" ry="2" />
<text  x="705.17" y="367.5" ></text>
</g>
<g >
<title>__close (4,000,000 samples, 0.02%)</title><rect x="703.4" y="405" width="0.2" height="15.0" fill="rgb(218,86,38)" rx="2" ry="2" />
<text  x="706.38" y="415.5" ></text>
</g>
<g >
<title>std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt;::queue&lt;std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt;, void&gt; (4,000,000 samples, 0.02%)</title><rect x="26.2" y="453" width="0.2" height="15.0" fill="rgb(224,166,27)" rx="2" ry="2" />
<text  x="29.23" y="463.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (16,000,000 samples, 0.07%)</title><rect x="960.2" y="357" width="0.8" height="15.0" fill="rgb(225,83,53)" rx="2" ry="2" />
<text  x="963.21" y="367.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (20,000,000 samples, 0.08%)</title><rect x="944.0" y="405" width="1.0" height="15.0" fill="rgb(237,195,50)" rx="2" ry="2" />
<text  x="946.98" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;leveldb::Status&amp;&gt; (8,000,000 samples, 0.03%)</title><rect x="953.2" y="437" width="0.4" height="15.0" fill="rgb(207,12,31)" rx="2" ry="2" />
<text  x="956.20" y="447.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Unlock (28,000,000 samples, 0.12%)</title><rect x="999.3" y="421" width="1.4" height="15.0" fill="rgb(207,155,22)" rx="2" ry="2" />
<text  x="1002.28" y="431.5" ></text>
</g>
<g >
<title>leveldb::Compaction::ShouldStopBefore (96,000,000 samples, 0.41%)</title><rect x="686.9" y="421" width="4.9" height="15.0" fill="rgb(207,81,34)" rx="2" ry="2" />
<text  x="689.95" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr (20,000,000 samples, 0.08%)</title><rect x="1142.1" y="405" width="1.0" height="15.0" fill="rgb(209,192,19)" rx="2" ry="2" />
<text  x="1145.12" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="696.6" y="341" width="0.2" height="15.0" fill="rgb(253,182,49)" rx="2" ry="2" />
<text  x="699.56" y="351.5" ></text>
</g>
<g >
<title>ext4_data_block_valid (20,000,000 samples, 0.08%)</title><rect x="343.6" y="437" width="1.0" height="15.0" fill="rgb(221,163,30)" rx="2" ry="2" />
<text  x="346.57" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (520,000,000 samples, 2.21%)</title><rect x="490.8" y="533" width="26.1" height="15.0" fill="rgb(235,71,33)" rx="2" ry="2" />
<text  x="493.81" y="543.5" >s..</text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="354.2" y="421" width="0.2" height="15.0" fill="rgb(214,104,24)" rx="2" ry="2" />
<text  x="357.18" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="511.2" y="421" width="0.2" height="15.0" fill="rgb(221,50,26)" rx="2" ry="2" />
<text  x="514.25" y="431.5" ></text>
</g>
<g >
<title>write_pmem (196,000,000 samples, 0.83%)</title><rect x="374.2" y="341" width="9.8" height="15.0" fill="rgb(236,160,16)" rx="2" ry="2" />
<text  x="377.22" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::end (12,000,000 samples, 0.05%)</title><rect x="780.7" y="421" width="0.6" height="15.0" fill="rgb(225,43,8)" rx="2" ry="2" />
<text  x="783.71" y="431.5" ></text>
</g>
<g >
<title>ext4_extent_block_csum_set (16,000,000 samples, 0.07%)</title><rect x="348.0" y="405" width="0.8" height="15.0" fill="rgb(220,1,0)" rx="2" ry="2" />
<text  x="350.97" y="415.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Count (16,000,000 samples, 0.07%)</title><rect x="1003.1" y="437" width="0.8" height="15.0" fill="rgb(242,20,5)" rx="2" ry="2" />
<text  x="1006.08" y="447.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed64 (4,000,000 samples, 0.02%)</title><rect x="665.9" y="293" width="0.2" height="15.0" fill="rgb(214,186,1)" rx="2" ry="2" />
<text  x="668.91" y="303.5" ></text>
</g>
<g >
<title>__gthread_active_p (4,000,000 samples, 0.02%)</title><rect x="956.2" y="341" width="0.2" height="15.0" fill="rgb(230,107,26)" rx="2" ry="2" />
<text  x="959.20" y="351.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (4,000,000 samples, 0.02%)</title><rect x="945.0" y="437" width="0.2" height="15.0" fill="rgb(233,12,12)" rx="2" ry="2" />
<text  x="947.98" y="447.5" ></text>
</g>
<g >
<title>bio_alloc_bioset (16,000,000 samples, 0.07%)</title><rect x="362.6" y="389" width="0.8" height="15.0" fill="rgb(224,74,50)" rx="2" ry="2" />
<text  x="365.60" y="399.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (8,000,000 samples, 0.03%)</title><rect x="443.5" y="437" width="0.4" height="15.0" fill="rgb(225,86,13)" rx="2" ry="2" />
<text  x="446.53" y="447.5" ></text>
</g>
<g >
<title>leveldb::VersionSet::SetLastSequence (16,000,000 samples, 0.07%)</title><rect x="1001.7" y="437" width="0.8" height="15.0" fill="rgb(232,72,34)" rx="2" ry="2" />
<text  x="1004.68" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (8,000,000 samples, 0.03%)</title><rect x="937.0" y="405" width="0.4" height="15.0" fill="rgb(224,70,47)" rx="2" ry="2" />
<text  x="939.97" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (8,000,000 samples, 0.03%)</title><rect x="738.0" y="373" width="0.4" height="15.0" fill="rgb(221,102,31)" rx="2" ry="2" />
<text  x="741.03" y="383.5" ></text>
</g>
<g >
<title>leveldb::port::CondVar::~CondVar (4,000,000 samples, 0.02%)</title><rect x="1123.3" y="437" width="0.2" height="15.0" fill="rgb(212,146,27)" rx="2" ry="2" />
<text  x="1126.29" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (4,000,000 samples, 0.02%)</title><rect x="528.3" y="581" width="0.2" height="15.0" fill="rgb(249,85,13)" rx="2" ry="2" />
<text  x="531.28" y="591.5" ></text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="364.4" y="357" width="0.2" height="15.0" fill="rgb(254,128,39)" rx="2" ry="2" />
<text  x="367.40" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="508.6" y="437" width="0.2" height="15.0" fill="rgb(230,190,40)" rx="2" ry="2" />
<text  x="511.65" y="447.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Next (20,000,000 samples, 0.08%)</title><rect x="692.0" y="357" width="1.0" height="15.0" fill="rgb(228,101,18)" rx="2" ry="2" />
<text  x="694.96" y="367.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (4,000,000 samples, 0.02%)</title><rect x="365.2" y="325" width="0.2" height="15.0" fill="rgb(228,82,11)" rx="2" ry="2" />
<text  x="368.20" y="335.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (8,000,000 samples, 0.03%)</title><rect x="1025.7" y="325" width="0.4" height="15.0" fill="rgb(216,35,20)" rx="2" ry="2" />
<text  x="1028.72" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (12,000,000 samples, 0.05%)</title><rect x="936.8" y="421" width="0.6" height="15.0" fill="rgb(240,181,18)" rx="2" ry="2" />
<text  x="939.77" y="431.5" ></text>
</g>
<g >
<title>do_page_fault (4,000,000 samples, 0.02%)</title><rect x="980.2" y="421" width="0.2" height="15.0" fill="rgb(230,22,41)" rx="2" ry="2" />
<text  x="983.24" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::value (8,000,000 samples, 0.03%)</title><rect x="565.3" y="437" width="0.4" height="15.0" fill="rgb(214,83,54)" rx="2" ry="2" />
<text  x="568.34" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (20,000,000 samples, 0.08%)</title><rect x="606.2" y="357" width="1.0" height="15.0" fill="rgb(242,70,28)" rx="2" ry="2" />
<text  x="609.21" y="367.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (16,000,000 samples, 0.07%)</title><rect x="951.2" y="389" width="0.8" height="15.0" fill="rgb(230,100,4)" rx="2" ry="2" />
<text  x="954.20" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::get (4,000,000 samples, 0.02%)</title><rect x="949.8" y="389" width="0.2" height="15.0" fill="rgb(245,138,26)" rx="2" ry="2" />
<text  x="952.79" y="399.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1,136,000,000 samples, 4.82%)</title><rect x="473.8" y="645" width="56.9" height="15.0" fill="rgb(238,135,32)" rx="2" ry="2" />
<text  x="476.79" y="655.5" >__pthr..</text>
</g>
<g >
<title>std::__invoke&lt;void  (12,156,000,000 samples, 51.60%)</title><rect x="565.1" y="549" width="608.9" height="15.0" fill="rgb(232,228,2)" rx="2" ry="2" />
<text  x="568.14" y="559.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>leveldb::Block::Iter::GetRestartPoint (4,000,000 samples, 0.02%)</title><rect x="669.7" y="277" width="0.2" height="15.0" fill="rgb(212,137,22)" rx="2" ry="2" />
<text  x="672.72" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="1165.4" y="405" width="0.2" height="15.0" fill="rgb(222,60,32)" rx="2" ry="2" />
<text  x="1168.36" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;leveldb::DBImpl::Writer*&gt;::construct&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&gt; (4,000,000 samples, 0.02%)</title><rect x="1128.3" y="389" width="0.2" height="15.0" fill="rgb(246,216,43)" rx="2" ry="2" />
<text  x="1131.30" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (4,000,000 samples, 0.02%)</title><rect x="1070.0" y="293" width="0.2" height="15.0" fill="rgb(206,23,17)" rx="2" ry="2" />
<text  x="1073.00" y="303.5" ></text>
</g>
<g >
<title>start_this_handle (4,000,000 samples, 0.02%)</title><rect x="335.8" y="453" width="0.2" height="15.0" fill="rgb(244,65,31)" rx="2" ry="2" />
<text  x="338.75" y="463.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;&gt; (112,000,000 samples, 0.48%)</title><rect x="956.6" y="421" width="5.6" height="15.0" fill="rgb(216,180,54)" rx="2" ry="2" />
<text  x="959.60" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (20,000,000 samples, 0.08%)</title><rect x="749.3" y="405" width="1.0" height="15.0" fill="rgb(229,8,30)" rx="2" ry="2" />
<text  x="752.25" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (52,000,000 samples, 0.22%)</title><rect x="957.6" y="357" width="2.6" height="15.0" fill="rgb(241,56,53)" rx="2" ry="2" />
<text  x="960.61" y="367.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::FindGreaterOrEqual (1,800,000,000 samples, 7.64%)</title><rect x="801.3" y="357" width="90.2" height="15.0" fill="rgb(218,185,14)" rx="2" ry="2" />
<text  x="804.34" y="367.5" >leveldb::S..</text>
</g>
<g >
<title>leveldb::port::Mutex::Unlock (20,000,000 samples, 0.08%)</title><rect x="1124.1" y="437" width="1.0" height="15.0" fill="rgb(221,59,47)" rx="2" ry="2" />
<text  x="1127.09" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock (12,000,000 samples, 0.05%)</title><rect x="413.5" y="453" width="0.6" height="15.0" fill="rgb(230,173,12)" rx="2" ry="2" />
<text  x="416.48" y="463.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (4,000,000 samples, 0.02%)</title><rect x="351.2" y="389" width="0.2" height="15.0" fill="rgb(213,78,11)" rx="2" ry="2" />
<text  x="354.18" y="399.5" ></text>
</g>
<g >
<title>irq_exit (4,000,000 samples, 0.02%)</title><rect x="353.4" y="309" width="0.2" height="15.0" fill="rgb(220,62,19)" rx="2" ry="2" />
<text  x="356.38" y="319.5" ></text>
</g>
<g >
<title>leveldb::BlockHandle::DecodeFrom (4,000,000 samples, 0.02%)</title><rect x="665.7" y="293" width="0.2" height="15.0" fill="rgb(205,206,44)" rx="2" ry="2" />
<text  x="668.71" y="303.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (4,000,000 samples, 0.02%)</title><rect x="746.4" y="405" width="0.2" height="15.0" fill="rgb(250,105,13)" rx="2" ry="2" />
<text  x="749.45" y="415.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Writer::~Writer (16,000,000 samples, 0.07%)</title><rect x="998.1" y="437" width="0.8" height="15.0" fill="rgb(249,1,46)" rx="2" ry="2" />
<text  x="1001.07" y="447.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (4,000,000 samples, 0.02%)</title><rect x="14.4" y="645" width="0.2" height="15.0" fill="rgb(254,35,17)" rx="2" ry="2" />
<text  x="17.41" y="655.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (12,000,000 samples, 0.05%)</title><rect x="447.9" y="453" width="0.6" height="15.0" fill="rgb(207,104,15)" rx="2" ry="2" />
<text  x="450.94" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::allocator (4,000,000 samples, 0.02%)</title><rect x="1151.3" y="421" width="0.2" height="15.0" fill="rgb(206,147,9)" rx="2" ry="2" />
<text  x="1154.33" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="900.7" y="389" width="0.2" height="15.0" fill="rgb(254,181,22)" rx="2" ry="2" />
<text  x="903.71" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::construct&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&gt; (20,000,000 samples, 0.08%)</title><rect x="938.0" y="405" width="1.0" height="15.0" fill="rgb(234,183,26)" rx="2" ry="2" />
<text  x="940.97" y="415.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (16,000,000 samples, 0.07%)</title><rect x="1097.6" y="421" width="0.8" height="15.0" fill="rgb(246,204,37)" rx="2" ry="2" />
<text  x="1100.64" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::WriteUnbuffered (16,000,000 samples, 0.07%)</title><rect x="1100.4" y="373" width="0.8" height="15.0" fill="rgb(232,211,42)" rx="2" ry="2" />
<text  x="1103.45" y="383.5" ></text>
</g>
<g >
<title>ext4_orphan_del (84,000,000 samples, 0.36%)</title><rect x="444.3" y="469" width="4.2" height="15.0" fill="rgb(253,137,11)" rx="2" ry="2" />
<text  x="447.34" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="1137.5" y="357" width="0.4" height="15.0" fill="rgb(210,11,25)" rx="2" ry="2" />
<text  x="1140.51" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result_base*, false&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="526.9" y="453" width="0.2" height="15.0" fill="rgb(221,73,3)" rx="2" ry="2" />
<text  x="529.88" y="463.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="690.8" y="373" width="0.4" height="15.0" fill="rgb(243,166,21)" rx="2" ry="2" />
<text  x="693.75" y="383.5" ></text>
</g>
<g >
<title>leveldb::MemTable::KeyComparator::operator (1,200,000,000 samples, 5.09%)</title><rect x="823.8" y="325" width="60.1" height="15.0" fill="rgb(232,93,48)" rx="2" ry="2" />
<text  x="826.78" y="335.5" >leveld..</text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Sequence (20,000,000 samples, 0.08%)</title><rect x="902.5" y="421" width="1.0" height="15.0" fill="rgb(213,225,19)" rx="2" ry="2" />
<text  x="905.51" y="431.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (136,000,000 samples, 0.58%)</title><rect x="761.7" y="309" width="6.8" height="15.0" fill="rgb(236,58,22)" rx="2" ry="2" />
<text  x="764.67" y="319.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (168,000,000 samples, 0.71%)</title><rect x="17.0" y="645" width="8.4" height="15.0" fill="rgb(224,201,49)" rx="2" ry="2" />
<text  x="20.01" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="966.0" y="341" width="0.2" height="15.0" fill="rgb(206,43,35)" rx="2" ry="2" />
<text  x="969.02" y="351.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::key (64,000,000 samples, 0.27%)</title><rect x="655.7" y="389" width="3.2" height="15.0" fill="rgb(222,3,10)" rx="2" ry="2" />
<text  x="658.69" y="399.5" ></text>
</g>
<g >
<title>_IO_padn (4,000,000 samples, 0.02%)</title><rect x="18.4" y="629" width="0.2" height="15.0" fill="rgb(216,170,22)" rx="2" ry="2" />
<text  x="21.41" y="639.5" ></text>
</g>
<g >
<title>bio_associate_blkcg (4,000,000 samples, 0.02%)</title><rect x="364.6" y="357" width="0.2" height="15.0" fill="rgb(253,43,1)" rx="2" ry="2" />
<text  x="367.60" y="367.5" ></text>
</g>
<g >
<title>std::mutex::lock (8,000,000 samples, 0.03%)</title><rect x="1123.7" y="421" width="0.4" height="15.0" fill="rgb(243,58,36)" rx="2" ry="2" />
<text  x="1126.69" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (8,000,000 samples, 0.03%)</title><rect x="1140.3" y="421" width="0.4" height="15.0" fill="rgb(244,38,17)" rx="2" ry="2" />
<text  x="1143.32" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (4,000,000 samples, 0.02%)</title><rect x="584.4" y="325" width="0.2" height="15.0" fill="rgb(217,57,8)" rx="2" ry="2" />
<text  x="587.37" y="335.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (16,000,000 samples, 0.07%)</title><rect x="353.2" y="373" width="0.8" height="15.0" fill="rgb(243,159,6)" rx="2" ry="2" />
<text  x="356.18" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (4,000,000 samples, 0.02%)</title><rect x="983.9" y="453" width="0.2" height="15.0" fill="rgb(246,99,53)" rx="2" ry="2" />
<text  x="986.85" y="463.5" ></text>
</g>
<g >
<title>grab_mapping_entry (4,000,000 samples, 0.02%)</title><rect x="668.9" y="133" width="0.2" height="15.0" fill="rgb(230,76,13)" rx="2" ry="2" />
<text  x="671.92" y="143.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (12,000,000 samples, 0.05%)</title><rect x="567.3" y="341" width="0.6" height="15.0" fill="rgb(214,12,38)" rx="2" ry="2" />
<text  x="570.34" y="351.5" ></text>
</g>
<g >
<title>ext4_ext_search_right (4,000,000 samples, 0.02%)</title><rect x="350.2" y="437" width="0.2" height="15.0" fill="rgb(225,108,14)" rx="2" ry="2" />
<text  x="353.18" y="447.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (4,000,000 samples, 0.02%)</title><rect x="387.6" y="437" width="0.2" height="15.0" fill="rgb(210,60,52)" rx="2" ry="2" />
<text  x="390.64" y="447.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::_Deleter::operator (56,000,000 samples, 0.24%)</title><rect x="969.0" y="293" width="2.8" height="15.0" fill="rgb(210,225,53)" rx="2" ry="2" />
<text  x="972.03" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt;::operator (4,000,000 samples, 0.02%)</title><rect x="516.7" y="517" width="0.2" height="15.0" fill="rgb(211,21,31)" rx="2" ry="2" />
<text  x="519.66" y="527.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::WriteRawBlock (352,000,000 samples, 1.49%)</title><rect x="750.9" y="373" width="17.6" height="15.0" fill="rgb(208,9,42)" rx="2" ry="2" />
<text  x="753.86" y="383.5" ></text>
</g>
<g >
<title>page_fault (4,000,000 samples, 0.02%)</title><rect x="662.3" y="309" width="0.2" height="15.0" fill="rgb(243,27,1)" rx="2" ry="2" />
<text  x="665.31" y="319.5" ></text>
</g>
<g >
<title>std::once_flag::once_flag (4,000,000 samples, 0.02%)</title><rect x="960.0" y="309" width="0.2" height="15.0" fill="rgb(238,130,0)" rx="2" ry="2" />
<text  x="963.01" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::~_State_baseV2 (92,000,000 samples, 0.39%)</title><rect x="968.0" y="325" width="4.6" height="15.0" fill="rgb(241,109,22)" rx="2" ry="2" />
<text  x="971.02" y="335.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Valid (8,000,000 samples, 0.03%)</title><rect x="692.2" y="341" width="0.4" height="15.0" fill="rgb(207,120,24)" rx="2" ry="2" />
<text  x="695.16" y="351.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::KeyBuffer::slice (12,000,000 samples, 0.05%)</title><rect x="988.1" y="469" width="0.6" height="15.0" fill="rgb(254,176,9)" rx="2" ry="2" />
<text  x="991.06" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;leveldb::DBImpl::Writer*&gt;::construct&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&gt; (8,000,000 samples, 0.03%)</title><rect x="938.6" y="389" width="0.4" height="15.0" fill="rgb(210,18,24)" rx="2" ry="2" />
<text  x="941.57" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="515.7" y="437" width="0.4" height="15.0" fill="rgb(234,59,48)" rx="2" ry="2" />
<text  x="518.66" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4,000,000 samples, 0.02%)</title><rect x="739.4" y="389" width="0.2" height="15.0" fill="rgb(252,71,37)" rx="2" ry="2" />
<text  x="742.44" y="399.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (80,000,000 samples, 0.34%)</title><rect x="650.1" y="373" width="4.0" height="15.0" fill="rgb(224,220,49)" rx="2" ry="2" />
<text  x="653.08" y="383.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (4,000,000 samples, 0.02%)</title><rect x="785.5" y="389" width="0.2" height="15.0" fill="rgb(229,20,6)" rx="2" ry="2" />
<text  x="788.51" y="399.5" ></text>
</g>
<g >
<title>ext4_mb_simple_scan_group (4,000,000 samples, 0.02%)</title><rect x="360.4" y="405" width="0.2" height="15.0" fill="rgb(231,134,21)" rx="2" ry="2" />
<text  x="363.39" y="415.5" ></text>
</g>
<g >
<title>crc_19 (4,000,000 samples, 0.02%)</title><rect x="348.6" y="373" width="0.2" height="15.0" fill="rgb(219,107,53)" rx="2" ry="2" />
<text  x="351.57" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::_M_push_back_aux&lt;leveldb::DBImpl::Writer*&gt; (4,000,000 samples, 0.02%)</title><rect x="939.0" y="405" width="0.2" height="15.0" fill="rgb(254,113,39)" rx="2" ry="2" />
<text  x="941.97" y="415.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (8,000,000 samples, 0.03%)</title><rect x="693.0" y="341" width="0.4" height="15.0" fill="rgb(223,31,11)" rx="2" ry="2" />
<text  x="695.96" y="351.5" ></text>
</g>
<g >
<title>std::operator&amp; (8,000,000 samples, 0.03%)</title><rect x="1077.2" y="309" width="0.4" height="15.0" fill="rgb(214,165,42)" rx="2" ry="2" />
<text  x="1080.21" y="319.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (96,000,000 samples, 0.41%)</title><rect x="437.5" y="437" width="4.8" height="15.0" fill="rgb(215,209,20)" rx="2" ry="2" />
<text  x="440.52" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="1165.6" y="421" width="0.2" height="15.0" fill="rgb(237,170,33)" rx="2" ry="2" />
<text  x="1168.56" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (28,000,000 samples, 0.12%)</title><rect x="740.8" y="389" width="1.4" height="15.0" fill="rgb(232,139,49)" rx="2" ry="2" />
<text  x="743.84" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (12,000,000 samples, 0.05%)</title><rect x="932.8" y="405" width="0.6" height="15.0" fill="rgb(232,144,36)" rx="2" ry="2" />
<text  x="935.76" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="783.1" y="389" width="0.2" height="15.0" fill="rgb(208,64,49)" rx="2" ry="2" />
<text  x="786.11" y="399.5" ></text>
</g>
<g >
<title>__kernel_fpu_end (20,000,000 samples, 0.08%)</title><rect x="445.3" y="373" width="1.0" height="15.0" fill="rgb(228,209,37)" rx="2" ry="2" />
<text  x="448.34" y="383.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1144.5" y="373" width="0.2" height="15.0" fill="rgb(215,48,7)" rx="2" ry="2" />
<text  x="1147.52" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (96,000,000 samples, 0.41%)</title><rect x="967.8" y="341" width="4.8" height="15.0" fill="rgb(246,91,4)" rx="2" ry="2" />
<text  x="970.82" y="351.5" ></text>
</g>
<g >
<title>pmem_copy_from_iter (196,000,000 samples, 0.83%)</title><rect x="52.7" y="453" width="9.8" height="15.0" fill="rgb(229,118,22)" rx="2" ry="2" />
<text  x="55.67" y="463.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (8,000,000 samples, 0.03%)</title><rect x="901.9" y="389" width="0.4" height="15.0" fill="rgb(211,86,18)" rx="2" ry="2" />
<text  x="904.91" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1150.5" y="341" width="0.2" height="15.0" fill="rgb(238,79,14)" rx="2" ry="2" />
<text  x="1153.53" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (176,000,000 samples, 0.75%)</title><rect x="964.2" y="405" width="8.8" height="15.0" fill="rgb(228,41,51)" rx="2" ry="2" />
<text  x="967.22" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="654.3" y="373" width="0.2" height="15.0" fill="rgb(211,42,44)" rx="2" ry="2" />
<text  x="657.29" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (12,000,000 samples, 0.05%)</title><rect x="880.9" y="293" width="0.6" height="15.0" fill="rgb(247,15,53)" rx="2" ry="2" />
<text  x="883.88" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (24,000,000 samples, 0.10%)</title><rect x="520.9" y="501" width="1.2" height="15.0" fill="rgb(210,62,54)" rx="2" ry="2" />
<text  x="523.87" y="511.5" ></text>
</g>
<g >
<title>operator delete@plt (4,000,000 samples, 0.02%)</title><rect x="969.2" y="261" width="0.2" height="15.0" fill="rgb(216,160,23)" rx="2" ry="2" />
<text  x="972.23" y="271.5" ></text>
</g>
<g >
<title>__wake_up (48,000,000 samples, 0.20%)</title><rect x="339.8" y="437" width="2.4" height="15.0" fill="rgb(225,143,26)" rx="2" ry="2" />
<text  x="342.76" y="447.5" ></text>
</g>
<g >
<title>leveldb::Random::Next (4,000,000 samples, 0.02%)</title><rect x="989.7" y="405" width="0.2" height="15.0" fill="rgb(246,179,31)" rx="2" ry="2" />
<text  x="992.66" y="415.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_M_get_result (44,000,000 samples, 0.19%)</title><rect x="1135.9" y="437" width="2.2" height="15.0" fill="rgb(212,21,50)" rx="2" ry="2" />
<text  x="1138.91" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="10.0" y="485" width="0.2" height="15.0" fill="rgb(252,87,33)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>__f_unlock_pos (8,000,000 samples, 0.03%)</title><rect x="32.2" y="581" width="0.4" height="15.0" fill="rgb(221,77,1)" rx="2" ry="2" />
<text  x="35.24" y="591.5" ></text>
</g>
<g >
<title>bio_endio (172,000,000 samples, 0.73%)</title><rect x="365.4" y="357" width="8.6" height="15.0" fill="rgb(214,58,51)" rx="2" ry="2" />
<text  x="368.40" y="367.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::future (52,000,000 samples, 0.22%)</title><rect x="1140.9" y="437" width="2.6" height="15.0" fill="rgb(249,221,43)" rx="2" ry="2" />
<text  x="1143.92" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (24,000,000 samples, 0.10%)</title><rect x="879.7" y="277" width="1.2" height="15.0" fill="rgb(215,188,34)" rx="2" ry="2" />
<text  x="882.67" y="287.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt;&gt; (4,000,000 samples, 0.02%)</title><rect x="26.2" y="469" width="0.2" height="15.0" fill="rgb(241,44,33)" rx="2" ry="2" />
<text  x="29.23" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (16,000,000 samples, 0.07%)</title><rect x="497.8" y="453" width="0.8" height="15.0" fill="rgb(233,209,25)" rx="2" ry="2" />
<text  x="500.83" y="463.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Next (20,000,000 samples, 0.08%)</title><rect x="567.1" y="373" width="1.0" height="15.0" fill="rgb(244,225,10)" rx="2" ry="2" />
<text  x="570.14" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="610.4" y="341" width="0.4" height="15.0" fill="rgb(238,115,23)" rx="2" ry="2" />
<text  x="613.42" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned int&gt; (4,000,000 samples, 0.02%)</title><rect x="607.8" y="293" width="0.2" height="15.0" fill="rgb(249,159,26)" rx="2" ry="2" />
<text  x="610.81" y="303.5" ></text>
</g>
<g >
<title>__libc_write (8,636,000,000 samples, 36.66%)</title><rect x="26.4" y="645" width="432.6" height="15.0" fill="rgb(221,60,30)" rx="2" ry="2" />
<text  x="29.43" y="655.5" >__libc_write</text>
</g>
<g >
<title>tcmalloc::PageHeap::RegisterSizeClass (4,000,000 samples, 0.02%)</title><rect x="1175.4" y="645" width="0.2" height="15.0" fill="rgb(234,86,15)" rx="2" ry="2" />
<text  x="1178.38" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::operator* (4,000,000 samples, 0.02%)</title><rect x="936.6" y="421" width="0.2" height="15.0" fill="rgb(212,28,35)" rx="2" ry="2" />
<text  x="939.57" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_M_head (8,000,000 samples, 0.03%)</title><rect x="520.5" y="437" width="0.4" height="15.0" fill="rgb(215,5,51)" rx="2" ry="2" />
<text  x="523.47" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (4,000,000 samples, 0.02%)</title><rect x="975.6" y="453" width="0.2" height="15.0" fill="rgb(252,224,1)" rx="2" ry="2" />
<text  x="978.64" y="463.5" ></text>
</g>
<g >
<title>__kernel_fpu_end (4,000,000 samples, 0.02%)</title><rect x="357.2" y="357" width="0.2" height="15.0" fill="rgb(233,115,23)" rx="2" ry="2" />
<text  x="360.19" y="367.5" ></text>
</g>
<g >
<title>madvise_free_single_vma (4,000,000 samples, 0.02%)</title><rect x="10.2" y="453" width="0.2" height="15.0" fill="rgb(253,212,48)" rx="2" ry="2" />
<text  x="13.20" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_value (4,000,000 samples, 0.02%)</title><rect x="969.6" y="245" width="0.2" height="15.0" fill="rgb(254,94,31)" rx="2" ry="2" />
<text  x="972.63" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (12,000,000 samples, 0.05%)</title><rect x="955.6" y="341" width="0.6" height="15.0" fill="rgb(225,103,0)" rx="2" ry="2" />
<text  x="958.60" y="351.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Add (80,000,000 samples, 0.34%)</title><rect x="693.8" y="357" width="4.0" height="15.0" fill="rgb(227,189,50)" rx="2" ry="2" />
<text  x="696.76" y="367.5" ></text>
</g>
<g >
<title>ext4_create (4,000,000 samples, 0.02%)</title><rect x="783.1" y="309" width="0.2" height="15.0" fill="rgb(239,54,12)" rx="2" ry="2" />
<text  x="786.11" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get (28,000,000 samples, 0.12%)</title><rect x="504.8" y="453" width="1.4" height="15.0" fill="rgb(208,87,23)" rx="2" ry="2" />
<text  x="507.84" y="463.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="1165.8" y="469" width="0.2" height="15.0" fill="rgb(205,51,19)" rx="2" ry="2" />
<text  x="1168.76" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (16,000,000 samples, 0.07%)</title><rect x="510.6" y="437" width="0.8" height="15.0" fill="rgb(216,146,48)" rx="2" ry="2" />
<text  x="513.65" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (20,000,000 samples, 0.08%)</title><rect x="519.9" y="485" width="1.0" height="15.0" fill="rgb(213,194,6)" rx="2" ry="2" />
<text  x="522.86" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (24,000,000 samples, 0.10%)</title><rect x="668.3" y="229" width="1.2" height="15.0" fill="rgb(240,191,27)" rx="2" ry="2" />
<text  x="671.32" y="239.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::future (4,000,000 samples, 0.02%)</title><rect x="1135.1" y="453" width="0.2" height="15.0" fill="rgb(214,107,10)" rx="2" ry="2" />
<text  x="1138.11" y="463.5" ></text>
</g>
<g >
<title>ext4_ext_truncate (4,000,000 samples, 0.02%)</title><rect x="25.6" y="437" width="0.2" height="15.0" fill="rgb(228,43,3)" rx="2" ry="2" />
<text  x="28.63" y="447.5" ></text>
</g>
<g >
<title>__dquot_alloc_space (4,000,000 samples, 0.02%)</title><rect x="350.8" y="421" width="0.2" height="15.0" fill="rgb(238,163,11)" rx="2" ry="2" />
<text  x="353.78" y="431.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4,000,000 samples, 0.02%)</title><rect x="10.0" y="421" width="0.2" height="15.0" fill="rgb(207,146,19)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (8,000,000 samples, 0.03%)</title><rect x="899.7" y="373" width="0.4" height="15.0" fill="rgb(208,187,38)" rx="2" ry="2" />
<text  x="902.71" y="383.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (160,000,000 samples, 0.68%)</title><rect x="403.7" y="453" width="8.0" height="15.0" fill="rgb(245,165,16)" rx="2" ry="2" />
<text  x="406.67" y="463.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::get (8,000,000 samples, 0.03%)</title><rect x="1173.2" y="469" width="0.4" height="15.0" fill="rgb(252,14,51)" rx="2" ry="2" />
<text  x="1176.17" y="479.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_Result_base*&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="972.2" y="293" width="0.2" height="15.0" fill="rgb(239,227,20)" rx="2" ry="2" />
<text  x="975.23" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (4,000,000 samples, 0.02%)</title><rect x="612.0" y="341" width="0.2" height="15.0" fill="rgb(207,21,35)" rx="2" ry="2" />
<text  x="615.02" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="506.2" y="501" width="0.2" height="15.0" fill="rgb(213,152,15)" rx="2" ry="2" />
<text  x="509.24" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (108,000,000 samples, 0.46%)</title><rect x="956.8" y="389" width="5.4" height="15.0" fill="rgb(218,84,35)" rx="2" ry="2" />
<text  x="959.80" y="399.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (124,000,000 samples, 0.53%)</title><rect x="925.6" y="389" width="6.2" height="15.0" fill="rgb(239,221,29)" rx="2" ry="2" />
<text  x="928.55" y="399.5" ></text>
</g>
<g >
<title>put_page (4,000,000 samples, 0.02%)</title><rect x="1175.0" y="549" width="0.2" height="15.0" fill="rgb(238,182,42)" rx="2" ry="2" />
<text  x="1177.97" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="1141.1" y="405" width="0.2" height="15.0" fill="rgb(233,206,32)" rx="2" ry="2" />
<text  x="1144.12" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="25.4" y="629" width="0.2" height="15.0" fill="rgb(221,19,5)" rx="2" ry="2" />
<text  x="28.43" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4,000,000 samples, 0.02%)</title><rect x="678.7" y="341" width="0.2" height="15.0" fill="rgb(223,176,35)" rx="2" ry="2" />
<text  x="681.73" y="351.5" ></text>
</g>
<g >
<title>rb_next (4,000,000 samples, 0.02%)</title><rect x="346.6" y="437" width="0.2" height="15.0" fill="rgb(216,92,34)" rx="2" ry="2" />
<text  x="349.57" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_Head_base&lt;std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="501.2" y="421" width="0.4" height="15.0" fill="rgb(239,19,9)" rx="2" ry="2" />
<text  x="504.23" y="431.5" ></text>
</g>
<g >
<title>__bio_add_page (4,000,000 samples, 0.02%)</title><rect x="362.4" y="389" width="0.2" height="15.0" fill="rgb(240,31,15)" rx="2" ry="2" />
<text  x="365.40" y="399.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (48,000,000 samples, 0.20%)</title><rect x="742.2" y="389" width="2.4" height="15.0" fill="rgb(215,208,15)" rx="2" ry="2" />
<text  x="745.24" y="399.5" ></text>
</g>
<g >
<title>crc_16 (4,000,000 samples, 0.02%)</title><rect x="358.4" y="373" width="0.2" height="15.0" fill="rgb(233,71,21)" rx="2" ry="2" />
<text  x="361.39" y="383.5" ></text>
</g>
<g >
<title>generic_update_time (4,000,000 samples, 0.02%)</title><rect x="452.8" y="501" width="0.2" height="15.0" fill="rgb(229,162,17)" rx="2" ry="2" />
<text  x="455.75" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_free (20,000,000 samples, 0.08%)</title><rect x="410.7" y="437" width="1.0" height="15.0" fill="rgb(234,121,36)" rx="2" ry="2" />
<text  x="413.68" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (84,000,000 samples, 0.36%)</title><rect x="1145.3" y="357" width="4.2" height="15.0" fill="rgb(221,14,35)" rx="2" ry="2" />
<text  x="1148.32" y="367.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (4,000,000 samples, 0.02%)</title><rect x="1168.2" y="437" width="0.2" height="15.0" fill="rgb(235,79,23)" rx="2" ry="2" />
<text  x="1171.16" y="447.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (64,000,000 samples, 0.27%)</title><rect x="608.8" y="373" width="3.2" height="15.0" fill="rgb(229,105,25)" rx="2" ry="2" />
<text  x="611.81" y="383.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (28,000,000 samples, 0.12%)</title><rect x="1049.4" y="309" width="1.4" height="15.0" fill="rgb(241,64,53)" rx="2" ry="2" />
<text  x="1052.36" y="319.5" ></text>
</g>
<g >
<title>rcu_all_qs (4,000,000 samples, 0.02%)</title><rect x="441.7" y="405" width="0.2" height="15.0" fill="rgb(226,81,29)" rx="2" ry="2" />
<text  x="444.73" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (12,000,000 samples, 0.05%)</title><rect x="909.1" y="389" width="0.6" height="15.0" fill="rgb(218,38,21)" rx="2" ry="2" />
<text  x="912.12" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="526.3" y="501" width="0.2" height="15.0" fill="rgb(228,126,4)" rx="2" ry="2" />
<text  x="529.28" y="511.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::status (4,000,000 samples, 0.02%)</title><rect x="769.1" y="405" width="0.2" height="15.0" fill="rgb(245,90,6)" rx="2" ry="2" />
<text  x="772.09" y="415.5" ></text>
</g>
<g >
<title>crypto_shash_update (16,000,000 samples, 0.07%)</title><rect x="348.0" y="389" width="0.8" height="15.0" fill="rgb(224,20,38)" rx="2" ry="2" />
<text  x="350.97" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::__setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; (16,000,000 samples, 0.07%)</title><rect x="934.6" y="437" width="0.8" height="15.0" fill="rgb(229,185,53)" rx="2" ry="2" />
<text  x="937.57" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="526.5" y="501" width="0.6" height="15.0" fill="rgb(213,79,48)" rx="2" ry="2" />
<text  x="529.48" y="511.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="895.9" y="373" width="0.2" height="15.0" fill="rgb(233,35,15)" rx="2" ry="2" />
<text  x="898.90" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (12,000,000 samples, 0.05%)</title><rect x="780.1" y="421" width="0.6" height="15.0" fill="rgb(246,118,40)" rx="2" ry="2" />
<text  x="783.11" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixEnv::BackgroundThreadNodeEntryPoint (4,176,000,000 samples, 17.72%)</title><rect x="565.1" y="517" width="209.2" height="15.0" fill="rgb(246,217,14)" rx="2" ry="2" />
<text  x="568.14" y="527.5" >leveldb::(anonymous namespa..</text>
</g>
<g >
<title>std::atomic&lt;unsigned int&gt;::atomic (4,000,000 samples, 0.02%)</title><rect x="1147.9" y="293" width="0.2" height="15.0" fill="rgb(238,82,24)" rx="2" ry="2" />
<text  x="1150.93" y="303.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::MemTableInserter (4,000,000 samples, 0.02%)</title><rect x="993.1" y="437" width="0.2" height="15.0" fill="rgb(225,34,2)" rx="2" ry="2" />
<text  x="996.07" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::front (20,000,000 samples, 0.08%)</title><rect x="936.4" y="437" width="1.0" height="15.0" fill="rgb(221,97,35)" rx="2" ry="2" />
<text  x="939.37" y="447.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Flush (32,000,000 samples, 0.14%)</title><rect x="700.2" y="357" width="1.6" height="15.0" fill="rgb(205,41,54)" rx="2" ry="2" />
<text  x="703.17" y="367.5" ></text>
</g>
<g >
<title>leveldb::VarintLength (4,000,000 samples, 0.02%)</title><rect x="1086.0" y="389" width="0.2" height="15.0" fill="rgb(214,61,47)" rx="2" ry="2" />
<text  x="1089.02" y="399.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (4,000,000 samples, 0.02%)</title><rect x="25.4" y="533" width="0.2" height="15.0" fill="rgb(244,116,3)" rx="2" ry="2" />
<text  x="28.43" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (172,000,000 samples, 0.73%)</title><rect x="964.4" y="389" width="8.6" height="15.0" fill="rgb(228,184,9)" rx="2" ry="2" />
<text  x="967.42" y="399.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (4,000,000 samples, 0.02%)</title><rect x="359.4" y="357" width="0.2" height="15.0" fill="rgb(205,28,21)" rx="2" ry="2" />
<text  x="362.39" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::~_Result_base (4,000,000 samples, 0.02%)</title><rect x="970.2" y="245" width="0.2" height="15.0" fill="rgb(210,227,35)" rx="2" ry="2" />
<text  x="973.23" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::push_back (28,000,000 samples, 0.12%)</title><rect x="937.8" y="437" width="1.4" height="15.0" fill="rgb(231,216,8)" rx="2" ry="2" />
<text  x="940.77" y="447.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::value (20,000,000 samples, 0.08%)</title><rect x="685.9" y="373" width="1.0" height="15.0" fill="rgb(231,185,54)" rx="2" ry="2" />
<text  x="688.95" y="383.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_value (8,000,000 samples, 0.03%)</title><rect x="952.6" y="437" width="0.4" height="15.0" fill="rgb(216,152,41)" rx="2" ry="2" />
<text  x="955.60" y="447.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.11 (4,000,000 samples, 0.02%)</title><rect x="356.8" y="373" width="0.2" height="15.0" fill="rgb(222,69,51)" rx="2" ry="2" />
<text  x="359.79" y="383.5" ></text>
</g>
<g >
<title>[unknown] (23,272,000,000 samples, 98.78%)</title><rect x="10.0" y="661" width="1165.6" height="15.0" fill="rgb(208,76,41)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >[unknown]</text>
</g>
<g >
<title>leveldb::DecodeFixed64 (4,000,000 samples, 0.02%)</title><rect x="791.5" y="421" width="0.2" height="15.0" fill="rgb(213,7,47)" rx="2" ry="2" />
<text  x="794.52" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="505.6" y="405" width="0.6" height="15.0" fill="rgb(208,218,48)" rx="2" ry="2" />
<text  x="508.64" y="415.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Equal (8,000,000 samples, 0.03%)</title><rect x="795.9" y="373" width="0.4" height="15.0" fill="rgb(217,73,50)" rx="2" ry="2" />
<text  x="798.93" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (32,000,000 samples, 0.14%)</title><rect x="489.2" y="533" width="1.6" height="15.0" fill="rgb(243,52,50)" rx="2" ry="2" />
<text  x="492.21" y="543.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (136,000,000 samples, 0.58%)</title><rect x="437.3" y="453" width="6.8" height="15.0" fill="rgb(212,115,16)" rx="2" ry="2" />
<text  x="440.32" y="463.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::_Reset (4,000,000 samples, 0.02%)</title><rect x="950.2" y="437" width="0.2" height="15.0" fill="rgb(215,163,28)" rx="2" ry="2" />
<text  x="953.19" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (4,000,000 samples, 0.02%)</title><rect x="972.4" y="277" width="0.2" height="15.0" fill="rgb(248,93,40)" rx="2" ry="2" />
<text  x="975.43" y="287.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (28,000,000 samples, 0.12%)</title><rect x="822.4" y="325" width="1.4" height="15.0" fill="rgb(235,151,32)" rx="2" ry="2" />
<text  x="825.38" y="335.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (8,000,000 samples, 0.03%)</title><rect x="386.4" y="389" width="0.4" height="15.0" fill="rgb(239,225,22)" rx="2" ry="2" />
<text  x="389.44" y="399.5" ></text>
</g>
<g >
<title>ext4_ext_insert_extent (40,000,000 samples, 0.17%)</title><rect x="347.8" y="437" width="2.0" height="15.0" fill="rgb(215,40,31)" rx="2" ry="2" />
<text  x="350.77" y="447.5" ></text>
</g>
<g >
<title>leveldb::MutexLock::MutexLock (4,000,000 samples, 0.02%)</title><rect x="946.2" y="453" width="0.2" height="15.0" fill="rgb(208,42,27)" rx="2" ry="2" />
<text  x="949.19" y="463.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Update (48,000,000 samples, 0.20%)</title><rect x="674.9" y="325" width="2.4" height="15.0" fill="rgb(236,35,10)" rx="2" ry="2" />
<text  x="677.93" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (164,000,000 samples, 0.70%)</title><rect x="365.8" y="309" width="8.2" height="15.0" fill="rgb(254,195,15)" rx="2" ry="2" />
<text  x="368.80" y="319.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::store (12,000,000 samples, 0.05%)</title><rect x="1081.2" y="341" width="0.6" height="15.0" fill="rgb(242,97,48)" rx="2" ry="2" />
<text  x="1084.22" y="351.5" ></text>
</g>
<g >
<title>show_cpuinfo (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="517" width="0.2" height="15.0" fill="rgb(227,215,3)" rx="2" ry="2" />
<text  x="1187.19" y="527.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (8,000,000 samples, 0.03%)</title><rect x="737.6" y="373" width="0.4" height="15.0" fill="rgb(251,107,22)" rx="2" ry="2" />
<text  x="740.63" y="383.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (4,000,000 samples, 0.02%)</title><rect x="794.1" y="389" width="0.2" height="15.0" fill="rgb(245,72,9)" rx="2" ry="2" />
<text  x="797.13" y="399.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::__atomic_futex_unsigned (8,000,000 samples, 0.03%)</title><rect x="1147.5" y="293" width="0.4" height="15.0" fill="rgb(233,85,32)" rx="2" ry="2" />
<text  x="1150.53" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::allocator (4,000,000 samples, 0.02%)</title><rect x="958.4" y="309" width="0.2" height="15.0" fill="rgb(236,165,14)" rx="2" ry="2" />
<text  x="961.41" y="319.5" ></text>
</g>
<g >
<title>leveldb::VarintLength (20,000,000 samples, 0.08%)</title><rect x="896.1" y="373" width="1.0" height="15.0" fill="rgb(243,190,16)" rx="2" ry="2" />
<text  x="899.10" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::end (12,000,000 samples, 0.05%)</title><rect x="994.9" y="421" width="0.6" height="15.0" fill="rgb(245,2,51)" rx="2" ry="2" />
<text  x="997.87" y="431.5" ></text>
</g>
<g >
<title>vm_insert_mixed (8,000,000 samples, 0.03%)</title><rect x="669.1" y="133" width="0.4" height="15.0" fill="rgb(238,226,41)" rx="2" ry="2" />
<text  x="672.12" y="143.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (8,000,000 samples, 0.03%)</title><rect x="448.1" y="437" width="0.4" height="15.0" fill="rgb(222,49,53)" rx="2" ry="2" />
<text  x="451.14" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (4,000,000 samples, 0.02%)</title><rect x="527.7" y="565" width="0.2" height="15.0" fill="rgb(227,222,37)" rx="2" ry="2" />
<text  x="530.68" y="575.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (4,000,000 samples, 0.02%)</title><rect x="353.4" y="341" width="0.2" height="15.0" fill="rgb(244,22,40)" rx="2" ry="2" />
<text  x="356.38" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (196,000,000 samples, 0.83%)</title><rect x="1154.3" y="421" width="9.9" height="15.0" fill="rgb(226,212,44)" rx="2" ry="2" />
<text  x="1157.34" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_single (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="469" width="0.2" height="15.0" fill="rgb(228,164,18)" rx="2" ry="2" />
<text  x="1187.19" y="479.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4,000,000 samples, 0.02%)</title><rect x="10.0" y="405" width="0.2" height="15.0" fill="rgb(215,45,39)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="362.6" y="357" width="0.2" height="15.0" fill="rgb(239,226,2)" rx="2" ry="2" />
<text  x="365.60" y="367.5" ></text>
</g>
<g >
<title>ext4_orphan_add (92,000,000 samples, 0.39%)</title><rect x="386.4" y="469" width="4.6" height="15.0" fill="rgb(253,204,48)" rx="2" ry="2" />
<text  x="389.44" y="479.5" ></text>
</g>
<g >
<title>blkdev_issue_zeroout (456,000,000 samples, 1.94%)</title><rect x="361.6" y="437" width="22.8" height="15.0" fill="rgb(237,199,36)" rx="2" ry="2" />
<text  x="364.60" y="447.5" >b..</text>
</g>
<g >
<title>leveldb::Slice::size (40,000,000 samples, 0.17%)</title><rect x="602.8" y="357" width="2.0" height="15.0" fill="rgb(240,1,31)" rx="2" ry="2" />
<text  x="605.80" y="367.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::KeyIsAfterNode (1,540,000,000 samples, 6.54%)</title><rect x="806.8" y="341" width="77.1" height="15.0" fill="rgb(226,74,47)" rx="2" ry="2" />
<text  x="809.75" y="351.5" >leveldb:..</text>
</g>
<g >
<title>__GI___rmdir (4,000,000 samples, 0.02%)</title><rect x="26.0" y="581" width="0.2" height="15.0" fill="rgb(216,170,35)" rx="2" ry="2" />
<text  x="29.03" y="591.5" ></text>
</g>
<g >
<title>futex_wake (48,000,000 samples, 0.20%)</title><rect x="482.0" y="565" width="2.4" height="15.0" fill="rgb(214,227,39)" rx="2" ry="2" />
<text  x="485.00" y="575.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::Stats::FinishedSingleOp (4,000,000 samples, 0.02%)</title><rect x="774.3" y="485" width="0.2" height="15.0" fill="rgb(228,177,45)" rx="2" ry="2" />
<text  x="777.30" y="495.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt; (20,000,000 samples, 0.08%)</title><rect x="492.2" y="501" width="1.0" height="15.0" fill="rgb(222,209,43)" rx="2" ry="2" />
<text  x="495.22" y="511.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Extend (24,000,000 samples, 0.10%)</title><rect x="700.6" y="293" width="1.2" height="15.0" fill="rgb(244,40,35)" rx="2" ry="2" />
<text  x="703.57" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (4,000,000 samples, 0.02%)</title><rect x="954.6" y="405" width="0.2" height="15.0" fill="rgb(249,189,31)" rx="2" ry="2" />
<text  x="957.60" y="415.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed64 (16,000,000 samples, 0.07%)</title><rect x="1095.2" y="421" width="0.8" height="15.0" fill="rgb(241,1,34)" rx="2" ry="2" />
<text  x="1098.24" y="431.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (20,000,000 samples, 0.08%)</title><rect x="346.8" y="453" width="1.0" height="15.0" fill="rgb(244,155,15)" rx="2" ry="2" />
<text  x="349.77" y="463.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::~promise (252,000,000 samples, 1.07%)</title><rect x="962.8" y="453" width="12.6" height="15.0" fill="rgb(230,53,9)" rx="2" ry="2" />
<text  x="965.81" y="463.5" ></text>
</g>
<g >
<title>crc_10 (4,000,000 samples, 0.02%)</title><rect x="358.0" y="373" width="0.2" height="15.0" fill="rgb(231,175,4)" rx="2" ry="2" />
<text  x="360.99" y="383.5" ></text>
</g>
<g >
<title>leveldb::InternalKey::DecodeFrom (4,000,000 samples, 0.02%)</title><rect x="773.7" y="437" width="0.2" height="15.0" fill="rgb(226,183,36)" rx="2" ry="2" />
<text  x="776.69" y="447.5" ></text>
</g>
<g >
<title>_raw_read_lock (4,000,000 samples, 0.02%)</title><rect x="669.3" y="37" width="0.2" height="15.0" fill="rgb(222,50,24)" rx="2" ry="2" />
<text  x="672.32" y="47.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="503.0" y="437" width="0.4" height="15.0" fill="rgb(226,158,43)" rx="2" ry="2" />
<text  x="506.04" y="447.5" ></text>
</g>
<g >
<title>generic_make_request_checks (20,000,000 samples, 0.08%)</title><rect x="364.4" y="373" width="1.0" height="15.0" fill="rgb(237,204,42)" rx="2" ry="2" />
<text  x="367.40" y="383.5" ></text>
</g>
<g >
<title>__brelse (4,000,000 samples, 0.02%)</title><rect x="444.5" y="453" width="0.2" height="15.0" fill="rgb(235,18,43)" rx="2" ry="2" />
<text  x="447.54" y="463.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::FindSmallest (4,000,000 samples, 0.02%)</title><rect x="640.1" y="421" width="0.2" height="15.0" fill="rgb(218,71,49)" rx="2" ry="2" />
<text  x="643.07" y="431.5" ></text>
</g>
<g >
<title>map_id_up (8,000,000 samples, 0.03%)</title><rect x="436.9" y="421" width="0.4" height="15.0" fill="rgb(210,53,6)" rx="2" ry="2" />
<text  x="439.92" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="787.1" y="437" width="0.2" height="15.0" fill="rgb(211,70,38)" rx="2" ry="2" />
<text  x="790.12" y="447.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (24,000,000 samples, 0.10%)</title><rect x="446.7" y="453" width="1.2" height="15.0" fill="rgb(240,129,23)" rx="2" ry="2" />
<text  x="449.74" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait (24,000,000 samples, 0.10%)</title><rect x="1136.7" y="421" width="1.2" height="15.0" fill="rgb(249,84,45)" rx="2" ry="2" />
<text  x="1139.71" y="431.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (460,000,000 samples, 1.95%)</title><rect x="827.6" y="309" width="23.0" height="15.0" fill="rgb(251,28,32)" rx="2" ry="2" />
<text  x="830.59" y="319.5" >l..</text>
</g>
<g >
<title>[unknown] (8,000,000 samples, 0.03%)</title><rect x="10.0" y="581" width="0.4" height="15.0" fill="rgb(224,179,1)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>memset_erms (16,000,000 samples, 0.07%)</title><rect x="399.3" y="437" width="0.8" height="15.0" fill="rgb(244,99,25)" rx="2" ry="2" />
<text  x="402.26" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8,000,000 samples, 0.03%)</title><rect x="407.1" y="405" width="0.4" height="15.0" fill="rgb(218,158,51)" rx="2" ry="2" />
<text  x="410.07" y="415.5" ></text>
</g>
<g >
<title>vfprintf (100,000,000 samples, 0.42%)</title><rect x="20.4" y="629" width="5.0" height="15.0" fill="rgb(212,52,6)" rx="2" ry="2" />
<text  x="23.42" y="639.5" ></text>
</g>
<g >
<title>mutex_unlock (28,000,000 samples, 0.12%)</title><rect x="38.8" y="565" width="1.5" height="15.0" fill="rgb(212,34,53)" rx="2" ry="2" />
<text  x="41.85" y="575.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Next (12,000,000 samples, 0.05%)</title><rect x="567.3" y="357" width="0.6" height="15.0" fill="rgb(249,141,50)" rx="2" ry="2" />
<text  x="570.34" y="367.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::value (4,000,000 samples, 0.02%)</title><rect x="685.7" y="373" width="0.2" height="15.0" fill="rgb(234,25,8)" rx="2" ry="2" />
<text  x="688.75" y="383.5" ></text>
</g>
<g >
<title>std::__addressof&lt;leveldb::Status const&gt; (4,000,000 samples, 0.02%)</title><rect x="942.2" y="405" width="0.2" height="15.0" fill="rgb(253,108,38)" rx="2" ry="2" />
<text  x="945.18" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Sync (4,000,000 samples, 0.02%)</title><rect x="566.9" y="389" width="0.2" height="15.0" fill="rgb(239,102,33)" rx="2" ry="2" />
<text  x="569.94" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1150.1" y="325" width="0.2" height="15.0" fill="rgb(225,204,12)" rx="2" ry="2" />
<text  x="1153.13" y="335.5" ></text>
</g>
<g >
<title>rcu_all_qs (4,000,000 samples, 0.02%)</title><rect x="390.8" y="421" width="0.2" height="15.0" fill="rgb(231,128,44)" rx="2" ry="2" />
<text  x="393.85" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (8,000,000 samples, 0.03%)</title><rect x="498.0" y="421" width="0.4" height="15.0" fill="rgb(226,142,36)" rx="2" ry="2" />
<text  x="501.03" y="431.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (44,000,000 samples, 0.19%)</title><rect x="583.4" y="357" width="2.2" height="15.0" fill="rgb(205,65,15)" rx="2" ry="2" />
<text  x="586.37" y="367.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::Next (252,000,000 samples, 1.07%)</title><rect x="664.7" y="357" width="12.6" height="15.0" fill="rgb(208,128,0)" rx="2" ry="2" />
<text  x="667.71" y="367.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (52,000,000 samples, 0.22%)</title><rect x="585.6" y="357" width="2.6" height="15.0" fill="rgb(234,178,24)" rx="2" ry="2" />
<text  x="588.58" y="367.5" ></text>
</g>
<g >
<title>leveldb::VarintLength (4,000,000 samples, 0.02%)</title><rect x="1085.8" y="373" width="0.2" height="15.0" fill="rgb(242,127,8)" rx="2" ry="2" />
<text  x="1088.82" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4,000,000 samples, 0.02%)</title><rect x="350.8" y="405" width="0.2" height="15.0" fill="rgb(239,124,12)" rx="2" ry="2" />
<text  x="353.78" y="415.5" ></text>
</g>
<g >
<title>blk_status_to_errno (4,000,000 samples, 0.02%)</title><rect x="374.0" y="357" width="0.2" height="15.0" fill="rgb(213,143,22)" rx="2" ry="2" />
<text  x="377.02" y="367.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (12,000,000 samples, 0.05%)</title><rect x="18.6" y="629" width="0.6" height="15.0" fill="rgb(230,173,1)" rx="2" ry="2" />
<text  x="21.61" y="639.5" ></text>
</g>
<g >
<title>snappy::Compress (4,000,000 samples, 0.02%)</title><rect x="1184.4" y="661" width="0.2" height="15.0" fill="rgb(236,126,34)" rx="2" ry="2" />
<text  x="1187.39" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (4,000,000 samples, 0.02%)</title><rect x="1165.4" y="421" width="0.2" height="15.0" fill="rgb(248,167,51)" rx="2" ry="2" />
<text  x="1168.36" y="431.5" ></text>
</g>
<g >
<title>std::mutex::unlock (24,000,000 samples, 0.10%)</title><rect x="999.5" y="405" width="1.2" height="15.0" fill="rgb(239,147,32)" rx="2" ry="2" />
<text  x="1002.48" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (8,000,000 samples, 0.03%)</title><rect x="951.4" y="341" width="0.4" height="15.0" fill="rgb(243,130,6)" rx="2" ry="2" />
<text  x="954.40" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (24,000,000 samples, 0.10%)</title><rect x="1126.3" y="421" width="1.2" height="15.0" fill="rgb(223,64,50)" rx="2" ry="2" />
<text  x="1129.29" y="431.5" ></text>
</g>
<g >
<title>leveldb::PutLengthPrefixedSlice (36,000,000 samples, 0.15%)</title><rect x="980.6" y="453" width="1.8" height="15.0" fill="rgb(228,155,31)" rx="2" ry="2" />
<text  x="983.65" y="463.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (52,000,000 samples, 0.22%)</title><rect x="351.4" y="389" width="2.6" height="15.0" fill="rgb(238,148,9)" rx="2" ry="2" />
<text  x="354.38" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (32,000,000 samples, 0.14%)</title><rect x="1138.3" y="421" width="1.6" height="15.0" fill="rgb(214,18,39)" rx="2" ry="2" />
<text  x="1141.31" y="431.5" ></text>
</g>
<g >
<title>crypto_shash_update (4,000,000 samples, 0.02%)</title><rect x="359.0" y="389" width="0.2" height="15.0" fill="rgb(225,103,22)" rx="2" ry="2" />
<text  x="361.99" y="399.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (4,000,000 samples, 0.02%)</title><rect x="51.7" y="469" width="0.2" height="15.0" fill="rgb(210,226,39)" rx="2" ry="2" />
<text  x="54.67" y="479.5" ></text>
</g>
<g >
<title>ext4_iomap_end (1,132,000,000 samples, 4.80%)</title><rect x="392.8" y="485" width="56.7" height="15.0" fill="rgb(252,24,54)" rx="2" ry="2" />
<text  x="395.85" y="495.5" >ext4_i..</text>
</g>
<g >
<title>__brelse (12,000,000 samples, 0.05%)</title><rect x="412.9" y="453" width="0.6" height="15.0" fill="rgb(230,18,46)" rx="2" ry="2" />
<text  x="415.88" y="463.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::SetNext (4,000,000 samples, 0.02%)</title><rect x="893.7" y="357" width="0.2" height="15.0" fill="rgb(242,120,17)" rx="2" ry="2" />
<text  x="896.70" y="367.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (20,000,000 samples, 0.08%)</title><rect x="1070.6" y="309" width="1.0" height="15.0" fill="rgb(210,17,20)" rx="2" ry="2" />
<text  x="1073.60" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (12,000,000 samples, 0.05%)</title><rect x="955.6" y="325" width="0.6" height="15.0" fill="rgb(215,96,1)" rx="2" ry="2" />
<text  x="958.60" y="335.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="1070.4" y="293" width="0.2" height="15.0" fill="rgb(230,120,33)" rx="2" ry="2" />
<text  x="1073.40" y="303.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (16,000,000 samples, 0.07%)</title><rect x="1000.7" y="437" width="0.8" height="15.0" fill="rgb(254,92,2)" rx="2" ry="2" />
<text  x="1003.68" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_erase_at_end (4,000,000 samples, 0.02%)</title><rect x="615.6" y="309" width="0.2" height="15.0" fill="rgb(236,172,24)" rx="2" ry="2" />
<text  x="618.63" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="954.0" y="405" width="0.2" height="15.0" fill="rgb(225,111,26)" rx="2" ry="2" />
<text  x="957.00" y="415.5" ></text>
</g>
<g >
<title>mmput (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="581" width="0.2" height="15.0" fill="rgb(232,6,42)" rx="2" ry="2" />
<text  x="1183.58" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned int&gt;::construct&lt;unsigned int, unsigned int&gt; (4,000,000 samples, 0.02%)</title><rect x="607.8" y="309" width="0.2" height="15.0" fill="rgb(251,173,52)" rx="2" ry="2" />
<text  x="610.81" y="319.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (4,000,000 samples, 0.02%)</title><rect x="746.0" y="373" width="0.2" height="15.0" fill="rgb(241,227,6)" rx="2" ry="2" />
<text  x="749.05" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (16,000,000 samples, 0.07%)</title><rect x="497.8" y="437" width="0.8" height="15.0" fill="rgb(211,57,39)" rx="2" ry="2" />
<text  x="500.83" y="447.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (100,000,000 samples, 0.42%)</title><rect x="1086.2" y="405" width="5.0" height="15.0" fill="rgb(209,4,48)" rx="2" ry="2" />
<text  x="1089.22" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (8,000,000 samples, 0.03%)</title><rect x="958.2" y="341" width="0.4" height="15.0" fill="rgb(229,50,41)" rx="2" ry="2" />
<text  x="961.21" y="351.5" ></text>
</g>
<g >
<title>std::swap&lt;std::__future_base::_Result_base*&gt; (20,000,000 samples, 0.08%)</title><rect x="523.3" y="501" width="1.0" height="15.0" fill="rgb(224,79,31)" rx="2" ry="2" />
<text  x="526.27" y="511.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (12,000,000 samples, 0.05%)</title><rect x="1159.1" y="357" width="0.6" height="15.0" fill="rgb(238,94,4)" rx="2" ry="2" />
<text  x="1162.15" y="367.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Update (16,000,000 samples, 0.07%)</title><rect x="681.3" y="389" width="0.8" height="15.0" fill="rgb(222,195,5)" rx="2" ry="2" />
<text  x="684.34" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (8,000,000 samples, 0.03%)</title><rect x="1174.8" y="581" width="0.4" height="15.0" fill="rgb(236,196,49)" rx="2" ry="2" />
<text  x="1177.77" y="591.5" ></text>
</g>
<g >
<title>isspace (4,000,000 samples, 0.02%)</title><rect x="25.8" y="565" width="0.2" height="15.0" fill="rgb(227,35,12)" rx="2" ry="2" />
<text  x="28.83" y="575.5" ></text>
</g>
<g >
<title>__dax_invalidate_mapping_entry (4,000,000 samples, 0.02%)</title><rect x="773.3" y="229" width="0.2" height="15.0" fill="rgb(211,104,14)" rx="2" ry="2" />
<text  x="776.29" y="239.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (12,000,000 samples, 0.05%)</title><rect x="348.8" y="389" width="0.6" height="15.0" fill="rgb(223,124,30)" rx="2" ry="2" />
<text  x="351.77" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="511.9" y="453" width="0.2" height="15.0" fill="rgb(205,73,17)" rx="2" ry="2" />
<text  x="514.85" y="463.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (152,000,000 samples, 0.65%)</title><rect x="1039.1" y="293" width="7.7" height="15.0" fill="rgb(253,9,34)" rx="2" ry="2" />
<text  x="1042.14" y="303.5" ></text>
</g>
<g >
<title>start_this_handle (68,000,000 samples, 0.29%)</title><rect x="400.1" y="437" width="3.4" height="15.0" fill="rgb(209,99,50)" rx="2" ry="2" />
<text  x="403.06" y="447.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (60,000,000 samples, 0.25%)</title><rect x="351.0" y="421" width="3.0" height="15.0" fill="rgb(232,32,18)" rx="2" ry="2" />
<text  x="353.98" y="431.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Next (8,000,000 samples, 0.03%)</title><rect x="692.6" y="341" width="0.4" height="15.0" fill="rgb(214,19,11)" rx="2" ry="2" />
<text  x="695.56" y="351.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::Valid (4,000,000 samples, 0.02%)</title><rect x="680.3" y="325" width="0.2" height="15.0" fill="rgb(236,57,3)" rx="2" ry="2" />
<text  x="683.34" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,000,000 samples, 0.02%)</title><rect x="965.8" y="357" width="0.2" height="15.0" fill="rgb(224,96,26)" rx="2" ry="2" />
<text  x="968.82" y="367.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (4,000,000 samples, 0.02%)</title><rect x="931.8" y="405" width="0.2" height="15.0" fill="rgb(223,136,27)" rx="2" ry="2" />
<text  x="934.76" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::Valid (8,000,000 samples, 0.03%)</title><rect x="684.9" y="389" width="0.4" height="15.0" fill="rgb(205,106,46)" rx="2" ry="2" />
<text  x="687.94" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (20,000,000 samples, 0.08%)</title><rect x="951.0" y="405" width="1.0" height="15.0" fill="rgb(228,141,5)" rx="2" ry="2" />
<text  x="953.99" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (12,000,000 samples, 0.05%)</title><rect x="963.2" y="405" width="0.6" height="15.0" fill="rgb(217,94,10)" rx="2" ry="2" />
<text  x="966.22" y="415.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed64 (24,000,000 samples, 0.10%)</title><rect x="705.4" y="405" width="1.2" height="15.0" fill="rgb(230,206,21)" rx="2" ry="2" />
<text  x="708.38" y="415.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (16,000,000 samples, 0.07%)</title><rect x="584.6" y="341" width="0.8" height="15.0" fill="rgb(232,146,34)" rx="2" ry="2" />
<text  x="587.57" y="351.5" ></text>
</g>
<g >
<title>leveldb::test::CompressibleString (16,000,000 samples, 0.07%)</title><rect x="989.1" y="453" width="0.8" height="15.0" fill="rgb(214,19,28)" rx="2" ry="2" />
<text  x="992.06" y="463.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (72,000,000 samples, 0.31%)</title><rect x="407.1" y="421" width="3.6" height="15.0" fill="rgb(212,161,13)" rx="2" ry="2" />
<text  x="410.07" y="431.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (4,000,000 samples, 0.02%)</title><rect x="359.2" y="373" width="0.2" height="15.0" fill="rgb(239,30,21)" rx="2" ry="2" />
<text  x="362.19" y="383.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (8,000,000 samples, 0.03%)</title><rect x="1177.6" y="661" width="0.4" height="15.0" fill="rgb(210,158,29)" rx="2" ry="2" />
<text  x="1180.58" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (12,000,000 samples, 0.05%)</title><rect x="1137.3" y="373" width="0.6" height="15.0" fill="rgb(230,12,3)" rx="2" ry="2" />
<text  x="1140.31" y="383.5" ></text>
</g>
<g >
<title>down_write_trylock (16,000,000 samples, 0.07%)</title><rect x="449.7" y="517" width="0.8" height="15.0" fill="rgb(245,156,19)" rx="2" ry="2" />
<text  x="452.75" y="527.5" ></text>
</g>
<g >
<title>std::mutex::unlock (16,000,000 samples, 0.07%)</title><rect x="933.4" y="421" width="0.8" height="15.0" fill="rgb(212,71,17)" rx="2" ry="2" />
<text  x="936.37" y="431.5" ></text>
</g>
<g >
<title>path_openat (4,000,000 samples, 0.02%)</title><rect x="783.1" y="325" width="0.2" height="15.0" fill="rgb(242,200,40)" rx="2" ry="2" />
<text  x="786.11" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;leveldb::FileMetaData*, std::allocator&lt;leveldb::FileMetaData*&gt; &gt;::size (4,000,000 samples, 0.02%)</title><rect x="783.3" y="405" width="0.2" height="15.0" fill="rgb(206,10,17)" rx="2" ry="2" />
<text  x="786.31" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::construct&lt;std::__future_base::_State_baseV2&gt; (48,000,000 samples, 0.20%)</title><rect x="1147.1" y="325" width="2.4" height="15.0" fill="rgb(241,217,3)" rx="2" ry="2" />
<text  x="1150.13" y="335.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32 (12,000,000 samples, 0.05%)</title><rect x="1091.2" y="405" width="0.6" height="15.0" fill="rgb(215,201,54)" rx="2" ry="2" />
<text  x="1094.23" y="415.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (4,000,000 samples, 0.02%)</title><rect x="746.2" y="389" width="0.2" height="15.0" fill="rgb(236,18,49)" rx="2" ry="2" />
<text  x="749.25" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (8,000,000 samples, 0.03%)</title><rect x="942.4" y="405" width="0.4" height="15.0" fill="rgb(216,87,39)" rx="2" ry="2" />
<text  x="945.38" y="415.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (32,000,000 samples, 0.14%)</title><rect x="472.2" y="645" width="1.6" height="15.0" fill="rgb(208,216,39)" rx="2" ry="2" />
<text  x="475.18" y="655.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::~allocator (4,000,000 samples, 0.02%)</title><rect x="966.0" y="309" width="0.2" height="15.0" fill="rgb(211,90,41)" rx="2" ry="2" />
<text  x="969.02" y="319.5" ></text>
</g>
<g >
<title>to_nd_region (4,000,000 samples, 0.02%)</title><rect x="384.2" y="373" width="0.2" height="15.0" fill="rgb(221,17,47)" rx="2" ry="2" />
<text  x="387.23" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (4,000,000 samples, 0.02%)</title><rect x="971.8" y="293" width="0.2" height="15.0" fill="rgb(238,201,18)" rx="2" ry="2" />
<text  x="974.83" y="303.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::NextEntryOffset (16,000,000 samples, 0.07%)</title><rect x="672.7" y="293" width="0.8" height="15.0" fill="rgb(212,69,33)" rx="2" ry="2" />
<text  x="675.72" y="303.5" ></text>
</g>
<g >
<title>__once_proxy (16,000,000 samples, 0.07%)</title><rect x="470.0" y="645" width="0.8" height="15.0" fill="rgb(248,29,12)" rx="2" ry="2" />
<text  x="472.98" y="655.5" ></text>
</g>
<g >
<title>leveldb::Random::Next (16,000,000 samples, 0.07%)</title><rect x="976.4" y="453" width="0.8" height="15.0" fill="rgb(245,101,53)" rx="2" ry="2" />
<text  x="979.44" y="463.5" ></text>
</g>
<g >
<title>leveldb::MemTable::KeyComparator::operator (20,000,000 samples, 0.08%)</title><rect x="1017.3" y="341" width="1.0" height="15.0" fill="rgb(216,40,38)" rx="2" ry="2" />
<text  x="1020.31" y="351.5" ></text>
</g>
<g >
<title>crypto_shash_update (4,000,000 samples, 0.02%)</title><rect x="446.9" y="421" width="0.2" height="15.0" fill="rgb(223,26,40)" rx="2" ry="2" />
<text  x="449.94" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,000,000 samples, 0.03%)</title><rect x="963.4" y="389" width="0.4" height="15.0" fill="rgb(243,166,8)" rx="2" ry="2" />
<text  x="966.42" y="399.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1163.8" y="373" width="0.2" height="15.0" fill="rgb(249,79,31)" rx="2" ry="2" />
<text  x="1166.76" y="383.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (36,000,000 samples, 0.15%)</title><rect x="351.4" y="373" width="1.8" height="15.0" fill="rgb(212,145,46)" rx="2" ry="2" />
<text  x="354.38" y="383.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::~future (12,000,000 samples, 0.05%)</title><rect x="953.6" y="453" width="0.6" height="15.0" fill="rgb(240,71,14)" rx="2" ry="2" />
<text  x="956.60" y="463.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Next (340,000,000 samples, 1.44%)</title><rect x="663.9" y="373" width="17.0" height="15.0" fill="rgb(251,173,45)" rx="2" ry="2" />
<text  x="666.91" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (8,000,000 samples, 0.03%)</title><rect x="517.5" y="517" width="0.4" height="15.0" fill="rgb(244,68,39)" rx="2" ry="2" />
<text  x="520.46" y="527.5" ></text>
</g>
<g >
<title>memcpy@plt (4,000,000 samples, 0.02%)</title><rect x="1122.9" y="405" width="0.2" height="15.0" fill="rgb(240,65,43)" rx="2" ry="2" />
<text  x="1125.89" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::Valid (4,000,000 samples, 0.02%)</title><rect x="658.9" y="405" width="0.2" height="15.0" fill="rgb(243,198,35)" rx="2" ry="2" />
<text  x="661.90" y="415.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (8,000,000 samples, 0.03%)</title><rect x="1116.3" y="389" width="0.4" height="15.0" fill="rgb(231,182,27)" rx="2" ry="2" />
<text  x="1119.28" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (8,000,000 samples, 0.03%)</title><rect x="1124.7" y="405" width="0.4" height="15.0" fill="rgb(229,50,21)" rx="2" ry="2" />
<text  x="1127.69" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Flush (36,000,000 samples, 0.15%)</title><rect x="1099.8" y="405" width="1.9" height="15.0" fill="rgb(230,48,54)" rx="2" ry="2" />
<text  x="1102.85" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (8,000,000 samples, 0.03%)</title><rect x="1174.8" y="597" width="0.4" height="15.0" fill="rgb(249,169,48)" rx="2" ry="2" />
<text  x="1177.77" y="607.5" ></text>
</g>
<g >
<title>__wake_up (76,000,000 samples, 0.32%)</title><rect x="406.9" y="437" width="3.8" height="15.0" fill="rgb(226,115,50)" rx="2" ry="2" />
<text  x="409.87" y="447.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::DoWrite (3,736,000,000 samples, 15.86%)</title><rect x="986.5" y="485" width="187.1" height="15.0" fill="rgb(249,114,30)" rx="2" ry="2" />
<text  x="989.46" y="495.5" >leveldb::Benchmark::DoWr..</text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr@plt (4,000,000 samples, 0.02%)</title><rect x="952.0" y="437" width="0.2" height="15.0" fill="rgb(229,194,53)" rx="2" ry="2" />
<text  x="955.00" y="447.5" ></text>
</g>
<g >
<title>mempool_alloc (8,000,000 samples, 0.03%)</title><rect x="362.6" y="373" width="0.4" height="15.0" fill="rgb(223,114,20)" rx="2" ry="2" />
<text  x="365.60" y="383.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (20,000,000 samples, 0.08%)</title><rect x="751.5" y="341" width="1.0" height="15.0" fill="rgb(251,174,33)" rx="2" ry="2" />
<text  x="754.46" y="351.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (4,000,000 samples, 0.02%)</title><rect x="760.1" y="325" width="0.2" height="15.0" fill="rgb(210,126,28)" rx="2" ry="2" />
<text  x="763.07" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (20,000,000 samples, 0.08%)</title><rect x="781.3" y="405" width="1.0" height="15.0" fill="rgb(225,112,36)" rx="2" ry="2" />
<text  x="784.31" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*&amp;, std::__future_base::_Result_base::_Deleter, void&gt; (52,000,000 samples, 0.22%)</title><rect x="500.4" y="437" width="2.6" height="15.0" fill="rgb(231,195,34)" rx="2" ry="2" />
<text  x="503.43" y="447.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (60,000,000 samples, 0.25%)</title><rect x="351.0" y="405" width="3.0" height="15.0" fill="rgb(243,185,30)" rx="2" ry="2" />
<text  x="353.98" y="415.5" ></text>
</g>
<g >
<title>ext4_mb_new_blocks (200,000,000 samples, 0.85%)</title><rect x="350.8" y="437" width="10.0" height="15.0" fill="rgb(251,5,52)" rx="2" ry="2" />
<text  x="353.78" y="447.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (4,000,000 samples, 0.02%)</title><rect x="677.7" y="309" width="0.2" height="15.0" fill="rgb(233,117,11)" rx="2" ry="2" />
<text  x="680.73" y="319.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (12,000,000 samples, 0.05%)</title><rect x="1168.4" y="437" width="0.6" height="15.0" fill="rgb(251,10,0)" rx="2" ry="2" />
<text  x="1171.36" y="447.5" ></text>
</g>
<g >
<title>leveldb::Random::Uniform (24,000,000 samples, 0.10%)</title><rect x="976.0" y="469" width="1.2" height="15.0" fill="rgb(248,229,51)" rx="2" ry="2" />
<text  x="979.04" y="479.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="787.7" y="421" width="0.2" height="15.0" fill="rgb(228,82,8)" rx="2" ry="2" />
<text  x="790.72" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,588,000,000 samples, 36.45%)</title><rect x="28.8" y="629" width="430.2" height="15.0" fill="rgb(229,145,31)" rx="2" ry="2" />
<text  x="31.83" y="639.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>leveldb::DBImpl::Write (3,496,000,000 samples, 14.84%)</title><rect x="990.7" y="469" width="175.1" height="15.0" fill="rgb(252,204,47)" rx="2" ry="2" />
<text  x="993.66" y="479.5" >leveldb::DBImpl::Write</text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (4,000,000 samples, 0.02%)</title><rect x="1131.1" y="405" width="0.2" height="15.0" fill="rgb(243,49,17)" rx="2" ry="2" />
<text  x="1134.10" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (4,000,000 samples, 0.02%)</title><rect x="342.0" y="421" width="0.2" height="15.0" fill="rgb(226,179,40)" rx="2" ry="2" />
<text  x="344.96" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixEnv::BackgroundThreadNodeMain (4,176,000,000 samples, 17.72%)</title><rect x="565.1" y="501" width="209.2" height="15.0" fill="rgb(252,78,32)" rx="2" ry="2" />
<text  x="568.14" y="511.5" >leveldb::(anonymous namespa..</text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::Valid (4,000,000 samples, 0.02%)</title><rect x="670.3" y="341" width="0.2" height="15.0" fill="rgb(237,10,52)" rx="2" ry="2" />
<text  x="673.32" y="351.5" ></text>
</g>
<g >
<title>leveldb::MemTable::KeyComparator::operator (908,000,000 samples, 3.85%)</title><rect x="1026.1" y="325" width="45.5" height="15.0" fill="rgb(248,192,35)" rx="2" ry="2" />
<text  x="1029.12" y="335.5" >leve..</text>
</g>
<g >
<title>leveldb::Arena::Allocate (4,000,000 samples, 0.02%)</title><rect x="1010.3" y="373" width="0.2" height="15.0" fill="rgb(207,111,25)" rx="2" ry="2" />
<text  x="1013.30" y="383.5" ></text>
</g>
<g >
<title>leveldb::VersionSet::NumLevelFiles (4,000,000 samples, 0.02%)</title><rect x="783.3" y="421" width="0.2" height="15.0" fill="rgb(237,148,1)" rx="2" ry="2" />
<text  x="786.31" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="516.5" y="421" width="0.2" height="15.0" fill="rgb(232,23,37)" rx="2" ry="2" />
<text  x="519.46" y="431.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Count (8,000,000 samples, 0.03%)</title><rect x="901.9" y="405" width="0.4" height="15.0" fill="rgb(229,227,32)" rx="2" ry="2" />
<text  x="904.91" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (4,000,000 samples, 0.02%)</title><rect x="1128.7" y="437" width="0.2" height="15.0" fill="rgb(229,135,8)" rx="2" ry="2" />
<text  x="1131.70" y="447.5" ></text>
</g>
<g >
<title>page_fault (4,000,000 samples, 0.02%)</title><rect x="980.2" y="437" width="0.2" height="15.0" fill="rgb(211,144,11)" rx="2" ry="2" />
<text  x="983.24" y="447.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (4,000,000 samples, 0.02%)</title><rect x="977.8" y="453" width="0.2" height="15.0" fill="rgb(227,79,32)" rx="2" ry="2" />
<text  x="980.84" y="463.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (8,000,000 samples, 0.03%)</title><rect x="1103.1" y="373" width="0.4" height="15.0" fill="rgb(233,118,6)" rx="2" ry="2" />
<text  x="1106.05" y="383.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (8,000,000 samples, 0.03%)</title><rect x="491.4" y="517" width="0.4" height="15.0" fill="rgb(226,42,18)" rx="2" ry="2" />
<text  x="494.42" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4,000,000 samples, 0.02%)</title><rect x="674.5" y="309" width="0.2" height="15.0" fill="rgb(232,191,8)" rx="2" ry="2" />
<text  x="677.53" y="319.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (8,000,000 samples, 0.03%)</title><rect x="424.5" y="405" width="0.4" height="15.0" fill="rgb(239,153,25)" rx="2" ry="2" />
<text  x="427.50" y="415.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Valid (4,000,000 samples, 0.02%)</title><rect x="573.4" y="357" width="0.2" height="15.0" fill="rgb(213,184,14)" rx="2" ry="2" />
<text  x="576.35" y="367.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::get (132,000,000 samples, 0.56%)</title><rect x="947.0" y="453" width="6.6" height="15.0" fill="rgb(233,226,34)" rx="2" ry="2" />
<text  x="949.99" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (32,000,000 samples, 0.14%)</title><rect x="647.5" y="357" width="1.6" height="15.0" fill="rgb(251,71,4)" rx="2" ry="2" />
<text  x="650.48" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*&amp;, std::__future_base::_Result_base::_Deleter, true&gt; (72,000,000 samples, 0.31%)</title><rect x="500.0" y="453" width="3.6" height="15.0" fill="rgb(242,149,51)" rx="2" ry="2" />
<text  x="503.03" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8,000,000 samples, 0.03%)</title><rect x="584.0" y="325" width="0.4" height="15.0" fill="rgb(242,41,40)" rx="2" ry="2" />
<text  x="586.97" y="335.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (8,000,000 samples, 0.03%)</title><rect x="925.2" y="389" width="0.4" height="15.0" fill="rgb(230,71,15)" rx="2" ry="2" />
<text  x="928.15" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::~_Result (8,000,000 samples, 0.03%)</title><rect x="971.4" y="277" width="0.4" height="15.0" fill="rgb(226,32,54)" rx="2" ry="2" />
<text  x="974.43" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;std::__future_base::_State_baseV2&gt;, true&gt;::_Sp_ebo_helper (8,000,000 samples, 0.03%)</title><rect x="958.2" y="325" width="0.4" height="15.0" fill="rgb(230,46,39)" rx="2" ry="2" />
<text  x="961.21" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="519.3" y="485" width="0.6" height="15.0" fill="rgb(223,83,0)" rx="2" ry="2" />
<text  x="522.26" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::destroy&lt;leveldb::DBImpl::Writer*&gt; (4,000,000 samples, 0.02%)</title><rect x="937.6" y="421" width="0.2" height="15.0" fill="rgb(246,23,30)" rx="2" ry="2" />
<text  x="940.57" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="691.2" y="373" width="0.2" height="15.0" fill="rgb(251,97,35)" rx="2" ry="2" />
<text  x="694.15" y="383.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (16,000,000 samples, 0.07%)</title><rect x="16.2" y="645" width="0.8" height="15.0" fill="rgb(243,218,12)" rx="2" ry="2" />
<text  x="19.21" y="655.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BuildBatchGroup (84,000,000 samples, 0.36%)</title><rect x="993.3" y="437" width="4.2" height="15.0" fill="rgb(240,152,4)" rx="2" ry="2" />
<text  x="996.27" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (28,000,000 samples, 0.12%)</title><rect x="996.1" y="405" width="1.4" height="15.0" fill="rgb(229,211,4)" rx="2" ry="2" />
<text  x="999.07" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::RandomGenerator::RandomGenerator (16,000,000 samples, 0.07%)</title><rect x="989.1" y="469" width="0.8" height="15.0" fill="rgb(252,223,20)" rx="2" ry="2" />
<text  x="992.06" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::release (36,000,000 samples, 0.15%)</title><rect x="504.4" y="469" width="1.8" height="15.0" fill="rgb(211,31,9)" rx="2" ry="2" />
<text  x="507.44" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (4,000,000 samples, 0.02%)</title><rect x="982.2" y="437" width="0.2" height="15.0" fill="rgb(234,134,35)" rx="2" ry="2" />
<text  x="985.25" y="447.5" ></text>
</g>
<g >
<title>__do_fault (24,000,000 samples, 0.10%)</title><rect x="668.3" y="197" width="1.2" height="15.0" fill="rgb(230,90,49)" rx="2" ry="2" />
<text  x="671.32" y="207.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (12,000,000 samples, 0.05%)</title><rect x="605.6" y="341" width="0.6" height="15.0" fill="rgb(247,92,40)" rx="2" ry="2" />
<text  x="608.61" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="504.6" y="453" width="0.2" height="15.0" fill="rgb(254,52,7)" rx="2" ry="2" />
<text  x="507.64" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize@plt (4,000,000 samples, 0.02%)</title><rect x="770.7" y="405" width="0.2" height="15.0" fill="rgb(233,227,24)" rx="2" ry="2" />
<text  x="773.69" y="415.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Add (628,000,000 samples, 2.67%)</title><rect x="576.6" y="373" width="31.4" height="15.0" fill="rgb(210,19,20)" rx="2" ry="2" />
<text  x="579.56" y="383.5" >le..</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_Head_base&lt;std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="502.2" y="405" width="0.4" height="15.0" fill="rgb(234,70,12)" rx="2" ry="2" />
<text  x="505.23" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8,000,000 samples, 0.03%)</title><rect x="638.9" y="405" width="0.4" height="15.0" fill="rgb(215,68,25)" rx="2" ry="2" />
<text  x="641.87" y="415.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Valid (24,000,000 samples, 0.10%)</title><rect x="657.7" y="373" width="1.2" height="15.0" fill="rgb(234,59,29)" rx="2" ry="2" />
<text  x="660.70" y="383.5" ></text>
</g>
<g >
<title>mempool_alloc_slab (4,000,000 samples, 0.02%)</title><rect x="362.8" y="357" width="0.2" height="15.0" fill="rgb(235,204,7)" rx="2" ry="2" />
<text  x="365.80" y="367.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Handler::Handler (8,000,000 samples, 0.03%)</title><rect x="1004.5" y="405" width="0.4" height="15.0" fill="rgb(215,163,41)" rx="2" ry="2" />
<text  x="1007.49" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (12,000,000 samples, 0.05%)</title><rect x="582.4" y="357" width="0.6" height="15.0" fill="rgb(206,162,47)" rx="2" ry="2" />
<text  x="585.37" y="367.5" ></text>
</g>
<g >
<title>rcu_segcblist_ready_cbs (4,000,000 samples, 0.02%)</title><rect x="353.4" y="277" width="0.2" height="15.0" fill="rgb(248,229,9)" rx="2" ry="2" />
<text  x="356.38" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (12,000,000 samples, 0.05%)</title><rect x="985.5" y="469" width="0.6" height="15.0" fill="rgb(227,6,22)" rx="2" ry="2" />
<text  x="988.45" y="479.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_Result_base::_Deleter&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="524.5" y="485" width="0.2" height="15.0" fill="rgb(222,92,48)" rx="2" ry="2" />
<text  x="527.47" y="495.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (4,000,000 samples, 0.02%)</title><rect x="783.1" y="277" width="0.2" height="15.0" fill="rgb(227,77,54)" rx="2" ry="2" />
<text  x="786.11" y="287.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="789.3" y="421" width="0.2" height="15.0" fill="rgb(247,104,48)" rx="2" ry="2" />
<text  x="792.32" y="431.5" ></text>
</g>
<g >
<title>__getblk_gfp (64,000,000 samples, 0.27%)</title><rect x="438.7" y="421" width="3.2" height="15.0" fill="rgb(207,81,25)" rx="2" ry="2" />
<text  x="441.73" y="431.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::__atomic_futex_unsigned (4,000,000 samples, 0.02%)</title><rect x="958.8" y="293" width="0.2" height="15.0" fill="rgb(229,135,36)" rx="2" ry="2" />
<text  x="961.81" y="303.5" ></text>
</g>
<g >
<title>crc_48 (8,000,000 samples, 0.03%)</title><rect x="358.6" y="373" width="0.4" height="15.0" fill="rgb(216,10,38)" rx="2" ry="2" />
<text  x="361.59" y="383.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (4,000,000 samples, 0.02%)</title><rect x="349.0" y="341" width="0.2" height="15.0" fill="rgb(217,1,28)" rx="2" ry="2" />
<text  x="351.97" y="351.5" ></text>
</g>
<g >
<title>leveldb::operator== (28,000,000 samples, 0.12%)</title><rect x="604.8" y="357" width="1.4" height="15.0" fill="rgb(215,150,6)" rx="2" ry="2" />
<text  x="607.81" y="367.5" ></text>
</g>
<g >
<title>ext4_mb_initialize_context (20,000,000 samples, 0.08%)</title><rect x="354.8" y="421" width="1.0" height="15.0" fill="rgb(216,177,34)" rx="2" ry="2" />
<text  x="357.78" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size@plt (4,000,000 samples, 0.02%)</title><rect x="635.1" y="373" width="0.2" height="15.0" fill="rgb(235,89,36)" rx="2" ry="2" />
<text  x="638.06" y="383.5" ></text>
</g>
<g >
<title>leveldb::VersionSet::SetLastSequence (4,000,000 samples, 0.02%)</title><rect x="788.9" y="437" width="0.2" height="15.0" fill="rgb(220,129,2)" rx="2" ry="2" />
<text  x="791.92" y="447.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Append (4,000,000 samples, 0.02%)</title><rect x="1097.2" y="421" width="0.2" height="15.0" fill="rgb(211,169,18)" rx="2" ry="2" />
<text  x="1100.24" y="431.5" ></text>
</g>
<g >
<title>get_futex_key (4,000,000 samples, 0.02%)</title><rect x="483.2" y="549" width="0.2" height="15.0" fill="rgb(234,84,36)" rx="2" ry="2" />
<text  x="486.20" y="559.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="977.2" y="469" width="0.2" height="15.0" fill="rgb(217,91,7)" rx="2" ry="2" />
<text  x="980.24" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="513.7" y="437" width="0.6" height="15.0" fill="rgb(240,113,45)" rx="2" ry="2" />
<text  x="516.65" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (12,000,000 samples, 0.05%)</title><rect x="529.9" y="597" width="0.6" height="15.0" fill="rgb(206,70,38)" rx="2" ry="2" />
<text  x="532.88" y="607.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::NoBarrier_SetNext (16,000,000 samples, 0.07%)</title><rect x="892.9" y="357" width="0.8" height="15.0" fill="rgb(234,52,0)" rx="2" ry="2" />
<text  x="895.90" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (184,000,000 samples, 0.78%)</title><rect x="459.2" y="645" width="9.2" height="15.0" fill="rgb(220,66,51)" rx="2" ry="2" />
<text  x="462.16" y="655.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="961.8" y="373" width="0.2" height="15.0" fill="rgb(212,154,18)" rx="2" ry="2" />
<text  x="964.81" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt; (4,000,000 samples, 0.02%)</title><rect x="994.7" y="405" width="0.2" height="15.0" fill="rgb(247,69,22)" rx="2" ry="2" />
<text  x="997.67" y="415.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::key (8,000,000 samples, 0.03%)</title><rect x="693.0" y="373" width="0.4" height="15.0" fill="rgb(234,227,8)" rx="2" ry="2" />
<text  x="695.96" y="383.5" ></text>
</g>
<g >
<title>__madvise (4,000,000 samples, 0.02%)</title><rect x="459.0" y="645" width="0.2" height="15.0" fill="rgb(232,218,35)" rx="2" ry="2" />
<text  x="461.96" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (80,000,000 samples, 0.34%)</title><rect x="499.6" y="469" width="4.0" height="15.0" fill="rgb(240,117,10)" rx="2" ry="2" />
<text  x="502.63" y="479.5" ></text>
</g>
<g >
<title>start_this_handle (96,000,000 samples, 0.41%)</title><rect x="330.9" y="437" width="4.9" height="15.0" fill="rgb(211,145,36)" rx="2" ry="2" />
<text  x="333.94" y="447.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (4,000,000 samples, 0.02%)</title><rect x="351.2" y="373" width="0.2" height="15.0" fill="rgb(229,73,10)" rx="2" ry="2" />
<text  x="354.18" y="383.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::SetNext (36,000,000 samples, 0.15%)</title><rect x="1081.8" y="357" width="1.8" height="15.0" fill="rgb(248,36,15)" rx="2" ry="2" />
<text  x="1084.82" y="367.5" ></text>
</g>
<g >
<title>map_id_up (8,000,000 samples, 0.03%)</title><rect x="436.5" y="421" width="0.4" height="15.0" fill="rgb(207,23,40)" rx="2" ry="2" />
<text  x="439.52" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward (108,000,000 samples, 0.46%)</title><rect x="664.9" y="341" width="5.4" height="15.0" fill="rgb(247,219,32)" rx="2" ry="2" />
<text  x="667.91" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::pop_front (4,000,000 samples, 0.02%)</title><rect x="1127.5" y="437" width="0.2" height="15.0" fill="rgb(228,228,35)" rx="2" ry="2" />
<text  x="1130.49" y="447.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::future (40,000,000 samples, 0.17%)</title><rect x="954.4" y="437" width="2.0" height="15.0" fill="rgb(246,229,22)" rx="2" ry="2" />
<text  x="957.40" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (32,000,000 samples, 0.14%)</title><rect x="747.7" y="405" width="1.6" height="15.0" fill="rgb(227,55,5)" rx="2" ry="2" />
<text  x="750.65" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="974.2" y="405" width="0.6" height="15.0" fill="rgb(226,69,15)" rx="2" ry="2" />
<text  x="977.23" y="415.5" ></text>
</g>
<g >
<title>ext4_add_nondir (4,000,000 samples, 0.02%)</title><rect x="566.7" y="261" width="0.2" height="15.0" fill="rgb(227,126,13)" rx="2" ry="2" />
<text  x="569.74" y="271.5" ></text>
</g>
<g >
<title>crypto_shash_update (4,000,000 samples, 0.02%)</title><rect x="25.6" y="357" width="0.2" height="15.0" fill="rgb(238,190,53)" rx="2" ry="2" />
<text  x="28.63" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (8,000,000 samples, 0.03%)</title><rect x="1150.3" y="357" width="0.4" height="15.0" fill="rgb(207,22,38)" rx="2" ry="2" />
<text  x="1153.33" y="367.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (12,000,000 samples, 0.05%)</title><rect x="672.1" y="277" width="0.6" height="15.0" fill="rgb(214,96,15)" rx="2" ry="2" />
<text  x="675.12" y="287.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::get_future (40,000,000 samples, 0.17%)</title><rect x="954.4" y="453" width="2.0" height="15.0" fill="rgb(205,76,19)" rx="2" ry="2" />
<text  x="957.40" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;leveldb::DBImpl::Writer*&gt; (4,000,000 samples, 0.02%)</title><rect x="1128.5" y="389" width="0.2" height="15.0" fill="rgb(216,176,17)" rx="2" ry="2" />
<text  x="1131.50" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="900.1" y="389" width="0.2" height="15.0" fill="rgb(244,42,33)" rx="2" ry="2" />
<text  x="903.11" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4,000,000 samples, 0.02%)</title><rect x="362.8" y="341" width="0.2" height="15.0" fill="rgb(223,153,9)" rx="2" ry="2" />
<text  x="365.80" y="351.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (8,000,000 samples, 0.03%)</title><rect x="493.6" y="469" width="0.4" height="15.0" fill="rgb(213,5,54)" rx="2" ry="2" />
<text  x="496.62" y="479.5" ></text>
</g>
<g >
<title>leveldb::Status::OK (12,000,000 samples, 0.05%)</title><rect x="913.3" y="357" width="0.6" height="15.0" fill="rgb(233,134,19)" rx="2" ry="2" />
<text  x="916.33" y="367.5" ></text>
</g>
<g >
<title>crc_103 (8,000,000 samples, 0.03%)</title><rect x="348.0" y="373" width="0.4" height="15.0" fill="rgb(254,53,28)" rx="2" ry="2" />
<text  x="350.97" y="383.5" ></text>
</g>
<g >
<title>vfs_unlink (4,000,000 samples, 0.02%)</title><rect x="773.5" y="341" width="0.2" height="15.0" fill="rgb(207,102,32)" rx="2" ry="2" />
<text  x="776.49" y="351.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Update (36,000,000 samples, 0.15%)</title><rect x="679.1" y="357" width="1.8" height="15.0" fill="rgb(207,226,36)" rx="2" ry="2" />
<text  x="682.13" y="367.5" ></text>
</g>
<g >
<title>_raw_read_lock (24,000,000 samples, 0.10%)</title><rect x="396.5" y="437" width="1.2" height="15.0" fill="rgb(207,91,20)" rx="2" ry="2" />
<text  x="399.46" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (8,000,000 samples, 0.03%)</title><rect x="1141.7" y="373" width="0.4" height="15.0" fill="rgb(208,138,11)" rx="2" ry="2" />
<text  x="1144.72" y="383.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Valid (4,000,000 samples, 0.02%)</title><rect x="670.3" y="325" width="0.2" height="15.0" fill="rgb(248,113,16)" rx="2" ry="2" />
<text  x="673.32" y="335.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (4,000,000 samples, 0.02%)</title><rect x="892.7" y="341" width="0.2" height="15.0" fill="rgb(235,96,49)" rx="2" ry="2" />
<text  x="895.70" y="351.5" ></text>
</g>
<g >
<title>pmem_make_request (372,000,000 samples, 1.58%)</title><rect x="365.4" y="373" width="18.6" height="15.0" fill="rgb(215,63,17)" rx="2" ry="2" />
<text  x="368.40" y="383.5" ></text>
</g>
<g >
<title>crypto_shash_update (36,000,000 samples, 0.15%)</title><rect x="357.2" y="389" width="1.8" height="15.0" fill="rgb(222,178,25)" rx="2" ry="2" />
<text  x="360.19" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (12,000,000 samples, 0.05%)</title><rect x="516.9" y="517" width="0.6" height="15.0" fill="rgb(239,56,49)" rx="2" ry="2" />
<text  x="519.86" y="527.5" ></text>
</g>
<g >
<title>add_transaction_credits (20,000,000 samples, 0.08%)</title><rect x="334.8" y="421" width="1.0" height="15.0" fill="rgb(213,79,11)" rx="2" ry="2" />
<text  x="337.75" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (20,000,000 samples, 0.08%)</title><rect x="507.8" y="469" width="1.0" height="15.0" fill="rgb(248,106,54)" rx="2" ry="2" />
<text  x="510.84" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base*&amp;, std::__future_base::_Result_base::_Deleter, void&gt; (4,000,000 samples, 0.02%)</title><rect x="510.0" y="469" width="0.2" height="15.0" fill="rgb(219,91,38)" rx="2" ry="2" />
<text  x="513.05" y="479.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="1102.3" y="405" width="0.2" height="15.0" fill="rgb(249,84,11)" rx="2" ry="2" />
<text  x="1105.25" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data@plt (4,000,000 samples, 0.02%)</title><rect x="770.5" y="405" width="0.2" height="15.0" fill="rgb(246,64,35)" rx="2" ry="2" />
<text  x="773.49" y="415.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::__atomic_futex_unsigned (4,000,000 samples, 0.02%)</title><rect x="1147.1" y="309" width="0.2" height="15.0" fill="rgb(215,94,6)" rx="2" ry="2" />
<text  x="1150.13" y="319.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="800.9" y="309" width="0.2" height="15.0" fill="rgb(224,36,13)" rx="2" ry="2" />
<text  x="803.94" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;leveldb::DBImpl::Writer*&gt; (4,000,000 samples, 0.02%)</title><rect x="938.8" y="373" width="0.2" height="15.0" fill="rgb(217,72,35)" rx="2" ry="2" />
<text  x="941.77" y="383.5" ></text>
</g>
<g >
<title>_cond_resched (8,000,000 samples, 0.03%)</title><rect x="396.1" y="437" width="0.4" height="15.0" fill="rgb(236,209,45)" rx="2" ry="2" />
<text  x="399.05" y="447.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::value (4,000,000 samples, 0.02%)</title><rect x="686.5" y="341" width="0.2" height="15.0" fill="rgb(219,30,29)" rx="2" ry="2" />
<text  x="689.55" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (184,000,000 samples, 0.78%)</title><rect x="1154.9" y="389" width="9.3" height="15.0" fill="rgb(244,27,19)" rx="2" ry="2" />
<text  x="1157.94" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="504.4" y="405" width="0.2" height="15.0" fill="rgb(250,151,42)" rx="2" ry="2" />
<text  x="507.44" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::remove_prefix (4,000,000 samples, 0.02%)</title><rect x="1093.6" y="405" width="0.2" height="15.0" fill="rgb(229,161,41)" rx="2" ry="2" />
<text  x="1096.64" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (768,000,000 samples, 3.26%)</title><rect x="488.8" y="549" width="38.5" height="15.0" fill="rgb(208,16,18)" rx="2" ry="2" />
<text  x="491.81" y="559.5" >std..</text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="966.4" y="357" width="0.2" height="15.0" fill="rgb(227,204,39)" rx="2" ry="2" />
<text  x="969.42" y="367.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (16,000,000 samples, 0.07%)</title><rect x="614.2" y="373" width="0.8" height="15.0" fill="rgb(230,215,18)" rx="2" ry="2" />
<text  x="617.22" y="383.5" ></text>
</g>
<g >
<title>prefetch_freepointer (8,000,000 samples, 0.03%)</title><rect x="398.7" y="421" width="0.4" height="15.0" fill="rgb(237,162,52)" rx="2" ry="2" />
<text  x="401.66" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::operator* (12,000,000 samples, 0.05%)</title><rect x="995.5" y="405" width="0.6" height="15.0" fill="rgb(237,170,3)" rx="2" ry="2" />
<text  x="998.47" y="415.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Unlock (16,000,000 samples, 0.07%)</title><rect x="933.4" y="437" width="0.8" height="15.0" fill="rgb(233,197,45)" rx="2" ry="2" />
<text  x="936.37" y="447.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt; (4,000,000 samples, 0.02%)</title><rect x="1133.1" y="357" width="0.2" height="15.0" fill="rgb(217,131,54)" rx="2" ry="2" />
<text  x="1136.10" y="367.5" ></text>
</g>
<g >
<title>std::move&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="497.0" y="485" width="0.2" height="15.0" fill="rgb(252,160,7)" rx="2" ry="2" />
<text  x="500.03" y="495.5" ></text>
</g>
<g >
<title>leveldb::operator== (16,000,000 samples, 0.07%)</title><rect x="737.6" y="389" width="0.8" height="15.0" fill="rgb(245,196,20)" rx="2" ry="2" />
<text  x="740.63" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (16,000,000 samples, 0.07%)</title><rect x="1162.8" y="293" width="0.8" height="15.0" fill="rgb(221,133,9)" rx="2" ry="2" />
<text  x="1165.75" y="303.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter, true&gt; (8,000,000 samples, 0.03%)</title><rect x="1152.1" y="405" width="0.4" height="15.0" fill="rgb(250,161,54)" rx="2" ry="2" />
<text  x="1155.14" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::construct&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&gt; (8,000,000 samples, 0.03%)</title><rect x="1128.3" y="405" width="0.4" height="15.0" fill="rgb(231,109,34)" rx="2" ry="2" />
<text  x="1131.30" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_Head_base (4,000,000 samples, 0.02%)</title><rect x="962.6" y="389" width="0.2" height="15.0" fill="rgb(217,23,30)" rx="2" ry="2" />
<text  x="965.61" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4,000,000 samples, 0.02%)</title><rect x="566.7" y="341" width="0.2" height="15.0" fill="rgb(217,154,34)" rx="2" ry="2" />
<text  x="569.74" y="351.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Iterate (2,204,000,000 samples, 9.35%)</title><rect x="791.9" y="421" width="110.4" height="15.0" fill="rgb(219,63,26)" rx="2" ry="2" />
<text  x="794.93" y="431.5" >leveldb::Writ..</text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (184,000,000 samples, 0.78%)</title><rect x="963.8" y="437" width="9.2" height="15.0" fill="rgb(241,110,20)" rx="2" ry="2" />
<text  x="966.82" y="447.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (4,000,000 samples, 0.02%)</title><rect x="565.1" y="437" width="0.2" height="15.0" fill="rgb(214,206,20)" rx="2" ry="2" />
<text  x="568.14" y="447.5" ></text>
</g>
<g >
<title>_copy_from_iter_flushcache (152,000,000 samples, 0.65%)</title><rect x="54.9" y="437" width="7.6" height="15.0" fill="rgb(209,81,8)" rx="2" ry="2" />
<text  x="57.88" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (4,000,000 samples, 0.02%)</title><rect x="504.2" y="453" width="0.2" height="15.0" fill="rgb(251,212,30)" rx="2" ry="2" />
<text  x="507.24" y="463.5" ></text>
</g>
<g >
<title>operator new[] (60,000,000 samples, 0.25%)</title><rect x="1181.2" y="661" width="3.0" height="15.0" fill="rgb(221,84,45)" rx="2" ry="2" />
<text  x="1184.19" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (4,000,000 samples, 0.02%)</title><rect x="10.2" y="485" width="0.2" height="15.0" fill="rgb(243,22,36)" rx="2" ry="2" />
<text  x="13.20" y="495.5" ></text>
</g>
<g >
<title>snappy::internal::CompressFragment (68,000,000 samples, 0.29%)</title><rect x="1184.8" y="661" width="3.4" height="15.0" fill="rgb(227,163,0)" rx="2" ry="2" />
<text  x="1187.79" y="671.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4,000,000 samples, 0.02%)</title><rect x="799.5" y="293" width="0.2" height="15.0" fill="rgb(224,207,28)" rx="2" ry="2" />
<text  x="802.54" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data@plt (4,000,000 samples, 0.02%)</title><rect x="985.3" y="469" width="0.2" height="15.0" fill="rgb(218,217,2)" rx="2" ry="2" />
<text  x="988.25" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,000,000 samples, 0.03%)</title><rect x="1153.9" y="389" width="0.4" height="15.0" fill="rgb(252,14,1)" rx="2" ry="2" />
<text  x="1156.94" y="399.5" ></text>
</g>
<g >
<title>ext4_unlink (4,000,000 samples, 0.02%)</title><rect x="773.5" y="325" width="0.2" height="15.0" fill="rgb(214,153,18)" rx="2" ry="2" />
<text  x="776.49" y="335.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="776.1" y="453" width="0.2" height="15.0" fill="rgb(235,187,32)" rx="2" ry="2" />
<text  x="779.10" y="463.5" ></text>
</g>
<g >
<title>bdev_dax_pgoff (4,000,000 samples, 0.02%)</title><rect x="51.9" y="469" width="0.2" height="15.0" fill="rgb(219,112,5)" rx="2" ry="2" />
<text  x="54.87" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (32,000,000 samples, 0.14%)</title><rect x="1164.2" y="437" width="1.6" height="15.0" fill="rgb(222,78,40)" rx="2" ry="2" />
<text  x="1167.16" y="447.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::store (36,000,000 samples, 0.15%)</title><rect x="1081.8" y="341" width="1.8" height="15.0" fill="rgb(220,133,12)" rx="2" ry="2" />
<text  x="1084.82" y="351.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (48,000,000 samples, 0.20%)</title><rect x="388.0" y="453" width="2.4" height="15.0" fill="rgb(211,227,19)" rx="2" ry="2" />
<text  x="391.04" y="463.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (8,000,000 samples, 0.03%)</title><rect x="352.0" y="325" width="0.4" height="15.0" fill="rgb(242,165,48)" rx="2" ry="2" />
<text  x="354.98" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt;&gt; (148,000,000 samples, 0.63%)</title><rect x="1143.9" y="405" width="7.4" height="15.0" fill="rgb(227,218,33)" rx="2" ry="2" />
<text  x="1146.92" y="415.5" ></text>
</g>
<g >
<title>ext4_read_block_bitmap (12,000,000 samples, 0.05%)</title><rect x="359.8" y="405" width="0.6" height="15.0" fill="rgb(245,159,47)" rx="2" ry="2" />
<text  x="362.79" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="522.3" y="501" width="0.4" height="15.0" fill="rgb(221,37,5)" rx="2" ry="2" />
<text  x="525.27" y="511.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::DoCompactionWork (2,748,000,000 samples, 11.66%)</title><rect x="635.7" y="437" width="137.6" height="15.0" fill="rgb(218,77,28)" rx="2" ry="2" />
<text  x="638.66" y="447.5" >leveldb::DBImpl::..</text>
</g>
<g >
<title>leveldb::Status::OK (4,000,000 samples, 0.02%)</title><rect x="751.3" y="341" width="0.2" height="15.0" fill="rgb(243,157,41)" rx="2" ry="2" />
<text  x="754.26" y="351.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (4,000,000 samples, 0.02%)</title><rect x="773.3" y="293" width="0.2" height="15.0" fill="rgb(220,91,25)" rx="2" ry="2" />
<text  x="776.29" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base*&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="511.4" y="437" width="0.3" height="15.0" fill="rgb(227,166,6)" rx="2" ry="2" />
<text  x="514.45" y="447.5" ></text>
</g>
<g >
<title>leveldb::BuildTable (220,000,000 samples, 0.93%)</title><rect x="691.8" y="389" width="11.0" height="15.0" fill="rgb(235,221,47)" rx="2" ry="2" />
<text  x="694.76" y="399.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (4,000,000 samples, 0.02%)</title><rect x="1124.5" y="405" width="0.2" height="15.0" fill="rgb(250,33,14)" rx="2" ry="2" />
<text  x="1127.49" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (16,000,000 samples, 0.07%)</title><rect x="718.4" y="357" width="0.8" height="15.0" fill="rgb(247,116,53)" rx="2" ry="2" />
<text  x="721.40" y="367.5" ></text>
</g>
<g >
<title>leveldb::ReadBlock (68,000,000 samples, 0.29%)</title><rect x="666.1" y="293" width="3.4" height="15.0" fill="rgb(238,103,46)" rx="2" ry="2" />
<text  x="669.11" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (12,000,000 samples, 0.05%)</title><rect x="509.4" y="485" width="0.6" height="15.0" fill="rgb(242,131,34)" rx="2" ry="2" />
<text  x="512.45" y="495.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BGWork (4,176,000,000 samples, 17.72%)</title><rect x="565.1" y="485" width="209.2" height="15.0" fill="rgb(213,60,33)" rx="2" ry="2" />
<text  x="568.14" y="495.5" >leveldb::DBImpl::BGWork</text>
</g>
<g >
<title>do_exit (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="597" width="0.2" height="15.0" fill="rgb(234,165,0)" rx="2" ry="2" />
<text  x="1183.58" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_Head_base&lt;std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="511.0" y="421" width="0.2" height="15.0" fill="rgb(207,105,4)" rx="2" ry="2" />
<text  x="514.05" y="431.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (164,000,000 samples, 0.70%)</title><rect x="760.3" y="325" width="8.2" height="15.0" fill="rgb(223,46,6)" rx="2" ry="2" />
<text  x="763.27" y="335.5" ></text>
</g>
<g >
<title>_IO_padn (24,000,000 samples, 0.10%)</title><rect x="14.8" y="645" width="1.2" height="15.0" fill="rgb(240,63,13)" rx="2" ry="2" />
<text  x="17.81" y="655.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="699.2" y="325" width="0.2" height="15.0" fill="rgb(218,214,23)" rx="2" ry="2" />
<text  x="702.17" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;std::__future_base::_State_baseV2&gt;, true&gt;::_Sp_ebo_helper (4,000,000 samples, 0.02%)</title><rect x="1146.3" y="325" width="0.2" height="15.0" fill="rgb(245,62,27)" rx="2" ry="2" />
<text  x="1149.33" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="526.5" y="485" width="0.6" height="15.0" fill="rgb(211,75,43)" rx="2" ry="2" />
<text  x="529.48" y="495.5" ></text>
</g>
<g >
<title>ext4_evict_inode (4,000,000 samples, 0.02%)</title><rect x="25.6" y="469" width="0.2" height="15.0" fill="rgb(223,80,49)" rx="2" ry="2" />
<text  x="28.63" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="25.6" y="565" width="0.2" height="15.0" fill="rgb(240,14,3)" rx="2" ry="2" />
<text  x="28.63" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (12,000,000 samples, 0.05%)</title><rect x="607.2" y="357" width="0.6" height="15.0" fill="rgb(230,224,33)" rx="2" ry="2" />
<text  x="610.21" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::new_allocator (4,000,000 samples, 0.02%)</title><rect x="1150.7" y="341" width="0.2" height="15.0" fill="rgb(225,52,22)" rx="2" ry="2" />
<text  x="1153.73" y="351.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="743.8" y="373" width="0.2" height="15.0" fill="rgb(235,215,49)" rx="2" ry="2" />
<text  x="746.84" y="383.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::value (52,000,000 samples, 0.22%)</title><rect x="684.3" y="421" width="2.6" height="15.0" fill="rgb(232,106,10)" rx="2" ry="2" />
<text  x="687.34" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (20,000,000 samples, 0.08%)</title><rect x="746.6" y="405" width="1.1" height="15.0" fill="rgb(240,101,19)" rx="2" ry="2" />
<text  x="749.65" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt;*, unsigned long&gt; (4,000,000 samples, 0.02%)</title><rect x="26.2" y="485" width="0.2" height="15.0" fill="rgb(236,132,25)" rx="2" ry="2" />
<text  x="29.23" y="495.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_Result_base*&amp;&gt; (8,000,000 samples, 0.03%)</title><rect x="523.9" y="485" width="0.4" height="15.0" fill="rgb(223,0,13)" rx="2" ry="2" />
<text  x="526.87" y="495.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (4,000,000 samples, 0.02%)</title><rect x="1123.1" y="405" width="0.2" height="15.0" fill="rgb(205,187,31)" rx="2" ry="2" />
<text  x="1126.09" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt;::deque (4,000,000 samples, 0.02%)</title><rect x="26.2" y="437" width="0.2" height="15.0" fill="rgb(225,18,25)" rx="2" ry="2" />
<text  x="29.23" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter, void&gt; (148,000,000 samples, 0.63%)</title><rect x="509.2" y="501" width="7.5" height="15.0" fill="rgb(223,18,9)" rx="2" ry="2" />
<text  x="512.25" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_Head_base&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*&amp;&gt; (16,000,000 samples, 0.07%)</title><rect x="500.4" y="421" width="0.8" height="15.0" fill="rgb(209,108,1)" rx="2" ry="2" />
<text  x="503.43" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (8,000,000 samples, 0.03%)</title><rect x="527.9" y="565" width="0.4" height="15.0" fill="rgb(213,140,15)" rx="2" ry="2" />
<text  x="530.88" y="575.5" ></text>
</g>
<g >
<title>next_bio (20,000,000 samples, 0.08%)</title><rect x="362.6" y="405" width="1.0" height="15.0" fill="rgb(216,45,34)" rx="2" ry="2" />
<text  x="365.60" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="502.8" y="421" width="0.2" height="15.0" fill="rgb(208,166,12)" rx="2" ry="2" />
<text  x="505.84" y="431.5" ></text>
</g>
<g >
<title>__blkdev_issue_zero_pages (32,000,000 samples, 0.14%)</title><rect x="362.0" y="421" width="1.6" height="15.0" fill="rgb(244,170,20)" rx="2" ry="2" />
<text  x="365.00" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="743.4" y="373" width="0.4" height="15.0" fill="rgb(251,39,36)" rx="2" ry="2" />
<text  x="746.44" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (12,000,000 samples, 0.05%)</title><rect x="1172.6" y="469" width="0.6" height="15.0" fill="rgb(225,120,13)" rx="2" ry="2" />
<text  x="1175.57" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::~allocator (4,000,000 samples, 0.02%)</title><rect x="1146.7" y="341" width="0.2" height="15.0" fill="rgb(207,215,47)" rx="2" ry="2" />
<text  x="1149.73" y="351.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (24,000,000 samples, 0.10%)</title><rect x="609.0" y="357" width="1.2" height="15.0" fill="rgb(215,155,36)" rx="2" ry="2" />
<text  x="612.02" y="367.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (4,000,000 samples, 0.02%)</title><rect x="1128.9" y="421" width="0.2" height="15.0" fill="rgb(234,36,18)" rx="2" ry="2" />
<text  x="1131.90" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::new_allocator (4,000,000 samples, 0.02%)</title><rect x="957.4" y="357" width="0.2" height="15.0" fill="rgb(210,165,26)" rx="2" ry="2" />
<text  x="960.41" y="367.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::ThreadBody (7,980,000,000 samples, 33.87%)</title><rect x="774.3" y="517" width="399.7" height="15.0" fill="rgb(237,203,35)" rx="2" ry="2" />
<text  x="777.30" y="527.5" >leveldb::Benchmark::ThreadBody</text>
</g>
<g >
<title>__ext4_journal_get_write_access (4,000,000 samples, 0.02%)</title><rect x="349.4" y="421" width="0.2" height="15.0" fill="rgb(240,178,31)" rx="2" ry="2" />
<text  x="352.38" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (24,000,000 samples, 0.10%)</title><rect x="1169.0" y="437" width="1.2" height="15.0" fill="rgb(249,113,31)" rx="2" ry="2" />
<text  x="1171.96" y="447.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (124,000,000 samples, 0.53%)</title><rect x="626.0" y="277" width="6.3" height="15.0" fill="rgb(235,96,37)" rx="2" ry="2" />
<text  x="629.04" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (28,000,000 samples, 0.12%)</title><rect x="709.4" y="405" width="1.4" height="15.0" fill="rgb(237,112,16)" rx="2" ry="2" />
<text  x="712.39" y="415.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (8,000,000 samples, 0.03%)</title><rect x="1098.0" y="405" width="0.4" height="15.0" fill="rgb(219,17,47)" rx="2" ry="2" />
<text  x="1101.04" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;leveldb::DBImpl::CompactionState::Output, std::allocator&lt;leveldb::DBImpl::CompactionState::Output&gt; &gt;::size (4,000,000 samples, 0.02%)</title><rect x="773.1" y="421" width="0.2" height="15.0" fill="rgb(251,39,21)" rx="2" ry="2" />
<text  x="776.09" y="431.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Insert (1,468,000,000 samples, 6.23%)</title><rect x="1012.1" y="373" width="73.5" height="15.0" fill="rgb(222,54,54)" rx="2" ry="2" />
<text  x="1015.10" y="383.5" >leveldb:..</text>
</g>
<g >
<title>leveldb::TableBuilder::WriteBlock (4,000,000 samples, 0.02%)</title><rect x="702.4" y="357" width="0.2" height="15.0" fill="rgb(216,199,39)" rx="2" ry="2" />
<text  x="705.37" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt;::operator (236,000,000 samples, 1.00%)</title><rect x="494.4" y="501" width="11.8" height="15.0" fill="rgb(244,101,5)" rx="2" ry="2" />
<text  x="497.42" y="511.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;&gt; (148,000,000 samples, 0.63%)</title><rect x="1143.9" y="421" width="7.4" height="15.0" fill="rgb(209,142,22)" rx="2" ry="2" />
<text  x="1146.92" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="725.0" y="389" width="0.2" height="15.0" fill="rgb(217,213,14)" rx="2" ry="2" />
<text  x="728.01" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="696.0" y="309" width="0.2" height="15.0" fill="rgb(242,63,54)" rx="2" ry="2" />
<text  x="698.96" y="319.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed32 (8,000,000 samples, 0.03%)</title><rect x="1171.0" y="437" width="0.4" height="15.0" fill="rgb(214,76,40)" rx="2" ry="2" />
<text  x="1173.97" y="447.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (24,000,000 samples, 0.10%)</title><rect x="394.1" y="453" width="1.2" height="15.0" fill="rgb(233,222,4)" rx="2" ry="2" />
<text  x="397.05" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (20,000,000 samples, 0.08%)</title><rect x="1151.5" y="437" width="1.0" height="15.0" fill="rgb(244,24,34)" rx="2" ry="2" />
<text  x="1154.53" y="447.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1158.9" y="357" width="0.2" height="15.0" fill="rgb(249,32,35)" rx="2" ry="2" />
<text  x="1161.95" y="367.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixEnv::PosixEnv (4,000,000 samples, 0.02%)</title><rect x="26.2" y="565" width="0.2" height="15.0" fill="rgb(209,73,5)" rx="2" ry="2" />
<text  x="29.23" y="575.5" ></text>
</g>
<g >
<title>leveldb::Status::OK (8,000,000 samples, 0.03%)</title><rect x="1100.8" y="357" width="0.4" height="15.0" fill="rgb(244,182,2)" rx="2" ry="2" />
<text  x="1103.85" y="367.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (4,000,000 samples, 0.02%)</title><rect x="788.7" y="437" width="0.2" height="15.0" fill="rgb(231,88,7)" rx="2" ry="2" />
<text  x="791.72" y="447.5" ></text>
</g>
<g >
<title>snappy::RawUncompress (4,000,000 samples, 0.02%)</title><rect x="10.6" y="613" width="0.2" height="15.0" fill="rgb(228,13,20)" rx="2" ry="2" />
<text  x="13.60" y="623.5" ></text>
</g>
<g >
<title>ext4_rmdir (4,000,000 samples, 0.02%)</title><rect x="26.0" y="485" width="0.2" height="15.0" fill="rgb(234,105,45)" rx="2" ry="2" />
<text  x="29.03" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (4,000,000 samples, 0.02%)</title><rect x="662.3" y="293" width="0.2" height="15.0" fill="rgb(238,87,43)" rx="2" ry="2" />
<text  x="665.31" y="303.5" ></text>
</g>
<g >
<title>fsnotify (8,000,000 samples, 0.03%)</title><rect x="456.6" y="549" width="0.4" height="15.0" fill="rgb(208,127,33)" rx="2" ry="2" />
<text  x="459.56" y="559.5" ></text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="395.1" y="437" width="0.2" height="15.0" fill="rgb(226,141,40)" rx="2" ry="2" />
<text  x="398.05" y="447.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (4,000,000 samples, 0.02%)</title><rect x="1143.3" y="421" width="0.2" height="15.0" fill="rgb(253,80,52)" rx="2" ry="2" />
<text  x="1146.32" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (16,000,000 samples, 0.07%)</title><rect x="1141.3" y="405" width="0.8" height="15.0" fill="rgb(252,149,39)" rx="2" ry="2" />
<text  x="1144.32" y="415.5" ></text>
</g>
<g >
<title>dax_read_unlock (8,000,000 samples, 0.03%)</title><rect x="319.5" y="485" width="0.4" height="15.0" fill="rgb(245,190,25)" rx="2" ry="2" />
<text  x="322.52" y="495.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (20,000,000 samples, 0.08%)</title><rect x="970.4" y="261" width="1.0" height="15.0" fill="rgb(221,40,14)" rx="2" ry="2" />
<text  x="973.43" y="271.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::FinishCompactionOutputFile (4,000,000 samples, 0.02%)</title><rect x="703.4" y="421" width="0.2" height="15.0" fill="rgb(245,58,30)" rx="2" ry="2" />
<text  x="706.38" y="431.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::value (36,000,000 samples, 0.15%)</title><rect x="571.8" y="389" width="1.8" height="15.0" fill="rgb(240,52,43)" rx="2" ry="2" />
<text  x="574.75" y="399.5" ></text>
</g>
<g >
<title>blk_status_to_errno (4,000,000 samples, 0.02%)</title><rect x="365.6" y="341" width="0.2" height="15.0" fill="rgb(210,202,5)" rx="2" ry="2" />
<text  x="368.60" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt;*, unsigned long, std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt; &gt; (4,000,000 samples, 0.02%)</title><rect x="26.2" y="517" width="0.2" height="15.0" fill="rgb(220,9,53)" rx="2" ry="2" />
<text  x="29.23" y="527.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (212,000,000 samples, 0.90%)</title><rect x="725.2" y="389" width="10.6" height="15.0" fill="rgb(223,200,34)" rx="2" ry="2" />
<text  x="728.21" y="399.5" ></text>
</g>
<g >
<title>pat_pagerange_is_ram (4,000,000 samples, 0.02%)</title><rect x="669.3" y="69" width="0.2" height="15.0" fill="rgb(227,22,41)" rx="2" ry="2" />
<text  x="672.32" y="79.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (4,000,000 samples, 0.02%)</title><rect x="452.8" y="469" width="0.2" height="15.0" fill="rgb(207,99,6)" rx="2" ry="2" />
<text  x="455.75" y="479.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_destroy (48,000,000 samples, 0.20%)</title><rect x="969.0" y="277" width="2.4" height="15.0" fill="rgb(238,79,15)" rx="2" ry="2" />
<text  x="972.03" y="287.5" ></text>
</g>
<g >
<title>generic_write_checks (16,000,000 samples, 0.07%)</title><rect x="453.2" y="517" width="0.8" height="15.0" fill="rgb(219,13,51)" rx="2" ry="2" />
<text  x="456.15" y="527.5" ></text>
</g>
<g >
<title>std::__to_address&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="961.6" y="341" width="0.2" height="15.0" fill="rgb(240,107,18)" rx="2" ry="2" />
<text  x="964.61" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;std::__future_base::_State_baseV2&gt;, true&gt;::~_Sp_ebo_helper (4,000,000 samples, 0.02%)</title><rect x="966.2" y="341" width="0.2" height="15.0" fill="rgb(224,120,9)" rx="2" ry="2" />
<text  x="969.22" y="351.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_M_get_result (60,000,000 samples, 0.25%)</title><rect x="947.2" y="437" width="3.0" height="15.0" fill="rgb(225,142,53)" rx="2" ry="2" />
<text  x="950.19" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="745.0" y="389" width="0.2" height="15.0" fill="rgb(252,205,3)" rx="2" ry="2" />
<text  x="748.05" y="399.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Finish (4,000,000 samples, 0.02%)</title><rect x="615.4" y="341" width="0.2" height="15.0" fill="rgb(231,36,19)" rx="2" ry="2" />
<text  x="618.43" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_Result_base*&amp;&gt; (8,000,000 samples, 0.03%)</title><rect x="522.7" y="501" width="0.4" height="15.0" fill="rgb(212,82,14)" rx="2" ry="2" />
<text  x="525.67" y="511.5" ></text>
</g>
<g >
<title>memcpy_flushcache (196,000,000 samples, 0.83%)</title><rect x="374.2" y="325" width="9.8" height="15.0" fill="rgb(224,49,12)" rx="2" ry="2" />
<text  x="377.22" y="335.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::key (20,000,000 samples, 0.08%)</title><rect x="682.1" y="405" width="1.0" height="15.0" fill="rgb(212,80,42)" rx="2" ry="2" />
<text  x="685.14" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (40,000,000 samples, 0.17%)</title><rect x="1155.1" y="373" width="2.0" height="15.0" fill="rgb(243,148,53)" rx="2" ry="2" />
<text  x="1158.14" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::operator* (12,000,000 samples, 0.05%)</title><rect x="949.4" y="405" width="0.6" height="15.0" fill="rgb(248,177,17)" rx="2" ry="2" />
<text  x="952.39" y="415.5" ></text>
</g>
<g >
<title>tcmalloc::SizeMap::Init (4,000,000 samples, 0.02%)</title><rect x="1189.8" y="661" width="0.2" height="15.0" fill="rgb(248,39,42)" rx="2" ry="2" />
<text  x="1192.80" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (44,000,000 samples, 0.19%)</title><rect x="507.0" y="501" width="2.2" height="15.0" fill="rgb(206,72,0)" rx="2" ry="2" />
<text  x="510.04" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (4,000,000 samples, 0.02%)</title><rect x="939.6" y="421" width="0.2" height="15.0" fill="rgb(209,186,7)" rx="2" ry="2" />
<text  x="942.58" y="431.5" ></text>
</g>
<g >
<title>ext4_write_checks (4,000,000 samples, 0.02%)</title><rect x="450.5" y="517" width="0.2" height="15.0" fill="rgb(236,75,6)" rx="2" ry="2" />
<text  x="453.55" y="527.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (8,000,000 samples, 0.03%)</title><rect x="719.2" y="357" width="0.4" height="15.0" fill="rgb(251,94,16)" rx="2" ry="2" />
<text  x="722.20" y="367.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::RandomGenerator::RandomGenerator (8,000,000 samples, 0.03%)</title><rect x="777.1" y="469" width="0.4" height="15.0" fill="rgb(211,62,29)" rx="2" ry="2" />
<text  x="780.10" y="479.5" ></text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="387.8" y="437" width="0.2" height="15.0" fill="rgb(227,34,54)" rx="2" ry="2" />
<text  x="390.84" y="447.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (4,000,000 samples, 0.02%)</title><rect x="349.2" y="325" width="0.2" height="15.0" fill="rgb(216,115,30)" rx="2" ry="2" />
<text  x="352.17" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="501.0" y="405" width="0.2" height="15.0" fill="rgb(253,190,8)" rx="2" ry="2" />
<text  x="504.03" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (16,000,000 samples, 0.07%)</title><rect x="741.4" y="373" width="0.8" height="15.0" fill="rgb(232,188,16)" rx="2" ry="2" />
<text  x="744.44" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (4,000,000 samples, 0.02%)</title><rect x="1125.3" y="437" width="0.2" height="15.0" fill="rgb(249,76,35)" rx="2" ry="2" />
<text  x="1128.29" y="447.5" ></text>
</g>
<g >
<title>ext4_lock_group (4,000,000 samples, 0.02%)</title><rect x="359.6" y="405" width="0.2" height="15.0" fill="rgb(215,54,11)" rx="2" ry="2" />
<text  x="362.59" y="415.5" ></text>
</g>
<g >
<title>ext4_iomap_begin (1,456,000,000 samples, 6.18%)</title><rect x="319.9" y="485" width="72.9" height="15.0" fill="rgb(232,126,14)" rx="2" ry="2" />
<text  x="322.93" y="495.5" >ext4_iom..</text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Append (8,000,000 samples, 0.03%)</title><rect x="751.1" y="357" width="0.4" height="15.0" fill="rgb(243,1,6)" rx="2" ry="2" />
<text  x="754.06" y="367.5" ></text>
</g>
<g >
<title>write@plt (4,000,000 samples, 0.02%)</title><rect x="1101.2" y="373" width="0.2" height="15.0" fill="rgb(253,107,42)" rx="2" ry="2" />
<text  x="1104.25" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::clear (4,000,000 samples, 0.02%)</title><rect x="615.6" y="325" width="0.2" height="15.0" fill="rgb(221,4,34)" rx="2" ry="2" />
<text  x="618.63" y="335.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::ReleaseToSpans (4,000,000 samples, 0.02%)</title><rect x="1175.2" y="645" width="0.2" height="15.0" fill="rgb(248,40,41)" rx="2" ry="2" />
<text  x="1178.17" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="505.8" y="389" width="0.2" height="15.0" fill="rgb(224,74,45)" rx="2" ry="2" />
<text  x="508.84" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (8,000,000 samples, 0.03%)</title><rect x="951.4" y="357" width="0.4" height="15.0" fill="rgb(251,53,47)" rx="2" ry="2" />
<text  x="954.40" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="503.4" y="437" width="0.2" height="15.0" fill="rgb(216,73,22)" rx="2" ry="2" />
<text  x="506.44" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::get (4,000,000 samples, 0.02%)</title><rect x="949.2" y="405" width="0.2" height="15.0" fill="rgb(231,36,50)" rx="2" ry="2" />
<text  x="952.19" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (4,000,000 samples, 0.02%)</title><rect x="25.6" y="533" width="0.2" height="15.0" fill="rgb(219,81,12)" rx="2" ry="2" />
<text  x="28.63" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="504.2" y="405" width="0.2" height="15.0" fill="rgb(212,175,9)" rx="2" ry="2" />
<text  x="507.24" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::remove_prefix (12,000,000 samples, 0.05%)</title><rect x="901.1" y="405" width="0.6" height="15.0" fill="rgb(225,206,38)" rx="2" ry="2" />
<text  x="904.11" y="415.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (8,000,000 samples, 0.03%)</title><rect x="789.9" y="421" width="0.4" height="15.0" fill="rgb(247,23,8)" rx="2" ry="2" />
<text  x="792.92" y="431.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::key (68,000,000 samples, 0.29%)</title><rect x="568.3" y="389" width="3.5" height="15.0" fill="rgb(254,115,1)" rx="2" ry="2" />
<text  x="571.35" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr (148,000,000 samples, 0.63%)</title><rect x="498.8" y="485" width="7.4" height="15.0" fill="rgb(212,158,14)" rx="2" ry="2" />
<text  x="501.83" y="495.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (44,000,000 samples, 0.19%)</title><rect x="339.8" y="421" width="2.2" height="15.0" fill="rgb(212,109,44)" rx="2" ry="2" />
<text  x="342.76" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (32,000,000 samples, 0.14%)</title><rect x="978.8" y="453" width="1.6" height="15.0" fill="rgb(247,11,23)" rx="2" ry="2" />
<text  x="981.84" y="463.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Contents (12,000,000 samples, 0.05%)</title><rect x="1002.5" y="437" width="0.6" height="15.0" fill="rgb(208,91,6)" rx="2" ry="2" />
<text  x="1005.48" y="447.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (36,000,000 samples, 0.15%)</title><rect x="10.8" y="613" width="1.8" height="15.0" fill="rgb(233,111,40)" rx="2" ry="2" />
<text  x="13.80" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_futex (120,000,000 samples, 0.51%)</title><rect x="479.6" y="597" width="6.0" height="15.0" fill="rgb(219,106,46)" rx="2" ry="2" />
<text  x="482.60" y="607.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Writer::~Writer (28,000,000 samples, 0.12%)</title><rect x="784.1" y="437" width="1.4" height="15.0" fill="rgb(207,139,16)" rx="2" ry="2" />
<text  x="787.11" y="447.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (136,000,000 samples, 0.58%)</title><rect x="336.0" y="469" width="6.8" height="15.0" fill="rgb(205,164,41)" rx="2" ry="2" />
<text  x="338.95" y="479.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (4,000,000 samples, 0.02%)</title><rect x="25.4" y="485" width="0.2" height="15.0" fill="rgb(210,84,38)" rx="2" ry="2" />
<text  x="28.43" y="495.5" ></text>
</g>
<g >
<title>kernel_fpu_end (8,000,000 samples, 0.03%)</title><rect x="357.6" y="357" width="0.4" height="15.0" fill="rgb(205,156,30)" rx="2" ry="2" />
<text  x="360.59" y="367.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::Put (1,572,000,000 samples, 6.67%)</title><rect x="1007.5" y="405" width="78.7" height="15.0" fill="rgb(215,26,48)" rx="2" ry="2" />
<text  x="1010.49" y="415.5" >leveldb::..</text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (16,000,000 samples, 0.07%)</title><rect x="787.9" y="421" width="0.8" height="15.0" fill="rgb(210,18,24)" rx="2" ry="2" />
<text  x="790.92" y="431.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Valid (20,000,000 samples, 0.08%)</title><rect x="654.7" y="389" width="1.0" height="15.0" fill="rgb(220,26,19)" rx="2" ry="2" />
<text  x="657.69" y="399.5" ></text>
</g>
<g >
<title>dax_copy_from_iter (208,000,000 samples, 0.88%)</title><rect x="52.1" y="469" width="10.4" height="15.0" fill="rgb(227,149,39)" rx="2" ry="2" />
<text  x="55.07" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_manager (4,000,000 samples, 0.02%)</title><rect x="1133.1" y="389" width="0.2" height="15.0" fill="rgb(253,8,23)" rx="2" ry="2" />
<text  x="1136.10" y="399.5" ></text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="411.7" y="469" width="0.2" height="15.0" fill="rgb(253,35,51)" rx="2" ry="2" />
<text  x="414.68" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt;::_M_allocate_map (4,000,000 samples, 0.02%)</title><rect x="26.2" y="389" width="0.2" height="15.0" fill="rgb(216,210,26)" rx="2" ry="2" />
<text  x="29.23" y="399.5" ></text>
</g>
<g >
<title>leveldb::MemTable::Add (4,000,000 samples, 0.02%)</title><rect x="1091.8" y="405" width="0.2" height="15.0" fill="rgb(240,197,11)" rx="2" ry="2" />
<text  x="1094.83" y="415.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::store (16,000,000 samples, 0.07%)</title><rect x="1084.8" y="357" width="0.8" height="15.0" fill="rgb(230,6,14)" rx="2" ry="2" />
<text  x="1087.82" y="367.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BuildBatchGroup (60,000,000 samples, 0.25%)</title><rect x="779.5" y="437" width="3.0" height="15.0" fill="rgb(252,228,5)" rx="2" ry="2" />
<text  x="782.50" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="988.9" y="453" width="0.2" height="15.0" fill="rgb(244,220,35)" rx="2" ry="2" />
<text  x="991.86" y="463.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::SetSequence (16,000,000 samples, 0.07%)</title><rect x="1095.2" y="437" width="0.8" height="15.0" fill="rgb(205,223,20)" rx="2" ry="2" />
<text  x="1098.24" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (52,000,000 samples, 0.22%)</title><rect x="1178.0" y="661" width="2.6" height="15.0" fill="rgb(246,59,23)" rx="2" ry="2" />
<text  x="1180.98" y="671.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_super (28,000,000 samples, 0.12%)</title><rect x="386.4" y="453" width="1.4" height="15.0" fill="rgb(248,77,47)" rx="2" ry="2" />
<text  x="389.44" y="463.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (12,000,000 samples, 0.05%)</title><rect x="442.9" y="421" width="0.6" height="15.0" fill="rgb(254,155,42)" rx="2" ry="2" />
<text  x="445.93" y="431.5" ></text>
</g>
<g >
<title>crypto_shash_update (16,000,000 samples, 0.07%)</title><rect x="389.6" y="405" width="0.8" height="15.0" fill="rgb(239,221,40)" rx="2" ry="2" />
<text  x="392.64" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="974.8" y="421" width="0.6" height="15.0" fill="rgb(249,174,30)" rx="2" ry="2" />
<text  x="977.84" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::FlushBuffer (56,000,000 samples, 0.24%)</title><rect x="911.1" y="389" width="2.8" height="15.0" fill="rgb(218,21,13)" rx="2" ry="2" />
<text  x="914.13" y="399.5" ></text>
</g>
<g >
<title>blkg_lookup_slowpath (12,000,000 samples, 0.05%)</title><rect x="364.8" y="357" width="0.6" height="15.0" fill="rgb(227,201,35)" rx="2" ry="2" />
<text  x="367.80" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_ptr (8,000,000 samples, 0.03%)</title><rect x="1139.9" y="421" width="0.4" height="15.0" fill="rgb(244,102,37)" rx="2" ry="2" />
<text  x="1142.92" y="431.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (164,000,000 samples, 0.70%)</title><rect x="403.5" y="469" width="8.2" height="15.0" fill="rgb(237,65,41)" rx="2" ry="2" />
<text  x="406.47" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (12,000,000 samples, 0.05%)</title><rect x="780.7" y="405" width="0.6" height="15.0" fill="rgb(245,77,24)" rx="2" ry="2" />
<text  x="783.71" y="415.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BackgroundCall (4,176,000,000 samples, 17.72%)</title><rect x="565.1" y="469" width="209.2" height="15.0" fill="rgb(250,24,18)" rx="2" ry="2" />
<text  x="568.14" y="479.5" >leveldb::DBImpl::Background..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (32,000,000 samples, 0.14%)</title><rect x="507.2" y="485" width="1.6" height="15.0" fill="rgb(241,145,52)" rx="2" ry="2" />
<text  x="510.24" y="495.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Iterate (1,764,000,000 samples, 7.49%)</title><rect x="1006.3" y="421" width="88.3" height="15.0" fill="rgb(231,46,33)" rx="2" ry="2" />
<text  x="1009.29" y="431.5" >leveldb::W..</text>
</g>
<g >
<title>__getblk_gfp (4,000,000 samples, 0.02%)</title><rect x="349.6" y="421" width="0.2" height="15.0" fill="rgb(246,72,18)" rx="2" ry="2" />
<text  x="352.58" y="431.5" ></text>
</g>
<g >
<title>dax_iomap_rw (4,000,000 samples, 0.02%)</title><rect x="42.9" y="533" width="0.2" height="15.0" fill="rgb(251,214,32)" rx="2" ry="2" />
<text  x="45.86" y="543.5" ></text>
</g>
<g >
<title>radix_tree_lookup (4,000,000 samples, 0.02%)</title><rect x="365.2" y="341" width="0.2" height="15.0" fill="rgb(208,146,37)" rx="2" ry="2" />
<text  x="368.20" y="351.5" ></text>
</g>
<g >
<title>_raw_read_lock (24,000,000 samples, 0.10%)</title><rect x="344.6" y="453" width="1.2" height="15.0" fill="rgb(246,211,7)" rx="2" ry="2" />
<text  x="347.57" y="463.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::FlushBuffer (4,000,000 samples, 0.02%)</title><rect x="566.9" y="373" width="0.2" height="15.0" fill="rgb(205,38,13)" rx="2" ry="2" />
<text  x="569.94" y="383.5" ></text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="393.9" y="453" width="0.2" height="15.0" fill="rgb(218,9,21)" rx="2" ry="2" />
<text  x="396.85" y="463.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (24,000,000 samples, 0.10%)</title><rect x="1092.0" y="405" width="1.2" height="15.0" fill="rgb(228,120,8)" rx="2" ry="2" />
<text  x="1095.03" y="415.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Reset (4,000,000 samples, 0.02%)</title><rect x="615.6" y="341" width="0.2" height="15.0" fill="rgb(237,140,33)" rx="2" ry="2" />
<text  x="618.63" y="351.5" ></text>
</g>
<g >
<title>__memset (4,000,000 samples, 0.02%)</title><rect x="354.0" y="421" width="0.2" height="15.0" fill="rgb(225,37,2)" rx="2" ry="2" />
<text  x="356.98" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (16,000,000 samples, 0.07%)</title><rect x="781.5" y="389" width="0.8" height="15.0" fill="rgb(229,111,2)" rx="2" ry="2" />
<text  x="784.51" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="942.8" y="389" width="0.2" height="15.0" fill="rgb(249,68,8)" rx="2" ry="2" />
<text  x="945.78" y="399.5" ></text>
</g>
<g >
<title>fput (12,000,000 samples, 0.05%)</title><rect x="32.6" y="581" width="0.6" height="15.0" fill="rgb(244,4,29)" rx="2" ry="2" />
<text  x="35.64" y="591.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (12,000,000 samples, 0.05%)</title><rect x="882.9" y="293" width="0.6" height="15.0" fill="rgb(212,136,46)" rx="2" ry="2" />
<text  x="885.88" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (20,000,000 samples, 0.08%)</title><rect x="513.3" y="453" width="1.0" height="15.0" fill="rgb(230,70,49)" rx="2" ry="2" />
<text  x="516.25" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result_base*&amp;, std::__future_base::_Result_base::_Deleter, true&gt; (36,000,000 samples, 0.15%)</title><rect x="510.2" y="469" width="1.9" height="15.0" fill="rgb(243,5,6)" rx="2" ry="2" />
<text  x="513.25" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="504.4" y="421" width="0.2" height="15.0" fill="rgb(250,192,49)" rx="2" ry="2" />
<text  x="507.44" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (8,000,000 samples, 0.03%)</title><rect x="903.5" y="421" width="0.4" height="15.0" fill="rgb(237,62,28)" rx="2" ry="2" />
<text  x="906.51" y="431.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Next (136,000,000 samples, 0.58%)</title><rect x="670.5" y="341" width="6.8" height="15.0" fill="rgb(225,144,54)" rx="2" ry="2" />
<text  x="673.52" y="351.5" ></text>
</g>
<g >
<title>ext4_iomap_begin (24,000,000 samples, 0.10%)</title><rect x="47.1" y="501" width="1.2" height="15.0" fill="rgb(216,102,19)" rx="2" ry="2" />
<text  x="50.06" y="511.5" ></text>
</g>
<g >
<title>leveldb::InternalKey::DecodeFrom (4,000,000 samples, 0.02%)</title><rect x="704.0" y="421" width="0.2" height="15.0" fill="rgb(212,171,6)" rx="2" ry="2" />
<text  x="706.98" y="431.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (12,000,000 samples, 0.05%)</title><rect x="966.6" y="357" width="0.6" height="15.0" fill="rgb(253,111,30)" rx="2" ry="2" />
<text  x="969.62" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (20,000,000 samples, 0.08%)</title><rect x="515.1" y="469" width="1.0" height="15.0" fill="rgb(228,88,22)" rx="2" ry="2" />
<text  x="518.06" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_addr (4,000,000 samples, 0.02%)</title><rect x="952.8" y="405" width="0.2" height="15.0" fill="rgb(243,13,46)" rx="2" ry="2" />
<text  x="955.80" y="415.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (8,000,000 samples, 0.03%)</title><rect x="827.2" y="309" width="0.4" height="15.0" fill="rgb(250,161,35)" rx="2" ry="2" />
<text  x="830.19" y="319.5" ></text>
</g>
<g >
<title>munmap (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="661" width="0.2" height="15.0" fill="rgb(219,175,11)" rx="2" ry="2" />
<text  x="1183.98" y="671.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_init_functor (4,000,000 samples, 0.02%)</title><rect x="943.8" y="405" width="0.2" height="15.0" fill="rgb(211,2,52)" rx="2" ry="2" />
<text  x="946.78" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="950.0" y="421" width="0.2" height="15.0" fill="rgb(206,82,42)" rx="2" ry="2" />
<text  x="952.99" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;leveldb::FileMetaData*, std::allocator&lt;leveldb::FileMetaData*&gt; &gt;::size (4,000,000 samples, 0.02%)</title><rect x="691.6" y="405" width="0.2" height="15.0" fill="rgb(210,83,16)" rx="2" ry="2" />
<text  x="694.56" y="415.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (4,000,000 samples, 0.02%)</title><rect x="696.4" y="325" width="0.2" height="15.0" fill="rgb(216,48,27)" rx="2" ry="2" />
<text  x="699.36" y="335.5" ></text>
</g>
<g >
<title>crc_27 (4,000,000 samples, 0.02%)</title><rect x="26.0" y="421" width="0.2" height="15.0" fill="rgb(251,98,24)" rx="2" ry="2" />
<text  x="29.03" y="431.5" ></text>
</g>
<g >
<title>leveldb::DestroyDB (4,000,000 samples, 0.02%)</title><rect x="25.6" y="597" width="0.2" height="15.0" fill="rgb(230,131,15)" rx="2" ry="2" />
<text  x="28.63" y="607.5" ></text>
</g>
<g >
<title>do_sys_open (4,000,000 samples, 0.02%)</title><rect x="566.7" y="325" width="0.2" height="15.0" fill="rgb(228,37,15)" rx="2" ry="2" />
<text  x="569.74" y="335.5" ></text>
</g>
<g >
<title>leveldb::ReadBlock (16,000,000 samples, 0.07%)</title><rect x="661.7" y="325" width="0.8" height="15.0" fill="rgb(228,161,27)" rx="2" ry="2" />
<text  x="664.70" y="335.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Next (460,000,000 samples, 1.95%)</title><rect x="659.1" y="405" width="23.0" height="15.0" fill="rgb(238,192,14)" rx="2" ry="2" />
<text  x="662.10" y="415.5" >l..</text>
</g>
<g >
<title>std::make_shared&lt;std::__future_base::_State_baseV2&gt; (4,000,000 samples, 0.02%)</title><rect x="954.2" y="453" width="0.2" height="15.0" fill="rgb(234,110,42)" rx="2" ry="2" />
<text  x="957.20" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl (4,000,000 samples, 0.02%)</title><rect x="1152.3" y="373" width="0.2" height="15.0" fill="rgb(227,169,47)" rx="2" ry="2" />
<text  x="1155.34" y="383.5" ></text>
</g>
<g >
<title>__sb_end_write (12,000,000 samples, 0.05%)</title><rect x="37.8" y="565" width="0.6" height="15.0" fill="rgb(214,63,16)" rx="2" ry="2" />
<text  x="40.85" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="26.0" y="565" width="0.2" height="15.0" fill="rgb(227,173,20)" rx="2" ry="2" />
<text  x="29.03" y="575.5" ></text>
</g>
<g >
<title>leveldb::Random::Next (16,000,000 samples, 0.07%)</title><rect x="1084.0" y="325" width="0.8" height="15.0" fill="rgb(232,58,39)" rx="2" ry="2" />
<text  x="1087.02" y="335.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::DoWrite (4,232,000,000 samples, 17.96%)</title><rect x="774.5" y="485" width="212.0" height="15.0" fill="rgb(250,13,24)" rx="2" ry="2" />
<text  x="777.50" y="495.5" >leveldb::Benchmark::DoWrite</text>
</g>
<g >
<title>leveldb::Status::operator= (20,000,000 samples, 0.08%)</title><rect x="1166.0" y="469" width="1.0" height="15.0" fill="rgb(248,166,38)" rx="2" ry="2" />
<text  x="1168.96" y="479.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::~promise (8,000,000 samples, 0.03%)</title><rect x="986.1" y="469" width="0.4" height="15.0" fill="rgb(252,83,37)" rx="2" ry="2" />
<text  x="989.05" y="479.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (8,000,000 samples, 0.03%)</title><rect x="1123.7" y="405" width="0.4" height="15.0" fill="rgb(248,6,22)" rx="2" ry="2" />
<text  x="1126.69" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::_S_max_size (4,000,000 samples, 0.02%)</title><rect x="939.0" y="373" width="0.2" height="15.0" fill="rgb(249,192,1)" rx="2" ry="2" />
<text  x="941.97" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24,000,000 samples, 0.10%)</title><rect x="668.3" y="213" width="1.2" height="15.0" fill="rgb(206,80,24)" rx="2" ry="2" />
<text  x="671.32" y="223.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (8,000,000 samples, 0.03%)</title><rect x="914.3" y="389" width="0.4" height="15.0" fill="rgb(253,218,34)" rx="2" ry="2" />
<text  x="917.33" y="399.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (4,000,000 samples, 0.02%)</title><rect x="1135.7" y="437" width="0.2" height="15.0" fill="rgb(210,91,13)" rx="2" ry="2" />
<text  x="1138.71" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (4,000,000 samples, 0.02%)</title><rect x="972.0" y="293" width="0.2" height="15.0" fill="rgb(228,120,42)" rx="2" ry="2" />
<text  x="975.03" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4,000,000 samples, 0.02%)</title><rect x="750.9" y="357" width="0.2" height="15.0" fill="rgb(210,191,45)" rx="2" ry="2" />
<text  x="753.86" y="367.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (4,000,000 samples, 0.02%)</title><rect x="669.7" y="261" width="0.2" height="15.0" fill="rgb(224,111,4)" rx="2" ry="2" />
<text  x="672.72" y="271.5" ></text>
</g>
<g >
<title>leveldb::DecodeEntry (4,000,000 samples, 0.02%)</title><rect x="678.5" y="325" width="0.2" height="15.0" fill="rgb(220,184,31)" rx="2" ry="2" />
<text  x="681.53" y="335.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="776.7" y="453" width="0.4" height="15.0" fill="rgb(238,11,48)" rx="2" ry="2" />
<text  x="779.70" y="463.5" ></text>
</g>
<g >
<title>crypto_shash_update (16,000,000 samples, 0.07%)</title><rect x="352.4" y="325" width="0.8" height="15.0" fill="rgb(254,55,24)" rx="2" ry="2" />
<text  x="355.38" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (4,000,000 samples, 0.02%)</title><rect x="975.4" y="453" width="0.2" height="15.0" fill="rgb(224,186,13)" rx="2" ry="2" />
<text  x="978.44" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="960.6" y="325" width="0.2" height="15.0" fill="rgb(227,175,28)" rx="2" ry="2" />
<text  x="963.61" y="335.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::set_value (116,000,000 samples, 0.49%)</title><rect x="939.2" y="437" width="5.8" height="15.0" fill="rgb(253,88,53)" rx="2" ry="2" />
<text  x="942.17" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (8,000,000 samples, 0.03%)</title><rect x="962.4" y="421" width="0.4" height="15.0" fill="rgb(211,199,17)" rx="2" ry="2" />
<text  x="965.41" y="431.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (16,000,000 samples, 0.07%)</title><rect x="1102.7" y="389" width="0.8" height="15.0" fill="rgb(254,195,13)" rx="2" ry="2" />
<text  x="1105.65" y="399.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.11 (4,000,000 samples, 0.02%)</title><rect x="783.1" y="245" width="0.2" height="15.0" fill="rgb(218,169,25)" rx="2" ry="2" />
<text  x="786.11" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="512.1" y="485" width="0.6" height="15.0" fill="rgb(211,57,31)" rx="2" ry="2" />
<text  x="515.05" y="495.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Unlock (16,000,000 samples, 0.07%)</title><rect x="785.9" y="421" width="0.8" height="15.0" fill="rgb(224,20,24)" rx="2" ry="2" />
<text  x="788.92" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (828,000,000 samples, 3.51%)</title><rect x="486.8" y="581" width="41.5" height="15.0" fill="rgb(221,9,25)" rx="2" ry="2" />
<text  x="489.81" y="591.5" >std..</text>
</g>
<g >
<title>__kmalloc (8,000,000 samples, 0.03%)</title><rect x="350.4" y="421" width="0.4" height="15.0" fill="rgb(254,191,30)" rx="2" ry="2" />
<text  x="353.38" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt; &gt;::construct&lt;std::__future_base::_State_baseV2&gt; (32,000,000 samples, 0.14%)</title><rect x="958.6" y="341" width="1.6" height="15.0" fill="rgb(237,196,16)" rx="2" ry="2" />
<text  x="961.61" y="351.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::key (4,000,000 samples, 0.02%)</title><rect x="573.4" y="373" width="0.2" height="15.0" fill="rgb(227,203,13)" rx="2" ry="2" />
<text  x="576.35" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="707.6" y="421" width="0.2" height="15.0" fill="rgb(215,197,26)" rx="2" ry="2" />
<text  x="710.58" y="431.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (4,000,000 samples, 0.02%)</title><rect x="909.7" y="389" width="0.2" height="15.0" fill="rgb(253,124,7)" rx="2" ry="2" />
<text  x="912.72" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (12,000,000 samples, 0.05%)</title><rect x="530.7" y="645" width="0.6" height="15.0" fill="rgb(246,10,15)" rx="2" ry="2" />
<text  x="533.68" y="655.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::promise (180,000,000 samples, 0.76%)</title><rect x="1143.5" y="453" width="9.0" height="15.0" fill="rgb(218,7,54)" rx="2" ry="2" />
<text  x="1146.52" y="463.5" ></text>
</g>
<g >
<title>from_kuid (8,000,000 samples, 0.03%)</title><rect x="436.9" y="437" width="0.4" height="15.0" fill="rgb(220,228,9)" rx="2" ry="2" />
<text  x="439.92" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="499.6" y="453" width="0.4" height="15.0" fill="rgb(223,38,18)" rx="2" ry="2" />
<text  x="502.63" y="463.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Next (148,000,000 samples, 0.63%)</title><rect x="883.9" y="341" width="7.4" height="15.0" fill="rgb(250,26,1)" rx="2" ry="2" />
<text  x="886.88" y="351.5" ></text>
</g>
<g >
<title>mutex_lock (20,000,000 samples, 0.08%)</title><rect x="35.4" y="549" width="1.0" height="15.0" fill="rgb(225,183,10)" rx="2" ry="2" />
<text  x="38.44" y="559.5" ></text>
</g>
<g >
<title>leveldb::Random::OneIn (24,000,000 samples, 0.10%)</title><rect x="894.1" y="341" width="1.2" height="15.0" fill="rgb(206,219,45)" rx="2" ry="2" />
<text  x="897.10" y="351.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::FlushBuffer (4,000,000 samples, 0.02%)</title><rect x="615.2" y="341" width="0.2" height="15.0" fill="rgb(236,11,29)" rx="2" ry="2" />
<text  x="618.23" y="351.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::ParseNextKey (4,000,000 samples, 0.02%)</title><rect x="674.7" y="325" width="0.2" height="15.0" fill="rgb(236,117,15)" rx="2" ry="2" />
<text  x="677.73" y="335.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed64 (8,000,000 samples, 0.03%)</title><rect x="793.7" y="389" width="0.4" height="15.0" fill="rgb(250,23,16)" rx="2" ry="2" />
<text  x="796.73" y="399.5" ></text>
</g>
<g >
<title>file_remove_privs (12,000,000 samples, 0.05%)</title><rect x="450.7" y="517" width="0.6" height="15.0" fill="rgb(222,206,7)" rx="2" ry="2" />
<text  x="453.75" y="527.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::SetCount (12,000,000 samples, 0.05%)</title><rect x="982.4" y="453" width="0.6" height="15.0" fill="rgb(234,21,50)" rx="2" ry="2" />
<text  x="985.45" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::~_State_baseV2 (4,000,000 samples, 0.02%)</title><rect x="1163.6" y="341" width="0.2" height="15.0" fill="rgb(221,98,0)" rx="2" ry="2" />
<text  x="1166.56" y="351.5" ></text>
</g>
<g >
<title>__check_object_size (36,000,000 samples, 0.15%)</title><rect x="52.7" y="437" width="1.8" height="15.0" fill="rgb(249,223,38)" rx="2" ry="2" />
<text  x="55.67" y="447.5" ></text>
</g>
<g >
<title>ext4_block_bitmap_csum_set (40,000,000 samples, 0.17%)</title><rect x="357.0" y="405" width="2.0" height="15.0" fill="rgb(219,21,28)" rx="2" ry="2" />
<text  x="359.99" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::get (12,000,000 samples, 0.05%)</title><rect x="1137.3" y="389" width="0.6" height="15.0" fill="rgb(240,215,53)" rx="2" ry="2" />
<text  x="1140.31" y="399.5" ></text>
</g>
<g >
<title>unmap_region (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="565" width="0.2" height="15.0" fill="rgb(229,85,4)" rx="2" ry="2" />
<text  x="1183.98" y="575.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::GetRestartPoint (8,000,000 samples, 0.03%)</title><rect x="677.5" y="325" width="0.4" height="15.0" fill="rgb(231,149,3)" rx="2" ry="2" />
<text  x="680.53" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (4,000,000 samples, 0.02%)</title><rect x="504.2" y="469" width="0.2" height="15.0" fill="rgb(240,199,38)" rx="2" ry="2" />
<text  x="507.24" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned int&gt; &gt;::construct&lt;unsigned int, unsigned int&gt; (4,000,000 samples, 0.02%)</title><rect x="607.8" y="325" width="0.2" height="15.0" fill="rgb(220,135,25)" rx="2" ry="2" />
<text  x="610.81" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="26.0" y="549" width="0.2" height="15.0" fill="rgb(243,88,24)" rx="2" ry="2" />
<text  x="29.03" y="559.5" ></text>
</g>
<g >
<title>complete (164,000,000 samples, 0.70%)</title><rect x="365.8" y="325" width="8.2" height="15.0" fill="rgb(225,91,25)" rx="2" ry="2" />
<text  x="368.80" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (4,000,000 samples, 0.02%)</title><rect x="771.9" y="421" width="0.2" height="15.0" fill="rgb(210,179,22)" rx="2" ry="2" />
<text  x="774.89" y="431.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Handler::Handler (4,000,000 samples, 0.02%)</title><rect x="790.5" y="405" width="0.2" height="15.0" fill="rgb(247,196,25)" rx="2" ry="2" />
<text  x="793.52" y="415.5" ></text>
</g>
<g >
<title>__copy_user_nocache (100,000,000 samples, 0.42%)</title><rect x="57.5" y="421" width="5.0" height="15.0" fill="rgb(233,66,21)" rx="2" ry="2" />
<text  x="60.48" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="1070.2" y="293" width="0.2" height="15.0" fill="rgb(236,2,38)" rx="2" ry="2" />
<text  x="1073.20" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::remove_prefix (8,000,000 samples, 0.03%)</title><rect x="900.3" y="389" width="0.4" height="15.0" fill="rgb(244,120,37)" rx="2" ry="2" />
<text  x="903.31" y="399.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (28,000,000 samples, 0.12%)</title><rect x="718.2" y="373" width="1.4" height="15.0" fill="rgb(251,203,33)" rx="2" ry="2" />
<text  x="721.20" y="383.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (4,000,000 samples, 0.02%)</title><rect x="25.4" y="453" width="0.2" height="15.0" fill="rgb(232,12,33)" rx="2" ry="2" />
<text  x="28.43" y="463.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (4,000,000 samples, 0.02%)</title><rect x="947.0" y="437" width="0.2" height="15.0" fill="rgb(235,10,5)" rx="2" ry="2" />
<text  x="949.99" y="447.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Flush (348,000,000 samples, 1.48%)</title><rect x="615.2" y="373" width="17.5" height="15.0" fill="rgb(254,209,54)" rx="2" ry="2" />
<text  x="618.23" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (12,000,000 samples, 0.05%)</title><rect x="974.2" y="421" width="0.6" height="15.0" fill="rgb(244,57,22)" rx="2" ry="2" />
<text  x="977.23" y="431.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (8,000,000 samples, 0.03%)</title><rect x="390.4" y="437" width="0.4" height="15.0" fill="rgb(221,110,54)" rx="2" ry="2" />
<text  x="393.44" y="447.5" ></text>
</g>
<g >
<title>do_filp_open (4,000,000 samples, 0.02%)</title><rect x="566.7" y="309" width="0.2" height="15.0" fill="rgb(208,15,33)" rx="2" ry="2" />
<text  x="569.74" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (12,000,000 samples, 0.05%)</title><rect x="994.9" y="405" width="0.6" height="15.0" fill="rgb(227,90,38)" rx="2" ry="2" />
<text  x="997.87" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_get_pointer (24,000,000 samples, 0.10%)</title><rect x="493.2" y="501" width="1.2" height="15.0" fill="rgb(216,24,51)" rx="2" ry="2" />
<text  x="496.22" y="511.5" ></text>
</g>
<g >
<title>[unknown] (8,000,000 samples, 0.03%)</title><rect x="10.0" y="549" width="0.4" height="15.0" fill="rgb(244,171,12)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (12,000,000 samples, 0.05%)</title><rect x="390.4" y="453" width="0.6" height="15.0" fill="rgb(227,140,31)" rx="2" ry="2" />
<text  x="393.44" y="463.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (4,000,000 samples, 0.02%)</title><rect x="399.1" y="437" width="0.2" height="15.0" fill="rgb(233,148,31)" rx="2" ry="2" />
<text  x="402.06" y="447.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (8,000,000 samples, 0.03%)</title><rect x="452.3" y="485" width="0.5" height="15.0" fill="rgb(250,189,32)" rx="2" ry="2" />
<text  x="455.35" y="495.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::FindShortestSeparator (4,000,000 samples, 0.02%)</title><rect x="612.0" y="373" width="0.2" height="15.0" fill="rgb(244,140,8)" rx="2" ry="2" />
<text  x="615.02" y="383.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Add (1,264,000,000 samples, 5.37%)</title><rect x="707.8" y="421" width="63.3" height="15.0" fill="rgb(226,157,16)" rx="2" ry="2" />
<text  x="710.78" y="431.5" >leveld..</text>
</g>
<g >
<title>dax_iomap_fault (24,000,000 samples, 0.10%)</title><rect x="668.3" y="149" width="1.2" height="15.0" fill="rgb(209,52,7)" rx="2" ry="2" />
<text  x="671.32" y="159.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (4,000,000 samples, 0.02%)</title><rect x="25.6" y="341" width="0.2" height="15.0" fill="rgb(225,39,49)" rx="2" ry="2" />
<text  x="28.63" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4,000,000 samples, 0.02%)</title><rect x="783.1" y="373" width="0.2" height="15.0" fill="rgb(235,3,20)" rx="2" ry="2" />
<text  x="786.11" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (4,000,000 samples, 0.02%)</title><rect x="1149.1" y="277" width="0.2" height="15.0" fill="rgb(248,127,1)" rx="2" ry="2" />
<text  x="1152.13" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="1131.1" y="389" width="0.2" height="15.0" fill="rgb(245,184,17)" rx="2" ry="2" />
<text  x="1134.10" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (20,000,000 samples, 0.08%)</title><rect x="588.2" y="357" width="1.0" height="15.0" fill="rgb(249,192,15)" rx="2" ry="2" />
<text  x="591.18" y="367.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (8,000,000 samples, 0.03%)</title><rect x="906.7" y="405" width="0.4" height="15.0" fill="rgb(238,77,25)" rx="2" ry="2" />
<text  x="909.72" y="415.5" ></text>
</g>
<g >
<title>bio_add_page (4,000,000 samples, 0.02%)</title><rect x="362.4" y="405" width="0.2" height="15.0" fill="rgb(235,127,19)" rx="2" ry="2" />
<text  x="365.40" y="415.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (144,000,000 samples, 0.61%)</title><rect x="1062.6" y="293" width="7.2" height="15.0" fill="rgb(232,19,19)" rx="2" ry="2" />
<text  x="1065.58" y="303.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::WriteBlock (340,000,000 samples, 1.44%)</title><rect x="615.4" y="357" width="17.1" height="15.0" fill="rgb(228,39,11)" rx="2" ry="2" />
<text  x="618.43" y="367.5" ></text>
</g>
<g >
<title>__vm_insert_mixed (8,000,000 samples, 0.03%)</title><rect x="669.1" y="117" width="0.4" height="15.0" fill="rgb(208,132,39)" rx="2" ry="2" />
<text  x="672.12" y="127.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="746.2" y="373" width="0.2" height="15.0" fill="rgb(227,126,7)" rx="2" ry="2" />
<text  x="749.25" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (48,000,000 samples, 0.20%)</title><rect x="973.0" y="437" width="2.4" height="15.0" fill="rgb(210,158,37)" rx="2" ry="2" />
<text  x="976.03" y="447.5" ></text>
</g>
<g >
<title>__kernel_fpu_begin (4,000,000 samples, 0.02%)</title><rect x="357.4" y="341" width="0.2" height="15.0" fill="rgb(216,108,23)" rx="2" ry="2" />
<text  x="360.39" y="351.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="501" width="0.2" height="15.0" fill="rgb(234,145,25)" rx="2" ry="2" />
<text  x="1183.58" y="511.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (16,000,000 samples, 0.07%)</title><rect x="695.4" y="341" width="0.8" height="15.0" fill="rgb(231,218,37)" rx="2" ry="2" />
<text  x="698.36" y="351.5" ></text>
</g>
<g >
<title>__open64 (4,000,000 samples, 0.02%)</title><rect x="783.1" y="421" width="0.2" height="15.0" fill="rgb(231,119,39)" rx="2" ry="2" />
<text  x="786.11" y="431.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BackgroundCompaction (4,176,000,000 samples, 17.72%)</title><rect x="565.1" y="453" width="209.2" height="15.0" fill="rgb(242,97,17)" rx="2" ry="2" />
<text  x="568.14" y="463.5" >leveldb::DBImpl::Background..</text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::empty (12,000,000 samples, 0.05%)</title><rect x="1125.5" y="437" width="0.6" height="15.0" fill="rgb(224,125,7)" rx="2" ry="2" />
<text  x="1128.49" y="447.5" ></text>
</g>
<g >
<title>do_unlinkat (4,000,000 samples, 0.02%)</title><rect x="25.6" y="517" width="0.2" height="15.0" fill="rgb(232,2,3)" rx="2" ry="2" />
<text  x="28.63" y="527.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_set (20,000,000 samples, 0.08%)</title><rect x="495.8" y="485" width="1.0" height="15.0" fill="rgb(215,7,54)" rx="2" ry="2" />
<text  x="498.82" y="495.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Contents (12,000,000 samples, 0.05%)</title><rect x="789.1" y="437" width="0.6" height="15.0" fill="rgb(235,192,29)" rx="2" ry="2" />
<text  x="792.12" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="1006.1" y="421" width="0.2" height="15.0" fill="rgb(219,53,19)" rx="2" ry="2" />
<text  x="1009.09" y="431.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (4,000,000 samples, 0.02%)</title><rect x="914.1" y="405" width="0.2" height="15.0" fill="rgb(225,55,20)" rx="2" ry="2" />
<text  x="917.13" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="498.4" y="405" width="0.2" height="15.0" fill="rgb(239,78,20)" rx="2" ry="2" />
<text  x="501.43" y="415.5" ></text>
</g>
<g >
<title>__fdget_pos (60,000,000 samples, 0.25%)</title><rect x="33.4" y="565" width="3.0" height="15.0" fill="rgb(252,154,23)" rx="2" ry="2" />
<text  x="36.44" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4,000,000 samples, 0.02%)</title><rect x="950.8" y="405" width="0.2" height="15.0" fill="rgb(231,122,12)" rx="2" ry="2" />
<text  x="953.79" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="629" width="0.2" height="15.0" fill="rgb(245,14,49)" rx="2" ry="2" />
<text  x="1187.19" y="639.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Finish (4,000,000 samples, 0.02%)</title><rect x="702.4" y="341" width="0.2" height="15.0" fill="rgb(217,107,32)" rx="2" ry="2" />
<text  x="705.37" y="351.5" ></text>
</g>
<g >
<title>__sb_start_write (16,000,000 samples, 0.07%)</title><rect x="41.5" y="549" width="0.8" height="15.0" fill="rgb(237,92,25)" rx="2" ry="2" />
<text  x="44.45" y="559.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::MakeRoomForWrite (8,000,000 samples, 0.03%)</title><rect x="997.5" y="437" width="0.4" height="15.0" fill="rgb(248,79,27)" rx="2" ry="2" />
<text  x="1000.47" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="585.4" y="341" width="0.2" height="15.0" fill="rgb(212,121,14)" rx="2" ry="2" />
<text  x="588.38" y="351.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4,000,000 samples, 0.02%)</title><rect x="703.4" y="357" width="0.2" height="15.0" fill="rgb(248,59,13)" rx="2" ry="2" />
<text  x="706.38" y="367.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8,000,000 samples, 0.03%)</title><rect x="799.5" y="309" width="0.4" height="15.0" fill="rgb(216,28,26)" rx="2" ry="2" />
<text  x="802.54" y="319.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32 (56,000,000 samples, 0.24%)</title><rect x="1086.6" y="389" width="2.8" height="15.0" fill="rgb(215,146,23)" rx="2" ry="2" />
<text  x="1089.62" y="399.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (16,000,000 samples, 0.07%)</title><rect x="961.0" y="357" width="0.8" height="15.0" fill="rgb(222,162,34)" rx="2" ry="2" />
<text  x="964.01" y="367.5" ></text>
</g>
<g >
<title>__pmem_direct_access (20,000,000 samples, 0.08%)</title><rect x="63.7" y="437" width="1.0" height="15.0" fill="rgb(251,48,46)" rx="2" ry="2" />
<text  x="66.69" y="447.5" ></text>
</g>
<g >
<title>page_fault (8,000,000 samples, 0.03%)</title><rect x="1174.8" y="629" width="0.4" height="15.0" fill="rgb(243,48,33)" rx="2" ry="2" />
<text  x="1177.77" y="639.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="967.2" y="357" width="0.2" height="15.0" fill="rgb(247,227,22)" rx="2" ry="2" />
<text  x="970.22" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (4,000,000 samples, 0.02%)</title><rect x="422.1" y="421" width="0.2" height="15.0" fill="rgb(250,213,34)" rx="2" ry="2" />
<text  x="425.10" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*&amp;&gt; (4,000,000 samples, 0.02%)</title><rect x="502.6" y="421" width="0.2" height="15.0" fill="rgb(230,100,9)" rx="2" ry="2" />
<text  x="505.63" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (4,000,000 samples, 0.02%)</title><rect x="1142.9" y="341" width="0.2" height="15.0" fill="rgb(224,73,30)" rx="2" ry="2" />
<text  x="1145.92" y="351.5" ></text>
</g>
<g >
<title>dax_get_private (4,000,000 samples, 0.02%)</title><rect x="63.3" y="453" width="0.2" height="15.0" fill="rgb(253,122,8)" rx="2" ry="2" />
<text  x="66.29" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="942.6" y="389" width="0.2" height="15.0" fill="rgb(248,59,43)" rx="2" ry="2" />
<text  x="945.58" y="399.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (24,000,000 samples, 0.10%)</title><rect x="587.0" y="341" width="1.2" height="15.0" fill="rgb(224,216,41)" rx="2" ry="2" />
<text  x="589.98" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4,000,000 samples, 0.02%)</title><rect x="678.9" y="341" width="0.2" height="15.0" fill="rgb(241,144,33)" rx="2" ry="2" />
<text  x="681.93" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4,000,000 samples, 0.02%)</title><rect x="770.3" y="405" width="0.2" height="15.0" fill="rgb(250,199,46)" rx="2" ry="2" />
<text  x="773.29" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (4,000,000 samples, 0.02%)</title><rect x="984.1" y="453" width="0.2" height="15.0" fill="rgb(239,40,22)" rx="2" ry="2" />
<text  x="987.05" y="463.5" ></text>
</g>
<g >
<title>dax_iomap_actor (5,376,000,000 samples, 22.82%)</title><rect x="50.3" y="485" width="269.2" height="15.0" fill="rgb(253,35,27)" rx="2" ry="2" />
<text  x="53.27" y="495.5" >dax_iomap_actor</text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Next (132,000,000 samples, 0.56%)</title><rect x="1071.6" y="341" width="6.6" height="15.0" fill="rgb(235,83,31)" rx="2" ry="2" />
<text  x="1074.60" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (24,000,000 samples, 0.10%)</title><rect x="505.0" y="421" width="1.2" height="15.0" fill="rgb(225,83,29)" rx="2" ry="2" />
<text  x="508.04" y="431.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.81 (20,000,000 samples, 0.08%)</title><rect x="343.6" y="453" width="1.0" height="15.0" fill="rgb(245,46,18)" rx="2" ry="2" />
<text  x="346.57" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(217,69,8)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>add_transaction_credits (12,000,000 samples, 0.05%)</title><rect x="402.9" y="421" width="0.6" height="15.0" fill="rgb(239,25,22)" rx="2" ry="2" />
<text  x="405.87" y="431.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Write (3,960,000,000 samples, 16.81%)</title><rect x="777.5" y="469" width="198.3" height="15.0" fill="rgb(225,221,24)" rx="2" ry="2" />
<text  x="780.50" y="479.5" >leveldb::DBImpl::Write</text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (16,000,000 samples, 0.07%)</title><rect x="1126.7" y="405" width="0.8" height="15.0" fill="rgb(212,26,40)" rx="2" ry="2" />
<text  x="1129.69" y="415.5" ></text>
</g>
<g >
<title>ksys_write (4,000,000 samples, 0.02%)</title><rect x="25.4" y="581" width="0.2" height="15.0" fill="rgb(209,209,31)" rx="2" ry="2" />
<text  x="28.43" y="591.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::SetSequence (24,000,000 samples, 0.10%)</title><rect x="903.9" y="437" width="1.2" height="15.0" fill="rgb(250,116,10)" rx="2" ry="2" />
<text  x="906.92" y="447.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (4,000,000 samples, 0.02%)</title><rect x="357.4" y="357" width="0.2" height="15.0" fill="rgb(229,6,44)" rx="2" ry="2" />
<text  x="360.39" y="367.5" ></text>
</g>
<g >
<title>mutex_unlock (8,000,000 samples, 0.03%)</title><rect x="392.4" y="469" width="0.4" height="15.0" fill="rgb(208,153,13)" rx="2" ry="2" />
<text  x="395.45" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4,000,000 samples, 0.02%)</title><rect x="956.6" y="389" width="0.2" height="15.0" fill="rgb(230,85,25)" rx="2" ry="2" />
<text  x="959.60" y="399.5" ></text>
</g>
<g >
<title>leveldb::Hash (4,000,000 samples, 0.02%)</title><rect x="665.5" y="261" width="0.2" height="15.0" fill="rgb(218,11,17)" rx="2" ry="2" />
<text  x="668.51" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (20,000,000 samples, 0.08%)</title><rect x="1153.3" y="437" width="1.0" height="15.0" fill="rgb(209,132,47)" rx="2" ry="2" />
<text  x="1156.34" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="515.7" y="453" width="0.4" height="15.0" fill="rgb(239,69,12)" rx="2" ry="2" />
<text  x="518.66" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="566.7" y="373" width="0.2" height="15.0" fill="rgb(230,9,34)" rx="2" ry="2" />
<text  x="569.74" y="383.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (32,000,000 samples, 0.14%)</title><rect x="571.8" y="373" width="1.6" height="15.0" fill="rgb(227,173,35)" rx="2" ry="2" />
<text  x="574.75" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (148,000,000 samples, 0.63%)</title><rect x="1143.9" y="389" width="7.4" height="15.0" fill="rgb(232,37,10)" rx="2" ry="2" />
<text  x="1146.92" y="399.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (132,000,000 samples, 0.56%)</title><rect x="336.2" y="453" width="6.6" height="15.0" fill="rgb(237,92,8)" rx="2" ry="2" />
<text  x="339.15" y="463.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8,000,000 samples, 0.03%)</title><rect x="695.4" y="325" width="0.4" height="15.0" fill="rgb(236,79,21)" rx="2" ry="2" />
<text  x="698.36" y="335.5" ></text>
</g>
<g >
<title>std::operator&amp; (4,000,000 samples, 0.02%)</title><rect x="949.0" y="405" width="0.2" height="15.0" fill="rgb(218,182,47)" rx="2" ry="2" />
<text  x="951.99" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::FindSmallest (368,000,000 samples, 1.56%)</title><rect x="640.5" y="405" width="18.4" height="15.0" fill="rgb(207,134,51)" rx="2" ry="2" />
<text  x="643.47" y="415.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="960.4" y="341" width="0.2" height="15.0" fill="rgb(245,190,47)" rx="2" ry="2" />
<text  x="963.41" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4,000,000 samples, 0.02%)</title><rect x="702.4" y="325" width="0.2" height="15.0" fill="rgb(216,79,33)" rx="2" ry="2" />
<text  x="705.37" y="335.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::FileSize (4,000,000 samples, 0.02%)</title><rect x="771.1" y="421" width="0.2" height="15.0" fill="rgb(245,202,49)" rx="2" ry="2" />
<text  x="774.09" y="431.5" ></text>
</g>
<g >
<title>crypto_shash_update (156,000,000 samples, 0.66%)</title><rect x="428.5" y="405" width="7.8" height="15.0" fill="rgb(238,157,37)" rx="2" ry="2" />
<text  x="431.51" y="415.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (20,000,000 samples, 0.08%)</title><rect x="690.4" y="389" width="1.0" height="15.0" fill="rgb(247,226,23)" rx="2" ry="2" />
<text  x="693.35" y="399.5" ></text>
</g>
<g >
<title>__getblk_gfp (8,000,000 samples, 0.03%)</title><rect x="390.4" y="421" width="0.4" height="15.0" fill="rgb(242,207,27)" rx="2" ry="2" />
<text  x="393.44" y="431.5" ></text>
</g>
<g >
<title>lookup_memtype (4,000,000 samples, 0.02%)</title><rect x="669.3" y="85" width="0.2" height="15.0" fill="rgb(246,103,52)" rx="2" ry="2" />
<text  x="672.32" y="95.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (8,000,000 samples, 0.03%)</title><rect x="643.7" y="389" width="0.4" height="15.0" fill="rgb(220,72,21)" rx="2" ry="2" />
<text  x="646.67" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (4,000,000 samples, 0.02%)</title><rect x="527.3" y="549" width="0.2" height="15.0" fill="rgb(230,132,54)" rx="2" ry="2" />
<text  x="530.28" y="559.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (4,000,000 samples, 0.02%)</title><rect x="1133.1" y="341" width="0.2" height="15.0" fill="rgb(250,113,40)" rx="2" ry="2" />
<text  x="1136.10" y="351.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="967.0" y="341" width="0.2" height="15.0" fill="rgb(230,8,28)" rx="2" ry="2" />
<text  x="970.02" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (128,000,000 samples, 0.54%)</title><rect x="1157.3" y="373" width="6.5" height="15.0" fill="rgb(207,153,5)" rx="2" ry="2" />
<text  x="1160.34" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (8,000,000 samples, 0.03%)</title><rect x="722.0" y="373" width="0.4" height="15.0" fill="rgb(222,58,12)" rx="2" ry="2" />
<text  x="725.01" y="383.5" ></text>
</g>
<g >
<title>ksys_write (8,492,000,000 samples, 36.04%)</title><rect x="33.2" y="581" width="425.4" height="15.0" fill="rgb(229,45,53)" rx="2" ry="2" />
<text  x="36.24" y="591.5" >ksys_write</text>
</g>
<g >
<title>__memcmp_avx2_movbe (12,000,000 samples, 0.05%)</title><rect x="689.8" y="373" width="0.6" height="15.0" fill="rgb(238,140,40)" rx="2" ry="2" />
<text  x="692.75" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="1069.8" y="293" width="0.2" height="15.0" fill="rgb(213,88,22)" rx="2" ry="2" />
<text  x="1072.80" y="303.5" ></text>
</g>
<g >
<title>crc_42 (4,000,000 samples, 0.02%)</title><rect x="446.5" y="405" width="0.2" height="15.0" fill="rgb(231,166,17)" rx="2" ry="2" />
<text  x="449.54" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="1151.1" y="373" width="0.2" height="15.0" fill="rgb(212,184,52)" rx="2" ry="2" />
<text  x="1154.13" y="383.5" ></text>
</g>
<g >
<title>memset_erms (32,000,000 samples, 0.14%)</title><rect x="329.3" y="437" width="1.6" height="15.0" fill="rgb(244,32,13)" rx="2" ry="2" />
<text  x="332.34" y="447.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::RandomHeight (28,000,000 samples, 0.12%)</title><rect x="893.9" y="357" width="1.4" height="15.0" fill="rgb(237,139,12)" rx="2" ry="2" />
<text  x="896.90" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (88,000,000 samples, 0.37%)</title><rect x="968.2" y="309" width="4.4" height="15.0" fill="rgb(228,134,34)" rx="2" ry="2" />
<text  x="971.22" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::__setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; (8,000,000 samples, 0.03%)</title><rect x="1130.9" y="421" width="0.4" height="15.0" fill="rgb(245,216,23)" rx="2" ry="2" />
<text  x="1133.90" y="431.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::user_comparator (8,000,000 samples, 0.03%)</title><rect x="703.6" y="421" width="0.4" height="15.0" fill="rgb(215,141,10)" rx="2" ry="2" />
<text  x="706.58" y="431.5" ></text>
</g>
<g >
<title>up_write (16,000,000 samples, 0.07%)</title><rect x="455.4" y="533" width="0.8" height="15.0" fill="rgb(211,70,6)" rx="2" ry="2" />
<text  x="458.35" y="543.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (24,000,000 samples, 0.10%)</title><rect x="445.1" y="405" width="1.2" height="15.0" fill="rgb(235,63,4)" rx="2" ry="2" />
<text  x="448.14" y="415.5" ></text>
</g>
<g >
<title>ext4_meta_trans_blocks (40,000,000 samples, 0.17%)</title><rect x="384.4" y="469" width="2.0" height="15.0" fill="rgb(207,156,45)" rx="2" ry="2" />
<text  x="387.43" y="479.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::~_Result (12,000,000 samples, 0.05%)</title><rect x="1161.8" y="245" width="0.6" height="15.0" fill="rgb(234,14,49)" rx="2" ry="2" />
<text  x="1164.75" y="255.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (880,000,000 samples, 3.74%)</title><rect x="485.8" y="597" width="44.1" height="15.0" fill="rgb(248,6,37)" rx="2" ry="2" />
<text  x="488.81" y="607.5" >std:..</text>
</g>
<g >
<title>jbd2_write_access_granted.part.11 (12,000,000 samples, 0.05%)</title><rect x="442.9" y="405" width="0.6" height="15.0" fill="rgb(247,109,40)" rx="2" ry="2" />
<text  x="445.93" y="415.5" ></text>
</g>
<g >
<title>pmem_copy_from_iter (12,000,000 samples, 0.05%)</title><rect x="317.1" y="469" width="0.6" height="15.0" fill="rgb(230,24,33)" rx="2" ry="2" />
<text  x="320.12" y="479.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Flush (4,000,000 samples, 0.02%)</title><rect x="615.2" y="357" width="0.2" height="15.0" fill="rgb(216,169,53)" rx="2" ry="2" />
<text  x="618.23" y="367.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::NoBarrier_Next (4,000,000 samples, 0.02%)</title><rect x="892.7" y="357" width="0.2" height="15.0" fill="rgb(235,172,44)" rx="2" ry="2" />
<text  x="895.70" y="367.5" ></text>
</g>
<g >
<title>pmem_do_bvec (196,000,000 samples, 0.83%)</title><rect x="374.2" y="357" width="9.8" height="15.0" fill="rgb(238,98,22)" rx="2" ry="2" />
<text  x="377.22" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::construct&lt;std::__future_base::_State_baseV2&gt; (32,000,000 samples, 0.14%)</title><rect x="958.6" y="325" width="1.6" height="15.0" fill="rgb(210,84,30)" rx="2" ry="2" />
<text  x="961.61" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (24,000,000 samples, 0.10%)</title><rect x="1167.0" y="453" width="1.2" height="15.0" fill="rgb(229,219,5)" rx="2" ry="2" />
<text  x="1169.96" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,000,000 samples, 0.02%)</title><rect x="964.0" y="405" width="0.2" height="15.0" fill="rgb(249,175,5)" rx="2" ry="2" />
<text  x="967.02" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_init_functor (4,000,000 samples, 0.02%)</title><rect x="943.8" y="389" width="0.2" height="15.0" fill="rgb(207,72,33)" rx="2" ry="2" />
<text  x="946.78" y="399.5" ></text>
</g>
<g >
<title>memcpy@plt (4,000,000 samples, 0.02%)</title><rect x="769.3" y="405" width="0.2" height="15.0" fill="rgb(246,143,13)" rx="2" ry="2" />
<text  x="772.29" y="415.5" ></text>
</g>
<g >
<title>mempool_alloc_slab (8,000,000 samples, 0.03%)</title><rect x="363.0" y="373" width="0.4" height="15.0" fill="rgb(219,102,8)" rx="2" ry="2" />
<text  x="366.00" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::Populate (16,000,000 samples, 0.07%)</title><rect x="1174.4" y="645" width="0.8" height="15.0" fill="rgb(238,135,49)" rx="2" ry="2" />
<text  x="1177.37" y="655.5" ></text>
</g>
<g >
<title>crypto_shash_update (4,000,000 samples, 0.02%)</title><rect x="359.4" y="373" width="0.2" height="15.0" fill="rgb(237,98,36)" rx="2" ry="2" />
<text  x="362.39" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_M_head (12,000,000 samples, 0.05%)</title><rect x="520.3" y="453" width="0.6" height="15.0" fill="rgb(224,134,26)" rx="2" ry="2" />
<text  x="523.26" y="463.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::InsertInto (2,268,000,000 samples, 9.63%)</title><rect x="790.3" y="437" width="113.6" height="15.0" fill="rgb(207,19,49)" rx="2" ry="2" />
<text  x="793.32" y="447.5" >leveldb::Write..</text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::release (48,000,000 samples, 0.20%)</title><rect x="514.3" y="485" width="2.4" height="15.0" fill="rgb(213,193,25)" rx="2" ry="2" />
<text  x="517.25" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::swap (156,000,000 samples, 0.66%)</title><rect x="516.9" y="533" width="7.8" height="15.0" fill="rgb(246,178,25)" rx="2" ry="2" />
<text  x="519.86" y="543.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (52,000,000 samples, 0.22%)</title><rect x="1046.8" y="293" width="2.6" height="15.0" fill="rgb(245,222,40)" rx="2" ry="2" />
<text  x="1049.76" y="303.5" ></text>
</g>
<g >
<title>ext4_map_blocks (828,000,000 samples, 3.51%)</title><rect x="343.0" y="469" width="41.4" height="15.0" fill="rgb(220,153,37)" rx="2" ry="2" />
<text  x="345.96" y="479.5" >ext..</text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_State_baseV2*&gt; (8,000,000 samples, 0.03%)</title><rect x="528.5" y="581" width="0.4" height="15.0" fill="rgb(248,196,41)" rx="2" ry="2" />
<text  x="531.48" y="591.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="981.6" y="437" width="0.2" height="15.0" fill="rgb(245,58,24)" rx="2" ry="2" />
<text  x="984.65" y="447.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (36,000,000 samples, 0.15%)</title><rect x="610.2" y="357" width="1.8" height="15.0" fill="rgb(242,147,15)" rx="2" ry="2" />
<text  x="613.22" y="367.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="721.8" y="373" width="0.2" height="15.0" fill="rgb(212,208,37)" rx="2" ry="2" />
<text  x="724.81" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (12,000,000 samples, 0.05%)</title><rect x="706.8" y="421" width="0.6" height="15.0" fill="rgb(239,76,6)" rx="2" ry="2" />
<text  x="709.78" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="674.1" y="293" width="0.4" height="15.0" fill="rgb(252,36,3)" rx="2" ry="2" />
<text  x="677.13" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (4,000,000 samples, 0.02%)</title><rect x="1093.4" y="405" width="0.2" height="15.0" fill="rgb(214,207,20)" rx="2" ry="2" />
<text  x="1096.44" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_retrieved_flag (4,000,000 samples, 0.02%)</title><rect x="1143.1" y="421" width="0.2" height="15.0" fill="rgb(205,31,15)" rx="2" ry="2" />
<text  x="1146.12" y="431.5" ></text>
</g>
<g >
<title>ext4_handle_dirty_dirent_node (4,000,000 samples, 0.02%)</title><rect x="26.0" y="453" width="0.2" height="15.0" fill="rgb(237,25,17)" rx="2" ry="2" />
<text  x="29.03" y="463.5" ></text>
</g>
<g >
<title>leveldb::log::Writer::AddRecord (544,000,000 samples, 2.31%)</title><rect x="1096.0" y="437" width="27.3" height="15.0" fill="rgb(248,211,46)" rx="2" ry="2" />
<text  x="1099.04" y="447.5" >l..</text>
</g>
<g >
<title>snappy::RawUncompress (4,000,000 samples, 0.02%)</title><rect x="1184.6" y="661" width="0.2" height="15.0" fill="rgb(227,214,15)" rx="2" ry="2" />
<text  x="1187.59" y="671.5" ></text>
</g>
<g >
<title>task_work_run (4,000,000 samples, 0.02%)</title><rect x="703.4" y="341" width="0.2" height="15.0" fill="rgb(243,114,8)" rx="2" ry="2" />
<text  x="706.38" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait (40,000,000 samples, 0.17%)</title><rect x="948.0" y="421" width="2.0" height="15.0" fill="rgb(222,35,10)" rx="2" ry="2" />
<text  x="950.99" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4,000,000 samples, 0.02%)</title><rect x="770.1" y="405" width="0.2" height="15.0" fill="rgb(205,119,43)" rx="2" ry="2" />
<text  x="773.09" y="415.5" ></text>
</g>
<g >
<title>rw_verify_area (32,000,000 samples, 0.14%)</title><rect x="457.0" y="549" width="1.6" height="15.0" fill="rgb(209,103,24)" rx="2" ry="2" />
<text  x="459.96" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4,000,000 samples, 0.02%)</title><rect x="750.5" y="357" width="0.2" height="15.0" fill="rgb(235,158,44)" rx="2" ry="2" />
<text  x="753.46" y="367.5" ></text>
</g>
<g >
<title>crypto_shash_update (12,000,000 samples, 0.05%)</title><rect x="447.3" y="405" width="0.6" height="15.0" fill="rgb(215,105,20)" rx="2" ry="2" />
<text  x="450.34" y="415.5" ></text>
</g>
<g >
<title>security_file_permission (24,000,000 samples, 0.10%)</title><rect x="457.4" y="533" width="1.2" height="15.0" fill="rgb(247,146,5)" rx="2" ry="2" />
<text  x="460.36" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (4,000,000 samples, 0.02%)</title><rect x="959.0" y="293" width="0.2" height="15.0" fill="rgb(223,7,23)" rx="2" ry="2" />
<text  x="962.01" y="303.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::__basic_future (44,000,000 samples, 0.19%)</title><rect x="1140.9" y="421" width="2.2" height="15.0" fill="rgb(206,205,22)" rx="2" ry="2" />
<text  x="1143.92" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (32,000,000 samples, 0.14%)</title><rect x="468.4" y="645" width="1.6" height="15.0" fill="rgb(244,225,9)" rx="2" ry="2" />
<text  x="471.38" y="655.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Count (8,000,000 samples, 0.03%)</title><rect x="1094.2" y="405" width="0.4" height="15.0" fill="rgb(222,194,39)" rx="2" ry="2" />
<text  x="1097.24" y="415.5" ></text>
</g>
<g >
<title>std::mutex::unlock (12,000,000 samples, 0.05%)</title><rect x="786.1" y="405" width="0.6" height="15.0" fill="rgb(210,24,45)" rx="2" ry="2" />
<text  x="789.12" y="415.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Next (4,000,000 samples, 0.02%)</title><rect x="669.5" y="325" width="0.2" height="15.0" fill="rgb(240,189,4)" rx="2" ry="2" />
<text  x="672.52" y="335.5" ></text>
</g>
<g >
<title>leveldb::PutLengthPrefixedSlice (52,000,000 samples, 0.22%)</title><rect x="1168.2" y="453" width="2.6" height="15.0" fill="rgb(231,179,3)" rx="2" ry="2" />
<text  x="1171.16" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (40,000,000 samples, 0.17%)</title><rect x="340.0" y="405" width="2.0" height="15.0" fill="rgb(235,44,46)" rx="2" ry="2" />
<text  x="342.96" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="955.0" y="389" width="0.2" height="15.0" fill="rgb(254,115,9)" rx="2" ry="2" />
<text  x="958.00" y="399.5" ></text>
</g>
<g >
<title>leveldb::Random::Next (8,000,000 samples, 0.03%)</title><rect x="894.9" y="325" width="0.4" height="15.0" fill="rgb(217,113,14)" rx="2" ry="2" />
<text  x="897.90" y="335.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (100,000,000 samples, 0.42%)</title><rect x="956.8" y="373" width="5.0" height="15.0" fill="rgb(249,29,32)" rx="2" ry="2" />
<text  x="959.80" y="383.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed64 (4,000,000 samples, 0.02%)</title><rect x="1005.9" y="421" width="0.2" height="15.0" fill="rgb(217,179,18)" rx="2" ry="2" />
<text  x="1008.89" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::FlushBuffer (4,000,000 samples, 0.02%)</title><rect x="700.2" y="325" width="0.2" height="15.0" fill="rgb(223,113,42)" rx="2" ry="2" />
<text  x="703.17" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get (12,000,000 samples, 0.05%)</title><rect x="516.1" y="469" width="0.6" height="15.0" fill="rgb(214,187,46)" rx="2" ry="2" />
<text  x="519.06" y="479.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Put (116,000,000 samples, 0.49%)</title><rect x="978.4" y="469" width="5.9" height="15.0" fill="rgb(245,136,5)" rx="2" ry="2" />
<text  x="981.44" y="479.5" ></text>
</g>
<g >
<title>crypto_shash_update (32,000,000 samples, 0.14%)</title><rect x="445.1" y="421" width="1.6" height="15.0" fill="rgb(210,1,28)" rx="2" ry="2" />
<text  x="448.14" y="431.5" ></text>
</g>
<g >
<title>leveldb::Table::BlockReader (88,000,000 samples, 0.37%)</title><rect x="665.1" y="309" width="4.4" height="15.0" fill="rgb(220,58,2)" rx="2" ry="2" />
<text  x="668.11" y="319.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (28,000,000 samples, 0.12%)</title><rect x="1066.0" y="277" width="1.4" height="15.0" fill="rgb(232,94,44)" rx="2" ry="2" />
<text  x="1068.99" y="287.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (4,000,000 samples, 0.02%)</title><rect x="980.4" y="453" width="0.2" height="15.0" fill="rgb(246,88,13)" rx="2" ry="2" />
<text  x="983.44" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (8,000,000 samples, 0.03%)</title><rect x="994.3" y="421" width="0.4" height="15.0" fill="rgb(254,113,41)" rx="2" ry="2" />
<text  x="997.27" y="431.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::CurrentSizeEstimate (12,000,000 samples, 0.05%)</title><rect x="608.0" y="373" width="0.6" height="15.0" fill="rgb(223,3,19)" rx="2" ry="2" />
<text  x="611.01" y="383.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::Valid (4,000,000 samples, 0.02%)</title><rect x="663.3" y="373" width="0.2" height="15.0" fill="rgb(243,54,25)" rx="2" ry="2" />
<text  x="666.31" y="383.5" ></text>
</g>
<g >
<title>_copy_from_iter_flushcache (8,000,000 samples, 0.03%)</title><rect x="52.3" y="453" width="0.4" height="15.0" fill="rgb(227,10,28)" rx="2" ry="2" />
<text  x="55.27" y="463.5" ></text>
</g>
<g >
<title>leveldb::InternalKey::Encode (4,000,000 samples, 0.02%)</title><rect x="689.0" y="405" width="0.2" height="15.0" fill="rgb(248,49,24)" rx="2" ry="2" />
<text  x="691.95" y="415.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Add (180,000,000 samples, 0.76%)</title><rect x="693.4" y="373" width="9.0" height="15.0" fill="rgb(217,141,17)" rx="2" ry="2" />
<text  x="696.36" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="1137.7" y="341" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1140.71" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4,000,000 samples, 0.02%)</title><rect x="608.6" y="357" width="0.2" height="15.0" fill="rgb(236,65,17)" rx="2" ry="2" />
<text  x="611.61" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size@plt (4,000,000 samples, 0.02%)</title><rect x="789.5" y="421" width="0.2" height="15.0" fill="rgb(233,50,28)" rx="2" ry="2" />
<text  x="792.52" y="431.5" ></text>
</g>
<g >
<title>leveldb::log::Writer::AddRecord (536,000,000 samples, 2.28%)</title><rect x="905.1" y="437" width="26.9" height="15.0" fill="rgb(205,178,5)" rx="2" ry="2" />
<text  x="908.12" y="447.5" >l..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="645" width="0.2" height="15.0" fill="rgb(252,214,10)" rx="2" ry="2" />
<text  x="1187.19" y="655.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (20,000,000 samples, 0.08%)</title><rect x="799.9" y="309" width="1.0" height="15.0" fill="rgb(254,73,35)" rx="2" ry="2" />
<text  x="802.94" y="319.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (20,000,000 samples, 0.08%)</title><rect x="850.6" y="309" width="1.0" height="15.0" fill="rgb(206,195,42)" rx="2" ry="2" />
<text  x="853.62" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="972.0" y="277" width="0.2" height="15.0" fill="rgb(211,89,40)" rx="2" ry="2" />
<text  x="975.03" y="287.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (12,000,000 samples, 0.05%)</title><rect x="1011.5" y="373" width="0.6" height="15.0" fill="rgb(237,141,39)" rx="2" ry="2" />
<text  x="1014.50" y="383.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (12,000,000 samples, 0.05%)</title><rect x="689.8" y="389" width="0.6" height="15.0" fill="rgb(222,118,5)" rx="2" ry="2" />
<text  x="692.75" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="508.8" y="485" width="0.4" height="15.0" fill="rgb(206,189,35)" rx="2" ry="2" />
<text  x="511.85" y="495.5" ></text>
</g>
<g >
<title>std::mutex::unlock (16,000,000 samples, 0.07%)</title><rect x="1124.3" y="421" width="0.8" height="15.0" fill="rgb(232,164,49)" rx="2" ry="2" />
<text  x="1127.29" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::construct&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&gt; (4,000,000 samples, 0.02%)</title><rect x="1127.7" y="421" width="0.2" height="15.0" fill="rgb(253,69,7)" rx="2" ry="2" />
<text  x="1130.69" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (152,000,000 samples, 0.65%)</title><rect x="595.2" y="341" width="7.6" height="15.0" fill="rgb(212,214,19)" rx="2" ry="2" />
<text  x="598.19" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="517" width="0.2" height="15.0" fill="rgb(254,170,40)" rx="2" ry="2" />
<text  x="1183.98" y="527.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::WriteUnbuffered (4,000,000 samples, 0.02%)</title><rect x="615.2" y="325" width="0.2" height="15.0" fill="rgb(249,228,44)" rx="2" ry="2" />
<text  x="618.23" y="335.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::MakeRoomForWrite (4,000,000 samples, 0.02%)</title><rect x="777.7" y="453" width="0.2" height="15.0" fill="rgb(252,94,42)" rx="2" ry="2" />
<text  x="780.70" y="463.5" ></text>
</g>
<g >
<title>dax_read_lock (32,000,000 samples, 0.14%)</title><rect x="64.7" y="469" width="1.6" height="15.0" fill="rgb(242,117,25)" rx="2" ry="2" />
<text  x="67.69" y="479.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (28,000,000 samples, 0.12%)</title><rect x="389.0" y="421" width="1.4" height="15.0" fill="rgb(221,65,28)" rx="2" ry="2" />
<text  x="392.04" y="431.5" ></text>
</g>
<g >
<title>leveldb::Random::Uniform (4,000,000 samples, 0.02%)</title><rect x="777.3" y="421" width="0.2" height="15.0" fill="rgb(213,29,23)" rx="2" ry="2" />
<text  x="780.30" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (8,000,000 samples, 0.03%)</title><rect x="966.0" y="357" width="0.4" height="15.0" fill="rgb(233,19,5)" rx="2" ry="2" />
<text  x="969.02" y="367.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::value (48,000,000 samples, 0.20%)</title><rect x="684.5" y="405" width="2.4" height="15.0" fill="rgb(251,224,51)" rx="2" ry="2" />
<text  x="687.54" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (12,000,000 samples, 0.05%)</title><rect x="1163.0" y="277" width="0.6" height="15.0" fill="rgb(227,60,38)" rx="2" ry="2" />
<text  x="1165.95" y="287.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (300,000,000 samples, 1.27%)</title><rect x="320.9" y="469" width="15.1" height="15.0" fill="rgb(233,80,36)" rx="2" ry="2" />
<text  x="323.93" y="479.5" ></text>
</g>
<g >
<title>pmem_dax_direct_access (24,000,000 samples, 0.10%)</title><rect x="63.5" y="453" width="1.2" height="15.0" fill="rgb(232,21,33)" rx="2" ry="2" />
<text  x="66.49" y="463.5" ></text>
</g>
<g >
<title>_raw_read_lock (64,000,000 samples, 0.27%)</title><rect x="323.9" y="437" width="3.2" height="15.0" fill="rgb(236,103,9)" rx="2" ry="2" />
<text  x="326.93" y="447.5" ></text>
</g>
<g >
<title>__virt_addr_valid (8,000,000 samples, 0.03%)</title><rect x="54.5" y="437" width="0.4" height="15.0" fill="rgb(237,132,20)" rx="2" ry="2" />
<text  x="57.48" y="447.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.16 (20,000,000 samples, 0.08%)</title><rect x="483.4" y="549" width="1.0" height="15.0" fill="rgb(213,199,13)" rx="2" ry="2" />
<text  x="486.40" y="559.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (264,000,000 samples, 1.12%)</title><rect x="423.1" y="421" width="13.2" height="15.0" fill="rgb(253,167,21)" rx="2" ry="2" />
<text  x="426.10" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get (4,000,000 samples, 0.02%)</title><rect x="504.0" y="469" width="0.2" height="15.0" fill="rgb(228,114,35)" rx="2" ry="2" />
<text  x="507.04" y="479.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (12,156,000,000 samples, 51.60%)</title><rect x="565.1" y="581" width="608.9" height="15.0" fill="rgb(216,44,50)" rx="2" ry="2" />
<text  x="568.14" y="591.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::emplace_back&lt;leveldb::DBImpl::Writer*&gt; (16,000,000 samples, 0.07%)</title><rect x="1127.9" y="421" width="0.8" height="15.0" fill="rgb(250,74,42)" rx="2" ry="2" />
<text  x="1130.89" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (4,000,000 samples, 0.02%)</title><rect x="634.7" y="373" width="0.2" height="15.0" fill="rgb(207,166,27)" rx="2" ry="2" />
<text  x="637.66" y="383.5" ></text>
</g>
<g >
<title>[unknown] (8,000,000 samples, 0.03%)</title><rect x="10.0" y="597" width="0.4" height="15.0" fill="rgb(221,43,38)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::Next (20,000,000 samples, 0.08%)</title><rect x="692.0" y="373" width="1.0" height="15.0" fill="rgb(213,136,41)" rx="2" ry="2" />
<text  x="694.96" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="496.8" y="485" width="0.2" height="15.0" fill="rgb(244,21,20)" rx="2" ry="2" />
<text  x="499.83" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter, true&gt; (4,000,000 samples, 0.02%)</title><rect x="959.8" y="277" width="0.2" height="15.0" fill="rgb(206,45,15)" rx="2" ry="2" />
<text  x="962.81" y="287.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (12,000,000 samples, 0.05%)</title><rect x="1030.5" y="309" width="0.6" height="15.0" fill="rgb(251,171,53)" rx="2" ry="2" />
<text  x="1033.53" y="319.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed64 (12,000,000 samples, 0.05%)</title><rect x="1094.6" y="405" width="0.6" height="15.0" fill="rgb(217,56,3)" rx="2" ry="2" />
<text  x="1097.64" y="415.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (16,000,000 samples, 0.07%)</title><rect x="898.3" y="373" width="0.8" height="15.0" fill="rgb(249,161,5)" rx="2" ry="2" />
<text  x="901.31" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (12,000,000 samples, 0.05%)</title><rect x="740.8" y="373" width="0.6" height="15.0" fill="rgb(249,175,53)" rx="2" ry="2" />
<text  x="743.84" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (8,000,000 samples, 0.03%)</title><rect x="1174.8" y="613" width="0.4" height="15.0" fill="rgb(231,171,52)" rx="2" ry="2" />
<text  x="1177.77" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (4,000,000 samples, 0.02%)</title><rect x="359.6" y="389" width="0.2" height="15.0" fill="rgb(253,26,40)" rx="2" ry="2" />
<text  x="362.59" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (12,000,000 samples, 0.05%)</title><rect x="508.2" y="453" width="0.6" height="15.0" fill="rgb(253,35,15)" rx="2" ry="2" />
<text  x="511.24" y="463.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned int&gt;::__atomic_base (4,000,000 samples, 0.02%)</title><rect x="1147.7" y="261" width="0.2" height="15.0" fill="rgb(209,216,3)" rx="2" ry="2" />
<text  x="1150.73" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (44,000,000 samples, 0.19%)</title><rect x="327.1" y="437" width="2.2" height="15.0" fill="rgb(253,39,36)" rx="2" ry="2" />
<text  x="330.14" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="1091.0" y="389" width="0.2" height="15.0" fill="rgb(243,129,46)" rx="2" ry="2" />
<text  x="1094.03" y="399.5" ></text>
</g>
<g >
<title>track_pfn_insert (8,000,000 samples, 0.03%)</title><rect x="669.1" y="101" width="0.4" height="15.0" fill="rgb(219,32,24)" rx="2" ry="2" />
<text  x="672.12" y="111.5" ></text>
</g>
<g >
<title>vfs_rmdir (4,000,000 samples, 0.02%)</title><rect x="26.0" y="501" width="0.2" height="15.0" fill="rgb(226,10,28)" rx="2" ry="2" />
<text  x="29.03" y="511.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (4,000,000 samples, 0.02%)</title><rect x="616.0" y="325" width="0.2" height="15.0" fill="rgb(226,35,1)" rx="2" ry="2" />
<text  x="619.03" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4,000,000 samples, 0.02%)</title><rect x="1171.6" y="453" width="0.2" height="15.0" fill="rgb(222,129,35)" rx="2" ry="2" />
<text  x="1174.57" y="463.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Valid (4,000,000 samples, 0.02%)</title><rect x="686.7" y="357" width="0.2" height="15.0" fill="rgb(248,5,15)" rx="2" ry="2" />
<text  x="689.75" y="367.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (20,000,000 samples, 0.08%)</title><rect x="881.9" y="293" width="1.0" height="15.0" fill="rgb(214,156,31)" rx="2" ry="2" />
<text  x="884.88" y="303.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::WriteBlock (364,000,000 samples, 1.54%)</title><rect x="750.3" y="389" width="18.2" height="15.0" fill="rgb(248,88,34)" rx="2" ry="2" />
<text  x="753.25" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::empty (4,000,000 samples, 0.02%)</title><rect x="1093.2" y="405" width="0.2" height="15.0" fill="rgb(217,105,35)" rx="2" ry="2" />
<text  x="1096.24" y="415.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (16,000,000 samples, 0.07%)</title><rect x="447.1" y="421" width="0.8" height="15.0" fill="rgb(238,24,22)" rx="2" ry="2" />
<text  x="450.14" y="431.5" ></text>
</g>
<g >
<title>__do_sys_madvise (4,000,000 samples, 0.02%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(219,75,46)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,000,000 samples, 0.02%)</title><rect x="1146.1" y="341" width="0.2" height="15.0" fill="rgb(220,153,40)" rx="2" ry="2" />
<text  x="1149.13" y="351.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed64 (20,000,000 samples, 0.08%)</title><rect x="904.1" y="421" width="1.0" height="15.0" fill="rgb(215,97,15)" rx="2" ry="2" />
<text  x="907.12" y="431.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::CompactMemTable (220,000,000 samples, 0.93%)</title><rect x="691.8" y="421" width="11.0" height="15.0" fill="rgb(217,222,49)" rx="2" ry="2" />
<text  x="694.76" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::FindShortestSeparator (4,000,000 samples, 0.02%)</title><rect x="612.0" y="357" width="0.2" height="15.0" fill="rgb(243,4,45)" rx="2" ry="2" />
<text  x="615.02" y="367.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::Next (68,000,000 samples, 0.29%)</title><rect x="671.3" y="325" width="3.4" height="15.0" fill="rgb(234,111,29)" rx="2" ry="2" />
<text  x="674.32" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_destroy (4,000,000 samples, 0.02%)</title><rect x="944.2" y="389" width="0.2" height="15.0" fill="rgb(212,47,15)" rx="2" ry="2" />
<text  x="947.18" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (56,000,000 samples, 0.24%)</title><rect x="847.8" y="293" width="2.8" height="15.0" fill="rgb(218,214,2)" rx="2" ry="2" />
<text  x="850.82" y="303.5" ></text>
</g>
<g >
<title>aa_file_perm (8,000,000 samples, 0.03%)</title><rect x="458.2" y="485" width="0.4" height="15.0" fill="rgb(250,122,10)" rx="2" ry="2" />
<text  x="461.16" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (8,000,000 samples, 0.03%)</title><rect x="965.4" y="357" width="0.4" height="15.0" fill="rgb(253,67,32)" rx="2" ry="2" />
<text  x="968.42" y="367.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::SeekToFirst (8,000,000 samples, 0.03%)</title><rect x="669.7" y="325" width="0.4" height="15.0" fill="rgb(241,142,16)" rx="2" ry="2" />
<text  x="672.72" y="335.5" ></text>
</g>
<g >
<title>leveldb::Table::BlockReader (16,000,000 samples, 0.07%)</title><rect x="661.7" y="341" width="0.8" height="15.0" fill="rgb(234,95,54)" rx="2" ry="2" />
<text  x="664.70" y="351.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (36,000,000 samples, 0.15%)</title><rect x="735.8" y="389" width="1.8" height="15.0" fill="rgb(211,140,10)" rx="2" ry="2" />
<text  x="738.83" y="399.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::key (8,000,000 samples, 0.03%)</title><rect x="680.1" y="341" width="0.4" height="15.0" fill="rgb(206,93,54)" rx="2" ry="2" />
<text  x="683.14" y="351.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (456,000,000 samples, 1.94%)</title><rect x="414.5" y="453" width="22.8" height="15.0" fill="rgb(216,58,45)" rx="2" ry="2" />
<text  x="417.49" y="463.5" >e..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (20,000,000 samples, 0.08%)</title><rect x="526.1" y="517" width="1.0" height="15.0" fill="rgb(251,195,34)" rx="2" ry="2" />
<text  x="529.07" y="527.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (84,000,000 samples, 0.36%)</title><rect x="1056.4" y="277" width="4.2" height="15.0" fill="rgb(224,36,54)" rx="2" ry="2" />
<text  x="1059.37" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,000,000 samples, 0.03%)</title><rect x="1177.2" y="661" width="0.4" height="15.0" fill="rgb(240,175,25)" rx="2" ry="2" />
<text  x="1180.18" y="671.5" ></text>
</g>
<g >
<title>_pthread_cleanup_pop (8,000,000 samples, 0.03%)</title><rect x="531.3" y="645" width="0.4" height="15.0" fill="rgb(215,209,2)" rx="2" ry="2" />
<text  x="534.28" y="655.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::Run (8,000,000 samples, 0.03%)</title><rect x="25.8" y="613" width="0.4" height="15.0" fill="rgb(250,143,24)" rx="2" ry="2" />
<text  x="28.83" y="623.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Writer::Writer (4,000,000 samples, 0.02%)</title><rect x="997.9" y="437" width="0.2" height="15.0" fill="rgb(207,100,39)" rx="2" ry="2" />
<text  x="1000.87" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="988.3" y="453" width="0.4" height="15.0" fill="rgb(239,12,35)" rx="2" ry="2" />
<text  x="991.26" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (8,000,000 samples, 0.03%)</title><rect x="954.8" y="405" width="0.4" height="15.0" fill="rgb(222,105,12)" rx="2" ry="2" />
<text  x="957.80" y="415.5" ></text>
</g>
<g >
<title>iput (4,000,000 samples, 0.02%)</title><rect x="25.6" y="501" width="0.2" height="15.0" fill="rgb(237,132,0)" rx="2" ry="2" />
<text  x="28.63" y="511.5" ></text>
</g>
<g >
<title>free_unref_page_list (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="469" width="0.2" height="15.0" fill="rgb(226,81,28)" rx="2" ry="2" />
<text  x="1183.58" y="479.5" ></text>
</g>
<g >
<title>submit_bio (412,000,000 samples, 1.75%)</title><rect x="363.8" y="405" width="20.6" height="15.0" fill="rgb(242,13,52)" rx="2" ry="2" />
<text  x="366.80" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (4,000,000 samples, 0.02%)</title><rect x="1154.7" y="389" width="0.2" height="15.0" fill="rgb(234,124,24)" rx="2" ry="2" />
<text  x="1157.74" y="399.5" ></text>
</g>
<g >
<title>__gthread_active_p (4,000,000 samples, 0.02%)</title><rect x="1157.1" y="373" width="0.2" height="15.0" fill="rgb(226,104,52)" rx="2" ry="2" />
<text  x="1160.14" y="383.5" ></text>
</g>
<g >
<title>ext4_delete_entry (4,000,000 samples, 0.02%)</title><rect x="26.0" y="469" width="0.2" height="15.0" fill="rgb(215,129,32)" rx="2" ry="2" />
<text  x="29.03" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (12,000,000 samples, 0.05%)</title><rect x="1139.1" y="373" width="0.6" height="15.0" fill="rgb(220,38,34)" rx="2" ry="2" />
<text  x="1142.11" y="383.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::~_Result (4,000,000 samples, 0.02%)</title><rect x="1162.6" y="277" width="0.2" height="15.0" fill="rgb(244,52,28)" rx="2" ry="2" />
<text  x="1165.55" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (152,000,000 samples, 0.65%)</title><rect x="858.6" y="277" width="7.7" height="15.0" fill="rgb(251,54,44)" rx="2" ry="2" />
<text  x="861.64" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (8,000,000 samples, 0.03%)</title><rect x="962.4" y="437" width="0.4" height="15.0" fill="rgb(207,140,23)" rx="2" ry="2" />
<text  x="965.41" y="447.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Extend (300,000,000 samples, 1.27%)</title><rect x="617.2" y="309" width="15.1" height="15.0" fill="rgb(214,137,24)" rx="2" ry="2" />
<text  x="620.23" y="319.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Add (1,228,000,000 samples, 5.21%)</title><rect x="573.8" y="389" width="61.5" height="15.0" fill="rgb(254,176,0)" rx="2" ry="2" />
<text  x="576.76" y="399.5" >leveld..</text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::KeyIsAfterNode (1,064,000,000 samples, 4.52%)</title><rect x="1018.3" y="341" width="53.3" height="15.0" fill="rgb(226,171,28)" rx="2" ry="2" />
<text  x="1021.31" y="351.5" >level..</text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (8,000,000 samples, 0.03%)</title><rect x="798.7" y="325" width="0.4" height="15.0" fill="rgb(236,168,39)" rx="2" ry="2" />
<text  x="801.74" y="335.5" ></text>
</g>
<g >
<title>[unknown] (4,000,000 samples, 0.02%)</title><rect x="10.0" y="533" width="0.2" height="15.0" fill="rgb(246,215,53)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::CompactMemTable (1,396,000,000 samples, 5.93%)</title><rect x="565.7" y="437" width="70.0" height="15.0" fill="rgb(216,91,44)" rx="2" ry="2" />
<text  x="568.74" y="447.5" >leveldb..</text>
</g>
<g >
<title>submit_bio_wait_endio (164,000,000 samples, 0.70%)</title><rect x="365.8" y="341" width="8.2" height="15.0" fill="rgb(224,96,39)" rx="2" ry="2" />
<text  x="368.80" y="351.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (16,000,000 samples, 0.07%)</title><rect x="1166.2" y="453" width="0.8" height="15.0" fill="rgb(251,38,38)" rx="2" ry="2" />
<text  x="1169.16" y="463.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::FlushBuffer (28,000,000 samples, 0.12%)</title><rect x="1100.0" y="389" width="1.4" height="15.0" fill="rgb(243,41,3)" rx="2" ry="2" />
<text  x="1103.05" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (52,000,000 samples, 0.22%)</title><rect x="524.7" y="533" width="2.6" height="15.0" fill="rgb(246,183,35)" rx="2" ry="2" />
<text  x="527.67" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="566.7" y="357" width="0.2" height="15.0" fill="rgb(232,199,31)" rx="2" ry="2" />
<text  x="569.74" y="367.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::~_Reset (32,000,000 samples, 0.14%)</title><rect x="1138.3" y="437" width="1.6" height="15.0" fill="rgb(209,51,54)" rx="2" ry="2" />
<text  x="1141.31" y="447.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (4,000,000 samples, 0.02%)</title><rect x="783.1" y="261" width="0.2" height="15.0" fill="rgb(251,124,11)" rx="2" ry="2" />
<text  x="786.11" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="516.5" y="437" width="0.2" height="15.0" fill="rgb(222,125,38)" rx="2" ry="2" />
<text  x="519.46" y="447.5" ></text>
</g>
<g >
<title>ext4_superblock_csum_set (24,000,000 samples, 0.10%)</title><rect x="386.4" y="437" width="1.2" height="15.0" fill="rgb(224,197,40)" rx="2" ry="2" />
<text  x="389.44" y="447.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (4,000,000 samples, 0.02%)</title><rect x="25.4" y="421" width="0.2" height="15.0" fill="rgb(228,15,10)" rx="2" ry="2" />
<text  x="28.43" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt;::_M_get_map_allocator (4,000,000 samples, 0.02%)</title><rect x="26.2" y="373" width="0.2" height="15.0" fill="rgb(250,150,31)" rx="2" ry="2" />
<text  x="29.23" y="383.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (4,000,000 samples, 0.02%)</title><rect x="583.0" y="357" width="0.2" height="15.0" fill="rgb(230,176,1)" rx="2" ry="2" />
<text  x="585.97" y="367.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (4,000,000 samples, 0.02%)</title><rect x="25.4" y="469" width="0.2" height="15.0" fill="rgb(218,118,3)" rx="2" ry="2" />
<text  x="28.43" y="479.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (32,000,000 samples, 0.14%)</title><rect x="351.6" y="357" width="1.6" height="15.0" fill="rgb(254,109,5)" rx="2" ry="2" />
<text  x="354.58" y="367.5" ></text>
</g>
<g >
<title>pthread_cond_destroy@@GLIBC_2.3.2 (16,000,000 samples, 0.07%)</title><rect x="784.5" y="421" width="0.8" height="15.0" fill="rgb(241,147,6)" rx="2" ry="2" />
<text  x="787.51" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::ShardedLRUCache::HashSlice (4,000,000 samples, 0.02%)</title><rect x="665.5" y="277" width="0.2" height="15.0" fill="rgb(233,44,29)" rx="2" ry="2" />
<text  x="668.51" y="287.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (4,000,000 samples, 0.02%)</title><rect x="891.3" y="341" width="0.2" height="15.0" fill="rgb(220,176,25)" rx="2" ry="2" />
<text  x="894.29" y="351.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (4,000,000 samples, 0.02%)</title><rect x="615.0" y="373" width="0.2" height="15.0" fill="rgb(225,199,22)" rx="2" ry="2" />
<text  x="618.03" y="383.5" ></text>
</g>
<g >
<title>ext4_es_insert_extent (16,000,000 samples, 0.07%)</title><rect x="346.0" y="453" width="0.8" height="15.0" fill="rgb(216,71,31)" rx="2" ry="2" />
<text  x="348.97" y="463.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (8,000,000 samples, 0.03%)</title><rect x="915.3" y="405" width="0.4" height="15.0" fill="rgb(220,205,45)" rx="2" ry="2" />
<text  x="918.33" y="415.5" ></text>
</g>
<g >
<title>pthread_once@plt (4,000,000 samples, 0.02%)</title><rect x="942.0" y="389" width="0.2" height="15.0" fill="rgb(252,142,20)" rx="2" ry="2" />
<text  x="944.98" y="399.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (52,000,000 samples, 0.22%)</title><rect x="647.5" y="373" width="2.6" height="15.0" fill="rgb(253,80,46)" rx="2" ry="2" />
<text  x="650.48" y="383.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::WriteWrapper (3,340,000,000 samples, 14.18%)</title><rect x="777.9" y="453" width="167.3" height="15.0" fill="rgb(238,41,49)" rx="2" ry="2" />
<text  x="780.90" y="463.5" >leveldb::DBImpl::Writ..</text>
</g>
<g >
<title>rb_next (4,000,000 samples, 0.02%)</title><rect x="346.0" y="421" width="0.2" height="15.0" fill="rgb(216,181,48)" rx="2" ry="2" />
<text  x="348.97" y="431.5" ></text>
</g>
<g >
<title>ext4_find_entry (4,000,000 samples, 0.02%)</title><rect x="773.5" y="309" width="0.2" height="15.0" fill="rgb(243,210,2)" rx="2" ry="2" />
<text  x="776.49" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (28,000,000 samples, 0.12%)</title><rect x="504.8" y="437" width="1.4" height="15.0" fill="rgb(210,66,29)" rx="2" ry="2" />
<text  x="507.84" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,000,000 samples, 0.03%)</title><rect x="1142.7" y="373" width="0.4" height="15.0" fill="rgb(238,157,41)" rx="2" ry="2" />
<text  x="1145.72" y="383.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::status (4,000,000 samples, 0.02%)</title><rect x="684.1" y="421" width="0.2" height="15.0" fill="rgb(209,179,38)" rx="2" ry="2" />
<text  x="687.14" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="744.6" y="389" width="0.4" height="15.0" fill="rgb(216,211,33)" rx="2" ry="2" />
<text  x="747.65" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="521.9" y="453" width="0.2" height="15.0" fill="rgb(225,24,13)" rx="2" ry="2" />
<text  x="524.87" y="463.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (8,000,000 samples, 0.03%)</title><rect x="353.6" y="357" width="0.4" height="15.0" fill="rgb(246,98,39)" rx="2" ry="2" />
<text  x="356.58" y="367.5" ></text>
</g>
<g >
<title>memcpy@plt (8,000,000 samples, 0.03%)</title><rect x="983.0" y="453" width="0.4" height="15.0" fill="rgb(219,208,49)" rx="2" ry="2" />
<text  x="986.05" y="463.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Count (4,000,000 samples, 0.02%)</title><rect x="902.3" y="421" width="0.2" height="15.0" fill="rgb(243,106,40)" rx="2" ry="2" />
<text  x="905.31" y="431.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (12,000,000 samples, 0.05%)</title><rect x="701.2" y="261" width="0.6" height="15.0" fill="rgb(235,46,30)" rx="2" ry="2" />
<text  x="704.17" y="271.5" ></text>
</g>
<g >
<title>crc_15 (4,000,000 samples, 0.02%)</title><rect x="348.4" y="373" width="0.2" height="15.0" fill="rgb(205,111,11)" rx="2" ry="2" />
<text  x="351.37" y="383.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (12,000,000 samples, 0.05%)</title><rect x="389.0" y="405" width="0.6" height="15.0" fill="rgb(228,27,19)" rx="2" ry="2" />
<text  x="392.04" y="415.5" ></text>
</g>
<g >
<title>operator new[] (4,000,000 samples, 0.02%)</title><rect x="960.8" y="325" width="0.2" height="15.0" fill="rgb(210,12,14)" rx="2" ry="2" />
<text  x="963.81" y="335.5" ></text>
</g>
<g >
<title>leveldb::Status::OK (4,000,000 samples, 0.02%)</title><rect x="615.2" y="309" width="0.2" height="15.0" fill="rgb(209,165,54)" rx="2" ry="2" />
<text  x="618.23" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (32,000,000 samples, 0.14%)</title><rect x="512.7" y="485" width="1.6" height="15.0" fill="rgb(228,133,45)" rx="2" ry="2" />
<text  x="515.65" y="495.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::ok (4,000,000 samples, 0.02%)</title><rect x="701.8" y="357" width="0.2" height="15.0" fill="rgb(207,37,12)" rx="2" ry="2" />
<text  x="704.77" y="367.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (8,000,000 samples, 0.03%)</title><rect x="352.8" y="309" width="0.4" height="15.0" fill="rgb(253,37,23)" rx="2" ry="2" />
<text  x="355.78" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (4,000,000 samples, 0.02%)</title><rect x="1129.1" y="421" width="0.2" height="15.0" fill="rgb(248,183,0)" rx="2" ry="2" />
<text  x="1132.10" y="431.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (124,000,000 samples, 0.53%)</title><rect x="1116.7" y="389" width="6.2" height="15.0" fill="rgb(221,9,29)" rx="2" ry="2" />
<text  x="1119.68" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="511.7" y="437" width="0.2" height="15.0" fill="rgb(219,89,25)" rx="2" ry="2" />
<text  x="514.65" y="447.5" ></text>
</g>
<g >
<title>crc_128 (4,000,000 samples, 0.02%)</title><rect x="358.2" y="373" width="0.2" height="15.0" fill="rgb(237,65,37)" rx="2" ry="2" />
<text  x="361.19" y="383.5" ></text>
</g>
<g >
<title>unmap_single_vma (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="533" width="0.2" height="15.0" fill="rgb(216,125,31)" rx="2" ry="2" />
<text  x="1183.98" y="543.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::Next (8,000,000 samples, 0.03%)</title><rect x="663.5" y="373" width="0.4" height="15.0" fill="rgb(215,171,3)" rx="2" ry="2" />
<text  x="666.51" y="383.5" ></text>
</g>
<g >
<title>dax_iomap_rw (8,060,000,000 samples, 34.21%)</title><rect x="46.1" y="517" width="403.6" height="15.0" fill="rgb(231,143,36)" rx="2" ry="2" />
<text  x="49.06" y="527.5" >dax_iomap_rw</text>
</g>
<g >
<title>leveldb::EncodeVarint32 (8,000,000 samples, 0.03%)</title><rect x="981.2" y="421" width="0.4" height="15.0" fill="rgb(246,194,54)" rx="2" ry="2" />
<text  x="984.25" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (164,000,000 samples, 0.70%)</title><rect x="477.4" y="629" width="8.2" height="15.0" fill="rgb(225,48,29)" rx="2" ry="2" />
<text  x="480.39" y="639.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed32 (8,000,000 samples, 0.03%)</title><rect x="1101.7" y="405" width="0.4" height="15.0" fill="rgb(248,116,34)" rx="2" ry="2" />
<text  x="1104.65" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt;, std::allocator&lt;std::queue&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::deque&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem, std::allocator&lt;leveldb::(anonymous namespace)::PosixEnv::BackgroundWorkItem&gt; &gt; &gt; &gt; &gt;::_M_default_append (4,000,000 samples, 0.02%)</title><rect x="26.2" y="533" width="0.2" height="15.0" fill="rgb(226,55,23)" rx="2" ry="2" />
<text  x="29.23" y="543.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (4,000,000 samples, 0.02%)</title><rect x="457.2" y="533" width="0.2" height="15.0" fill="rgb(220,104,29)" rx="2" ry="2" />
<text  x="460.16" y="543.5" ></text>
</g>
<g >
<title>kernel_fpu_end (8,000,000 samples, 0.03%)</title><rect x="386.8" y="389" width="0.4" height="15.0" fill="rgb(207,34,19)" rx="2" ry="2" />
<text  x="389.84" y="399.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (4,000,000 samples, 0.02%)</title><rect x="357.0" y="389" width="0.2" height="15.0" fill="rgb(216,87,22)" rx="2" ry="2" />
<text  x="359.99" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (12,000,000 samples, 0.05%)</title><rect x="1090.4" y="373" width="0.6" height="15.0" fill="rgb(233,39,5)" rx="2" ry="2" />
<text  x="1093.43" y="383.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator== (4,000,000 samples, 0.02%)</title><rect x="952.2" y="437" width="0.2" height="15.0" fill="rgb(225,41,36)" rx="2" ry="2" />
<text  x="955.20" y="447.5" ></text>
</g>
<g >
<title>leveldb::test::RandomString (8,000,000 samples, 0.03%)</title><rect x="777.1" y="437" width="0.4" height="15.0" fill="rgb(245,91,1)" rx="2" ry="2" />
<text  x="780.10" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (8,000,000 samples, 0.03%)</title><rect x="526.7" y="469" width="0.4" height="15.0" fill="rgb(210,174,12)" rx="2" ry="2" />
<text  x="529.68" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (20,000,000 samples, 0.08%)</title><rect x="955.4" y="373" width="1.0" height="15.0" fill="rgb(251,75,38)" rx="2" ry="2" />
<text  x="958.40" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (8,000,000 samples, 0.03%)</title><rect x="610.8" y="341" width="0.4" height="15.0" fill="rgb(250,155,50)" rx="2" ry="2" />
<text  x="613.82" y="351.5" ></text>
</g>
<g >
<title>std::mutex::lock (20,000,000 samples, 0.08%)</title><rect x="932.4" y="421" width="1.0" height="15.0" fill="rgb(251,145,41)" rx="2" ry="2" />
<text  x="935.36" y="431.5" ></text>
</g>
<g >
<title>__do_page_fault (4,000,000 samples, 0.02%)</title><rect x="472.0" y="597" width="0.2" height="15.0" fill="rgb(229,191,44)" rx="2" ry="2" />
<text  x="474.98" y="607.5" ></text>
</g>
<g >
<title>__vfs_write (4,000,000 samples, 0.02%)</title><rect x="25.4" y="549" width="0.2" height="15.0" fill="rgb(228,70,17)" rx="2" ry="2" />
<text  x="28.43" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4,000,000 samples, 0.02%)</title><rect x="1142.3" y="389" width="0.2" height="15.0" fill="rgb(247,82,8)" rx="2" ry="2" />
<text  x="1145.32" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::~new_allocator (4,000,000 samples, 0.02%)</title><rect x="966.0" y="293" width="0.2" height="15.0" fill="rgb(252,152,28)" rx="2" ry="2" />
<text  x="969.02" y="303.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::NoBarrier_SetNext (16,000,000 samples, 0.07%)</title><rect x="1081.0" y="357" width="0.8" height="15.0" fill="rgb(210,164,38)" rx="2" ry="2" />
<text  x="1084.02" y="367.5" ></text>
</g>
<g >
<title>__GI___unlink (4,000,000 samples, 0.02%)</title><rect x="25.6" y="581" width="0.2" height="15.0" fill="rgb(212,215,29)" rx="2" ry="2" />
<text  x="28.63" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (196,000,000 samples, 0.83%)</title><rect x="1154.3" y="405" width="9.9" height="15.0" fill="rgb(243,42,6)" rx="2" ry="2" />
<text  x="1157.34" y="415.5" ></text>
</g>
<g >
<title>fsnotify (8,000,000 samples, 0.03%)</title><rect x="38.4" y="565" width="0.4" height="15.0" fill="rgb(228,166,14)" rx="2" ry="2" />
<text  x="41.45" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::emplace_back&lt;leveldb::DBImpl::Writer*&gt; (28,000,000 samples, 0.12%)</title><rect x="937.8" y="421" width="1.4" height="15.0" fill="rgb(227,147,11)" rx="2" ry="2" />
<text  x="940.77" y="431.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (76,000,000 samples, 0.32%)</title><rect x="897.1" y="405" width="3.8" height="15.0" fill="rgb(246,55,17)" rx="2" ry="2" />
<text  x="900.10" y="415.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (896,000,000 samples, 3.80%)</title><rect x="485.8" y="613" width="44.9" height="15.0" fill="rgb(226,227,42)" rx="2" ry="2" />
<text  x="488.81" y="623.5" >std:..</text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (20,000,000 samples, 0.08%)</title><rect x="955.4" y="389" width="1.0" height="15.0" fill="rgb(222,23,5)" rx="2" ry="2" />
<text  x="958.40" y="399.5" ></text>
</g>
<g >
<title>__ext4_new_inode (4,000,000 samples, 0.02%)</title><rect x="783.1" y="293" width="0.2" height="15.0" fill="rgb(242,93,43)" rx="2" ry="2" />
<text  x="786.11" y="303.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (20,000,000 samples, 0.08%)</title><rect x="1087.2" y="373" width="1.0" height="15.0" fill="rgb(235,166,41)" rx="2" ry="2" />
<text  x="1090.23" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="798.9" y="309" width="0.2" height="15.0" fill="rgb(206,208,22)" rx="2" ry="2" />
<text  x="801.94" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (12,156,000,000 samples, 51.60%)</title><rect x="565.1" y="533" width="608.9" height="15.0" fill="rgb(248,179,13)" rx="2" ry="2" />
<text  x="568.14" y="543.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::__addressof&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; const&gt; (8,000,000 samples, 0.03%)</title><rect x="494.0" y="485" width="0.4" height="15.0" fill="rgb(224,210,28)" rx="2" ry="2" />
<text  x="497.02" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (196,000,000 samples, 0.83%)</title><rect x="1154.3" y="437" width="9.9" height="15.0" fill="rgb(225,183,26)" rx="2" ry="2" />
<text  x="1157.34" y="447.5" ></text>
</g>
<g >
<title>mark_page_lazyfree (4,000,000 samples, 0.02%)</title><rect x="10.2" y="389" width="0.2" height="15.0" fill="rgb(246,108,48)" rx="2" ry="2" />
<text  x="13.20" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (4,000,000 samples, 0.02%)</title><rect x="506.6" y="501" width="0.2" height="15.0" fill="rgb(250,193,49)" rx="2" ry="2" />
<text  x="509.64" y="511.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::~_Result (8,000,000 samples, 0.03%)</title><rect x="969.8" y="245" width="0.4" height="15.0" fill="rgb(240,182,13)" rx="2" ry="2" />
<text  x="972.83" y="255.5" ></text>
</g>
<g >
<title>__pthread_once_slow (4,000,000 samples, 0.02%)</title><rect x="941.8" y="389" width="0.2" height="15.0" fill="rgb(229,19,1)" rx="2" ry="2" />
<text  x="944.78" y="399.5" ></text>
</g>
<g >
<title>operator new (4,000,000 samples, 0.02%)</title><rect x="496.6" y="469" width="0.2" height="15.0" fill="rgb(209,205,34)" rx="2" ry="2" />
<text  x="499.62" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_manager (12,000,000 samples, 0.05%)</title><rect x="944.4" y="389" width="0.6" height="15.0" fill="rgb(215,175,41)" rx="2" ry="2" />
<text  x="947.38" y="399.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::PrintEnvironment (4,000,000 samples, 0.02%)</title><rect x="25.8" y="581" width="0.2" height="15.0" fill="rgb(233,11,54)" rx="2" ry="2" />
<text  x="28.83" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="629" width="0.2" height="15.0" fill="rgb(214,183,28)" rx="2" ry="2" />
<text  x="1183.98" y="639.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::PrintHeader (4,000,000 samples, 0.02%)</title><rect x="25.8" y="597" width="0.2" height="15.0" fill="rgb(240,54,11)" rx="2" ry="2" />
<text  x="28.83" y="607.5" ></text>
</g>
<g >
<title>__fget (36,000,000 samples, 0.15%)</title><rect x="33.6" y="533" width="1.8" height="15.0" fill="rgb(250,3,25)" rx="2" ry="2" />
<text  x="36.64" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (28,000,000 samples, 0.12%)</title><rect x="950.6" y="421" width="1.4" height="15.0" fill="rgb(235,9,27)" rx="2" ry="2" />
<text  x="953.59" y="431.5" ></text>
</g>
<g >
<title>ext4_truncate (4,000,000 samples, 0.02%)</title><rect x="25.6" y="453" width="0.2" height="15.0" fill="rgb(250,60,10)" rx="2" ry="2" />
<text  x="28.63" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::~new_allocator (4,000,000 samples, 0.02%)</title><rect x="1146.7" y="325" width="0.2" height="15.0" fill="rgb(244,66,6)" rx="2" ry="2" />
<text  x="1149.73" y="335.5" ></text>
</g>
<g >
<title>walk_system_ram_range (4,000,000 samples, 0.02%)</title><rect x="669.3" y="53" width="0.2" height="15.0" fill="rgb(242,103,44)" rx="2" ry="2" />
<text  x="672.32" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_addr (4,000,000 samples, 0.02%)</title><rect x="496.0" y="469" width="0.2" height="15.0" fill="rgb(246,112,37)" rx="2" ry="2" />
<text  x="499.02" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (16,000,000 samples, 0.07%)</title><rect x="955.6" y="357" width="0.8" height="15.0" fill="rgb(211,174,15)" rx="2" ry="2" />
<text  x="958.60" y="367.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::iter (4,000,000 samples, 0.02%)</title><rect x="670.1" y="325" width="0.2" height="15.0" fill="rgb(247,171,14)" rx="2" ry="2" />
<text  x="673.12" y="335.5" ></text>
</g>
<g >
<title>__madvise (4,000,000 samples, 0.02%)</title><rect x="10.0" y="517" width="0.2" height="15.0" fill="rgb(230,101,15)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>__es_insert_extent (4,000,000 samples, 0.02%)</title><rect x="346.0" y="437" width="0.2" height="15.0" fill="rgb(221,97,31)" rx="2" ry="2" />
<text  x="348.97" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4,000,000 samples, 0.02%)</title><rect x="716.0" y="389" width="0.2" height="15.0" fill="rgb(208,55,12)" rx="2" ry="2" />
<text  x="719.00" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::~_State_baseV2 (72,000,000 samples, 0.31%)</title><rect x="1159.9" y="325" width="3.7" height="15.0" fill="rgb(206,87,20)" rx="2" ry="2" />
<text  x="1162.95" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4,000,000 samples, 0.02%)</title><rect x="634.5" y="373" width="0.2" height="15.0" fill="rgb(205,59,29)" rx="2" ry="2" />
<text  x="637.46" y="383.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (268,000,000 samples, 1.14%)</title><rect x="347.8" y="453" width="13.4" height="15.0" fill="rgb(219,68,32)" rx="2" ry="2" />
<text  x="350.77" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_State_baseV2*&gt; (4,000,000 samples, 0.02%)</title><rect x="527.5" y="549" width="0.2" height="15.0" fill="rgb(235,189,7)" rx="2" ry="2" />
<text  x="530.48" y="559.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (16,000,000 samples, 0.07%)</title><rect x="386.4" y="405" width="0.8" height="15.0" fill="rgb(241,107,7)" rx="2" ry="2" />
<text  x="389.44" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_retrieved_flag (4,000,000 samples, 0.02%)</title><rect x="1140.9" y="405" width="0.2" height="15.0" fill="rgb(218,211,8)" rx="2" ry="2" />
<text  x="1143.92" y="415.5" ></text>
</g>
<g >
<title>ext4_read_block_bitmap_nowait (12,000,000 samples, 0.05%)</title><rect x="359.8" y="389" width="0.6" height="15.0" fill="rgb(212,156,12)" rx="2" ry="2" />
<text  x="362.79" y="399.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (8,000,000 samples, 0.03%)</title><rect x="739.8" y="405" width="0.4" height="15.0" fill="rgb(227,191,33)" rx="2" ry="2" />
<text  x="742.84" y="415.5" ></text>
</g>
<g >
<title>madvise_free_page_range.isra.16 (4,000,000 samples, 0.02%)</title><rect x="10.2" y="437" width="0.2" height="15.0" fill="rgb(230,97,47)" rx="2" ry="2" />
<text  x="13.20" y="447.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Writer::~Writer (16,000,000 samples, 0.07%)</title><rect x="945.4" y="453" width="0.8" height="15.0" fill="rgb(212,66,28)" rx="2" ry="2" />
<text  x="948.39" y="463.5" ></text>
</g>
<g >
<title>ext4_find_extent (8,000,000 samples, 0.03%)</title><rect x="350.4" y="437" width="0.4" height="15.0" fill="rgb(243,142,18)" rx="2" ry="2" />
<text  x="353.38" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,000,000 samples, 0.03%)</title><rect x="773.3" y="405" width="0.4" height="15.0" fill="rgb(250,126,54)" rx="2" ry="2" />
<text  x="776.29" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="612.2" y="373" width="0.4" height="15.0" fill="rgb(228,59,14)" rx="2" ry="2" />
<text  x="615.22" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,000,000 samples, 0.03%)</title><rect x="773.3" y="389" width="0.4" height="15.0" fill="rgb(222,100,27)" rx="2" ry="2" />
<text  x="776.29" y="399.5" ></text>
</g>
<g >
<title>timespec64_trunc (4,000,000 samples, 0.02%)</title><rect x="453.0" y="501" width="0.2" height="15.0" fill="rgb(224,21,35)" rx="2" ry="2" />
<text  x="455.95" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="504.4" y="437" width="0.2" height="15.0" fill="rgb(230,189,31)" rx="2" ry="2" />
<text  x="507.44" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (12,156,000,000 samples, 51.60%)</title><rect x="565.1" y="565" width="608.9" height="15.0" fill="rgb(216,36,41)" rx="2" ry="2" />
<text  x="568.14" y="575.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>dax_delete_mapping_entry (4,000,000 samples, 0.02%)</title><rect x="773.3" y="245" width="0.2" height="15.0" fill="rgb(224,169,22)" rx="2" ry="2" />
<text  x="776.29" y="255.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (16,000,000 samples, 0.07%)</title><rect x="724.2" y="373" width="0.8" height="15.0" fill="rgb(228,11,14)" rx="2" ry="2" />
<text  x="727.21" y="383.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::NumEntries (12,000,000 samples, 0.05%)</title><rect x="771.3" y="421" width="0.6" height="15.0" fill="rgb(222,209,6)" rx="2" ry="2" />
<text  x="774.29" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::max_size (4,000,000 samples, 0.02%)</title><rect x="939.0" y="389" width="0.2" height="15.0" fill="rgb(243,47,13)" rx="2" ry="2" />
<text  x="941.97" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="498.4" y="421" width="0.2" height="15.0" fill="rgb(207,165,26)" rx="2" ry="2" />
<text  x="501.43" y="431.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (8,000,000 samples, 0.03%)</title><rect x="695.8" y="325" width="0.4" height="15.0" fill="rgb(223,46,19)" rx="2" ry="2" />
<text  x="698.76" y="335.5" ></text>
</g>
<g >
<title>_cond_resched (8,000,000 samples, 0.03%)</title><rect x="398.3" y="421" width="0.4" height="15.0" fill="rgb(250,55,52)" rx="2" ry="2" />
<text  x="401.26" y="431.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (4,000,000 samples, 0.02%)</title><rect x="1132.5" y="373" width="0.2" height="15.0" fill="rgb(216,121,28)" rx="2" ry="2" />
<text  x="1135.50" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::operator (4,000,000 samples, 0.02%)</title><rect x="506.8" y="501" width="0.2" height="15.0" fill="rgb(236,4,42)" rx="2" ry="2" />
<text  x="509.84" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (12,156,000,000 samples, 51.60%)</title><rect x="565.1" y="613" width="608.9" height="15.0" fill="rgb(217,65,33)" rx="2" ry="2" />
<text  x="568.14" y="623.5" >[libstdc++.so.6.0.29]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (8,000,000 samples, 0.03%)</title><rect x="1170.2" y="437" width="0.4" height="15.0" fill="rgb(220,83,32)" rx="2" ry="2" />
<text  x="1173.17" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (12,000,000 samples, 0.05%)</title><rect x="1142.5" y="389" width="0.6" height="15.0" fill="rgb(253,139,24)" rx="2" ry="2" />
<text  x="1145.52" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_addr (4,000,000 samples, 0.02%)</title><rect x="1140.1" y="405" width="0.2" height="15.0" fill="rgb(245,19,18)" rx="2" ry="2" />
<text  x="1143.12" y="415.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (4,000,000 samples, 0.02%)</title><rect x="692.8" y="325" width="0.2" height="15.0" fill="rgb(219,69,17)" rx="2" ry="2" />
<text  x="695.76" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (8,000,000 samples, 0.03%)</title><rect x="773.3" y="373" width="0.4" height="15.0" fill="rgb(207,201,45)" rx="2" ry="2" />
<text  x="776.29" y="383.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (8,000,000 samples, 0.03%)</title><rect x="421.9" y="437" width="0.4" height="15.0" fill="rgb(239,180,4)" rx="2" ry="2" />
<text  x="424.90" y="447.5" ></text>
</g>
<g >
<title>pthread_cond_destroy@plt (4,000,000 samples, 0.02%)</title><rect x="785.3" y="421" width="0.2" height="15.0" fill="rgb(213,184,20)" rx="2" ry="2" />
<text  x="788.31" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (8,000,000 samples, 0.03%)</title><rect x="1139.3" y="341" width="0.4" height="15.0" fill="rgb(215,55,23)" rx="2" ry="2" />
<text  x="1142.31" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8,000,000 samples, 0.03%)</title><rect x="698.4" y="325" width="0.4" height="15.0" fill="rgb(243,63,15)" rx="2" ry="2" />
<text  x="701.37" y="335.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (12,000,000 samples, 0.05%)</title><rect x="795.3" y="373" width="0.6" height="15.0" fill="rgb(248,201,25)" rx="2" ry="2" />
<text  x="798.33" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (4,000,000 samples, 0.02%)</title><rect x="1140.7" y="437" width="0.2" height="15.0" fill="rgb(214,204,35)" rx="2" ry="2" />
<text  x="1143.72" y="447.5" ></text>
</g>
<g >
<title>leveldb::MemTable::Add (1,524,000,000 samples, 6.47%)</title><rect x="1009.7" y="389" width="76.3" height="15.0" fill="rgb(209,136,20)" rx="2" ry="2" />
<text  x="1012.69" y="399.5" >leveldb:..</text>
</g>
<g >
<title>__ext4_journal_start_sb (4,000,000 samples, 0.02%)</title><rect x="49.5" y="485" width="0.2" height="15.0" fill="rgb(209,9,49)" rx="2" ry="2" />
<text  x="52.47" y="495.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (4,000,000 samples, 0.02%)</title><rect x="787.3" y="437" width="0.2" height="15.0" fill="rgb(221,39,2)" rx="2" ry="2" />
<text  x="790.32" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="645" width="0.2" height="15.0" fill="rgb(221,115,43)" rx="2" ry="2" />
<text  x="1183.58" y="655.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (12,000,000 samples, 0.05%)</title><rect x="698.2" y="341" width="0.6" height="15.0" fill="rgb(221,28,38)" rx="2" ry="2" />
<text  x="701.17" y="351.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="521.9" y="469" width="0.2" height="15.0" fill="rgb(252,5,31)" rx="2" ry="2" />
<text  x="524.87" y="479.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (8,000,000 samples, 0.03%)</title><rect x="1174.0" y="645" width="0.4" height="15.0" fill="rgb(229,61,25)" rx="2" ry="2" />
<text  x="1176.97" y="655.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (8,000,000 samples, 0.03%)</title><rect x="414.1" y="453" width="0.4" height="15.0" fill="rgb(246,120,27)" rx="2" ry="2" />
<text  x="417.08" y="463.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (8,000,000 samples, 0.03%)</title><rect x="909.9" y="389" width="0.4" height="15.0" fill="rgb(229,216,9)" rx="2" ry="2" />
<text  x="912.93" y="399.5" ></text>
</g>
<g >
<title>do_filp_open (4,000,000 samples, 0.02%)</title><rect x="783.1" y="341" width="0.2" height="15.0" fill="rgb(213,109,3)" rx="2" ry="2" />
<text  x="786.11" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_value (8,000,000 samples, 0.03%)</title><rect x="1139.9" y="437" width="0.4" height="15.0" fill="rgb(253,118,5)" rx="2" ry="2" />
<text  x="1142.92" y="447.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (4,000,000 samples, 0.02%)</title><rect x="351.0" y="373" width="0.2" height="15.0" fill="rgb(241,189,38)" rx="2" ry="2" />
<text  x="353.98" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (8,000,000 samples, 0.03%)</title><rect x="609.8" y="341" width="0.4" height="15.0" fill="rgb(249,159,46)" rx="2" ry="2" />
<text  x="612.82" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4,000,000 samples, 0.02%)</title><rect x="772.1" y="421" width="0.2" height="15.0" fill="rgb(213,80,0)" rx="2" ry="2" />
<text  x="775.09" y="431.5" ></text>
</g>
<g >
<title>std::atomic_flag::_S_init (4,000,000 samples, 0.02%)</title><rect x="1148.1" y="277" width="0.2" height="15.0" fill="rgb(241,176,25)" rx="2" ry="2" />
<text  x="1151.13" y="287.5" ></text>
</g>
<g >
<title>[unknown] (52,000,000 samples, 0.22%)</title><rect x="10.0" y="629" width="2.6" height="15.0" fill="rgb(231,137,47)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>crc_42 (4,000,000 samples, 0.02%)</title><rect x="387.4" y="405" width="0.2" height="15.0" fill="rgb(208,205,12)" rx="2" ry="2" />
<text  x="390.44" y="415.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (8,000,000 samples, 0.03%)</title><rect x="1100.8" y="341" width="0.4" height="15.0" fill="rgb(237,138,4)" rx="2" ry="2" />
<text  x="1103.85" y="351.5" ></text>
</g>
<g >
<title>__find_get_block (4,000,000 samples, 0.02%)</title><rect x="360.2" y="357" width="0.2" height="15.0" fill="rgb(231,110,16)" rx="2" ry="2" />
<text  x="363.19" y="367.5" ></text>
</g>
<g >
<title>bio_add_page (4,000,000 samples, 0.02%)</title><rect x="363.6" y="421" width="0.2" height="15.0" fill="rgb(209,113,46)" rx="2" ry="2" />
<text  x="366.60" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (40,000,000 samples, 0.17%)</title><rect x="510.0" y="485" width="2.1" height="15.0" fill="rgb(242,47,52)" rx="2" ry="2" />
<text  x="513.05" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (16,000,000 samples, 0.07%)</title><rect x="520.1" y="469" width="0.8" height="15.0" fill="rgb(249,67,42)" rx="2" ry="2" />
<text  x="523.06" y="479.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (636,000,000 samples, 2.70%)</title><rect x="851.6" y="309" width="31.9" height="15.0" fill="rgb(249,18,25)" rx="2" ry="2" />
<text  x="854.63" y="319.5" >le..</text>
</g>
<g >
<title>std::atomic_flag::atomic_flag (8,000,000 samples, 0.03%)</title><rect x="959.2" y="293" width="0.4" height="15.0" fill="rgb(228,134,17)" rx="2" ry="2" />
<text  x="962.21" y="303.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (12,156,000,000 samples, 51.60%)</title><rect x="565.1" y="645" width="608.9" height="15.0" fill="rgb(250,152,4)" rx="2" ry="2" />
<text  x="568.14" y="655.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>std::call_once&lt;void  (900,000,000 samples, 3.82%)</title><rect x="485.6" y="629" width="45.1" height="15.0" fill="rgb(219,25,16)" rx="2" ry="2" />
<text  x="488.61" y="639.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (24,000,000 samples, 0.10%)</title><rect x="1188.2" y="661" width="1.2" height="15.0" fill="rgb(221,197,47)" rx="2" ry="2" />
<text  x="1191.20" y="671.5" ></text>
</g>
<g >
<title>ext4_group_desc_csum (8,000,000 samples, 0.03%)</title><rect x="359.2" y="389" width="0.4" height="15.0" fill="rgb(211,116,32)" rx="2" ry="2" />
<text  x="362.19" y="399.5" ></text>
</g>
<g >
<title>leveldb::Random::Uniform (16,000,000 samples, 0.07%)</title><rect x="989.1" y="421" width="0.8" height="15.0" fill="rgb(208,49,51)" rx="2" ry="2" />
<text  x="992.06" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_destroy (32,000,000 samples, 0.14%)</title><rect x="1161.0" y="277" width="1.6" height="15.0" fill="rgb(229,183,31)" rx="2" ry="2" />
<text  x="1163.95" y="287.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::InsertInto (1,824,000,000 samples, 7.74%)</title><rect x="1003.9" y="437" width="91.3" height="15.0" fill="rgb(234,133,14)" rx="2" ry="2" />
<text  x="1006.88" y="447.5" >leveldb::W..</text>
</g>
<g >
<title>leveldb::DecodeFixed32 (4,000,000 samples, 0.02%)</title><rect x="1094.4" y="389" width="0.2" height="15.0" fill="rgb(226,50,6)" rx="2" ry="2" />
<text  x="1097.44" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="1097.4" y="421" width="0.2" height="15.0" fill="rgb(235,71,51)" rx="2" ry="2" />
<text  x="1100.44" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (272,000,000 samples, 1.15%)</title><rect x="589.2" y="357" width="13.6" height="15.0" fill="rgb(243,206,1)" rx="2" ry="2" />
<text  x="592.18" y="367.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (396,000,000 samples, 1.68%)</title><rect x="1050.8" y="309" width="19.8" height="15.0" fill="rgb(245,11,26)" rx="2" ry="2" />
<text  x="1053.76" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4,000,000 samples, 0.02%)</title><rect x="615.4" y="325" width="0.2" height="15.0" fill="rgb(225,3,20)" rx="2" ry="2" />
<text  x="618.43" y="335.5" ></text>
</g>
<g >
<title>ext4_superblock_csum_set (40,000,000 samples, 0.17%)</title><rect x="444.7" y="437" width="2.0" height="15.0" fill="rgb(239,135,23)" rx="2" ry="2" />
<text  x="447.74" y="447.5" ></text>
</g>
<g >
<title>file_update_time (4,000,000 samples, 0.02%)</title><rect x="455.2" y="533" width="0.2" height="15.0" fill="rgb(250,160,37)" rx="2" ry="2" />
<text  x="458.15" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (4,000,000 samples, 0.02%)</title><rect x="353.4" y="325" width="0.2" height="15.0" fill="rgb(243,3,24)" rx="2" ry="2" />
<text  x="356.38" y="335.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="900.9" y="405" width="0.2" height="15.0" fill="rgb(213,175,42)" rx="2" ry="2" />
<text  x="903.91" y="415.5" ></text>
</g>
<g >
<title>std::operator&amp; (20,000,000 samples, 0.08%)</title><rect x="890.3" y="325" width="1.0" height="15.0" fill="rgb(205,106,1)" rx="2" ry="2" />
<text  x="893.29" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,000,000 samples, 0.02%)</title><rect x="980.2" y="373" width="0.2" height="15.0" fill="rgb(240,130,47)" rx="2" ry="2" />
<text  x="983.24" y="383.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (4,000,000 samples, 0.02%)</title><rect x="1001.5" y="437" width="0.2" height="15.0" fill="rgb(234,4,27)" rx="2" ry="2" />
<text  x="1004.48" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4,000,000 samples, 0.02%)</title><rect x="695.6" y="309" width="0.2" height="15.0" fill="rgb(240,73,18)" rx="2" ry="2" />
<text  x="698.56" y="319.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (4,000,000 samples, 0.02%)</title><rect x="1129.9" y="405" width="0.2" height="15.0" fill="rgb(244,159,30)" rx="2" ry="2" />
<text  x="1132.90" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,000,000 samples, 0.02%)</title><rect x="1142.9" y="357" width="0.2" height="15.0" fill="rgb(237,40,19)" rx="2" ry="2" />
<text  x="1145.92" y="367.5" ></text>
</g>
<g >
<title>leveldb::Block::Iter::ParseNextKey (60,000,000 samples, 0.25%)</title><rect x="671.5" y="309" width="3.0" height="15.0" fill="rgb(219,59,46)" rx="2" ry="2" />
<text  x="674.52" y="319.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::store (16,000,000 samples, 0.07%)</title><rect x="892.9" y="341" width="0.8" height="15.0" fill="rgb(219,73,44)" rx="2" ry="2" />
<text  x="895.90" y="351.5" ></text>
</g>
<g >
<title>__kernel_fpu_begin (4,000,000 samples, 0.02%)</title><rect x="445.1" y="373" width="0.2" height="15.0" fill="rgb(252,76,10)" rx="2" ry="2" />
<text  x="448.14" y="383.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (20,000,000 samples, 0.08%)</title><rect x="1104.1" y="405" width="1.0" height="15.0" fill="rgb(217,171,1)" rx="2" ry="2" />
<text  x="1107.05" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.02%)</title><rect x="949.8" y="357" width="0.2" height="15.0" fill="rgb(245,49,1)" rx="2" ry="2" />
<text  x="952.79" y="367.5" ></text>
</g>
<g >
<title>__lru_cache_add (4,000,000 samples, 0.02%)</title><rect x="1174.8" y="549" width="0.2" height="15.0" fill="rgb(241,93,27)" rx="2" ry="2" />
<text  x="1177.77" y="559.5" ></text>
</g>
<g >
<title>leveldb::test::CompressibleString (8,000,000 samples, 0.03%)</title><rect x="777.1" y="453" width="0.4" height="15.0" fill="rgb(243,197,39)" rx="2" ry="2" />
<text  x="780.10" y="463.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (20,000,000 samples, 0.08%)</title><rect x="649.1" y="357" width="1.0" height="15.0" fill="rgb(221,16,21)" rx="2" ry="2" />
<text  x="652.08" y="367.5" ></text>
</g>
<g >
<title>dax_read_unlock (5,008,000,000 samples, 21.26%)</title><rect x="66.3" y="469" width="250.8" height="15.0" fill="rgb(236,136,15)" rx="2" ry="2" />
<text  x="69.30" y="479.5" >dax_read_unlock</text>
</g>
<g >
<title>leveldb::EncodeFixed64 (4,000,000 samples, 0.02%)</title><rect x="1009.5" y="389" width="0.2" height="15.0" fill="rgb(248,126,32)" rx="2" ry="2" />
<text  x="1012.49" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1164.0" y="373" width="0.2" height="15.0" fill="rgb(223,186,19)" rx="2" ry="2" />
<text  x="1166.96" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_ptr (8,000,000 samples, 0.03%)</title><rect x="952.6" y="421" width="0.4" height="15.0" fill="rgb(244,45,32)" rx="2" ry="2" />
<text  x="955.60" y="431.5" ></text>
</g>
<g >
<title>crc_1 (4,000,000 samples, 0.02%)</title><rect x="446.3" y="405" width="0.2" height="15.0" fill="rgb(212,101,3)" rx="2" ry="2" />
<text  x="449.34" y="415.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Writer::~Writer (8,000,000 samples, 0.03%)</title><rect x="1133.3" y="453" width="0.4" height="15.0" fill="rgb(233,5,6)" rx="2" ry="2" />
<text  x="1136.30" y="463.5" ></text>
</g>
<g >
<title>from_kprojid (8,000,000 samples, 0.03%)</title><rect x="436.5" y="437" width="0.4" height="15.0" fill="rgb(238,193,22)" rx="2" ry="2" />
<text  x="439.52" y="447.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::~_Reset (4,000,000 samples, 0.02%)</title><rect x="946.6" y="453" width="0.2" height="15.0" fill="rgb(243,121,49)" rx="2" ry="2" />
<text  x="949.59" y="463.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::FindGreaterOrEqual (4,000,000 samples, 0.02%)</title><rect x="796.3" y="373" width="0.2" height="15.0" fill="rgb(229,34,42)" rx="2" ry="2" />
<text  x="799.33" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (16,000,000 samples, 0.07%)</title><rect x="951.2" y="373" width="0.8" height="15.0" fill="rgb(231,84,20)" rx="2" ry="2" />
<text  x="954.20" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="573.6" y="389" width="0.2" height="15.0" fill="rgb(235,188,8)" rx="2" ry="2" />
<text  x="576.56" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (4,000,000 samples, 0.02%)</title><rect x="1136.5" y="421" width="0.2" height="15.0" fill="rgb(228,86,27)" rx="2" ry="2" />
<text  x="1139.51" y="431.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (12,000,000 samples, 0.05%)</title><rect x="899.1" y="373" width="0.6" height="15.0" fill="rgb(240,99,12)" rx="2" ry="2" />
<text  x="902.11" y="383.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (32,000,000 samples, 0.14%)</title><rect x="1175.6" y="661" width="1.6" height="15.0" fill="rgb(216,100,33)" rx="2" ry="2" />
<text  x="1178.58" y="671.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (4,000,000 samples, 0.02%)</title><rect x="387.8" y="453" width="0.2" height="15.0" fill="rgb(222,201,11)" rx="2" ry="2" />
<text  x="390.84" y="463.5" ></text>
</g>
<g >
<title>snappy::internal::CompressFragment (520,000,000 samples, 2.21%)</title><rect x="539.1" y="645" width="26.0" height="15.0" fill="rgb(251,90,34)" rx="2" ry="2" />
<text  x="542.10" y="655.5" >s..</text>
</g>
<g >
<title>ext4_dax_fault (24,000,000 samples, 0.10%)</title><rect x="668.3" y="181" width="1.2" height="15.0" fill="rgb(233,131,37)" rx="2" ry="2" />
<text  x="671.32" y="191.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Finish (4,000,000 samples, 0.02%)</title><rect x="702.4" y="373" width="0.2" height="15.0" fill="rgb(223,99,19)" rx="2" ry="2" />
<text  x="705.37" y="383.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (16,000,000 samples, 0.07%)</title><rect x="1149.5" y="357" width="0.8" height="15.0" fill="rgb(236,7,11)" rx="2" ry="2" />
<text  x="1152.53" y="367.5" ></text>
</g>
<g >
<title>leveldb::MutexLock::~MutexLock (28,000,000 samples, 0.12%)</title><rect x="999.3" y="437" width="1.4" height="15.0" fill="rgb(219,147,1)" rx="2" ry="2" />
<text  x="1002.28" y="447.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::Stats::FinishedSingleOp (16,000,000 samples, 0.07%)</title><rect x="989.9" y="469" width="0.8" height="15.0" fill="rgb(226,175,31)" rx="2" ry="2" />
<text  x="992.86" y="479.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8,228,000,000 samples, 34.92%)</title><rect x="43.1" y="533" width="412.1" height="15.0" fill="rgb(214,175,40)" rx="2" ry="2" />
<text  x="46.06" y="543.5" >ext4_file_write_iter</text>
</g>
<g >
<title>leveldb::IteratorWrapper::Next (4,000,000 samples, 0.02%)</title><rect x="681.1" y="389" width="0.2" height="15.0" fill="rgb(243,153,9)" rx="2" ry="2" />
<text  x="684.14" y="399.5" ></text>
</g>
<g >
<title>vfs_read (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="581" width="0.2" height="15.0" fill="rgb(216,146,10)" rx="2" ry="2" />
<text  x="1187.19" y="591.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::ShardedLRUCache::Lookup (4,000,000 samples, 0.02%)</title><rect x="665.5" y="293" width="0.2" height="15.0" fill="rgb(222,157,10)" rx="2" ry="2" />
<text  x="668.51" y="303.5" ></text>
</g>
<g >
<title>__pthread_once_slow (4,000,000 samples, 0.02%)</title><rect x="1130.7" y="389" width="0.2" height="15.0" fill="rgb(209,179,2)" rx="2" ry="2" />
<text  x="1133.70" y="399.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (76,000,000 samples, 0.32%)</title><rect x="874.7" y="277" width="3.8" height="15.0" fill="rgb(234,90,12)" rx="2" ry="2" />
<text  x="877.67" y="287.5" ></text>
</g>
<g >
<title>apparmor_file_permission (24,000,000 samples, 0.10%)</title><rect x="457.4" y="517" width="1.2" height="15.0" fill="rgb(228,134,23)" rx="2" ry="2" />
<text  x="460.36" y="527.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Next (8,000,000 samples, 0.03%)</title><rect x="892.3" y="357" width="0.4" height="15.0" fill="rgb(241,188,34)" rx="2" ry="2" />
<text  x="895.30" y="367.5" ></text>
</g>
<g >
<title>common_file_perm (24,000,000 samples, 0.10%)</title><rect x="457.4" y="501" width="1.2" height="15.0" fill="rgb(233,17,13)" rx="2" ry="2" />
<text  x="460.36" y="511.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Count (4,000,000 samples, 0.02%)</title><rect x="1171.8" y="469" width="0.2" height="15.0" fill="rgb(243,99,50)" rx="2" ry="2" />
<text  x="1174.77" y="479.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Handler::~Handler (4,000,000 samples, 0.02%)</title><rect x="1005.7" y="405" width="0.2" height="15.0" fill="rgb(206,148,0)" rx="2" ry="2" />
<text  x="1008.69" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="942.8" y="405" width="0.2" height="15.0" fill="rgb(240,177,25)" rx="2" ry="2" />
<text  x="945.78" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8,000,000 samples, 0.03%)</title><rect x="477.4" y="613" width="0.4" height="15.0" fill="rgb(232,86,20)" rx="2" ry="2" />
<text  x="480.39" y="623.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (16,000,000 samples, 0.07%)</title><rect x="1078.2" y="341" width="0.8" height="15.0" fill="rgb(222,188,37)" rx="2" ry="2" />
<text  x="1081.21" y="351.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (268,000,000 samples, 1.14%)</title><rect x="834.4" y="293" width="13.4" height="15.0" fill="rgb(205,59,36)" rx="2" ry="2" />
<text  x="837.40" y="303.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (16,000,000 samples, 0.07%)</title><rect x="933.4" y="405" width="0.8" height="15.0" fill="rgb(252,12,49)" rx="2" ry="2" />
<text  x="936.37" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (16,000,000 samples, 0.07%)</title><rect x="25.6" y="645" width="0.8" height="15.0" fill="rgb(213,107,53)" rx="2" ry="2" />
<text  x="28.63" y="655.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (44,000,000 samples, 0.19%)</title><rect x="719.6" y="373" width="2.2" height="15.0" fill="rgb(252,166,36)" rx="2" ry="2" />
<text  x="722.60" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (4,000,000 samples, 0.02%)</title><rect x="949.8" y="373" width="0.2" height="15.0" fill="rgb(248,174,49)" rx="2" ry="2" />
<text  x="952.79" y="383.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Insert (1,972,000,000 samples, 8.37%)</title><rect x="796.5" y="373" width="98.8" height="15.0" fill="rgb(215,33,42)" rx="2" ry="2" />
<text  x="799.53" y="383.5" >leveldb::Sk..</text>
</g>
<g >
<title>leveldb::crc32c::Value (28,000,000 samples, 0.12%)</title><rect x="700.4" y="309" width="1.4" height="15.0" fill="rgb(244,3,12)" rx="2" ry="2" />
<text  x="703.37" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (8,000,000 samples, 0.03%)</title><rect x="960.6" y="341" width="0.4" height="15.0" fill="rgb(246,139,38)" rx="2" ry="2" />
<text  x="963.61" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (20,000,000 samples, 0.08%)</title><rect x="633.5" y="373" width="1.0" height="15.0" fill="rgb(253,208,53)" rx="2" ry="2" />
<text  x="636.46" y="383.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (4,000,000 samples, 0.02%)</title><rect x="1133.1" y="405" width="0.2" height="15.0" fill="rgb(228,50,15)" rx="2" ry="2" />
<text  x="1136.10" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (8,000,000 samples, 0.03%)</title><rect x="895.5" y="373" width="0.4" height="15.0" fill="rgb(236,172,3)" rx="2" ry="2" />
<text  x="898.50" y="383.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::FindShortestSeparator (8,000,000 samples, 0.03%)</title><rect x="699.0" y="357" width="0.4" height="15.0" fill="rgb(242,126,27)" rx="2" ry="2" />
<text  x="701.97" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (4,000,000 samples, 0.02%)</title><rect x="356.8" y="389" width="0.2" height="15.0" fill="rgb(253,167,44)" rx="2" ry="2" />
<text  x="359.79" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_Head_base (4,000,000 samples, 0.02%)</title><rect x="1152.1" y="373" width="0.2" height="15.0" fill="rgb(222,39,5)" rx="2" ry="2" />
<text  x="1155.14" y="383.5" ></text>
</g>
<g >
<title>seq_read (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="533" width="0.2" height="15.0" fill="rgb(225,138,9)" rx="2" ry="2" />
<text  x="1187.19" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (12,000,000 samples, 0.05%)</title><rect x="1158.3" y="357" width="0.6" height="15.0" fill="rgb(250,7,18)" rx="2" ry="2" />
<text  x="1161.35" y="367.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::MemTableInserter (4,000,000 samples, 0.02%)</title><rect x="790.5" y="421" width="0.2" height="15.0" fill="rgb(254,221,7)" rx="2" ry="2" />
<text  x="793.52" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::allocator (4,000,000 samples, 0.02%)</title><rect x="1146.3" y="309" width="0.2" height="15.0" fill="rgb(233,19,14)" rx="2" ry="2" />
<text  x="1149.33" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::push_back (20,000,000 samples, 0.08%)</title><rect x="1127.7" y="437" width="1.0" height="15.0" fill="rgb(237,122,19)" rx="2" ry="2" />
<text  x="1130.69" y="447.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::set_value (88,000,000 samples, 0.37%)</title><rect x="1128.9" y="437" width="4.4" height="15.0" fill="rgb(232,176,51)" rx="2" ry="2" />
<text  x="1131.90" y="447.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (20,000,000 samples, 0.08%)</title><rect x="446.9" y="437" width="1.0" height="15.0" fill="rgb(219,229,30)" rx="2" ry="2" />
<text  x="449.94" y="447.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::~_Result (20,000,000 samples, 0.08%)</title><rect x="969.4" y="261" width="1.0" height="15.0" fill="rgb(226,38,31)" rx="2" ry="2" />
<text  x="972.43" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="1136.5" y="405" width="0.2" height="15.0" fill="rgb(249,187,3)" rx="2" ry="2" />
<text  x="1139.51" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (20,000,000 samples, 0.08%)</title><rect x="501.6" y="421" width="1.0" height="15.0" fill="rgb(243,166,45)" rx="2" ry="2" />
<text  x="504.63" y="431.5" ></text>
</g>
<g >
<title>iomap_apply (8,016,000,000 samples, 34.02%)</title><rect x="48.3" y="501" width="401.4" height="15.0" fill="rgb(206,113,17)" rx="2" ry="2" />
<text  x="51.26" y="511.5" >iomap_apply</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt; &gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (108,000,000 samples, 0.46%)</title><rect x="967.4" y="357" width="5.4" height="15.0" fill="rgb(209,64,23)" rx="2" ry="2" />
<text  x="970.42" y="367.5" ></text>
</g>
<g >
<title>__do_softirq (4,000,000 samples, 0.02%)</title><rect x="353.4" y="293" width="0.2" height="15.0" fill="rgb(214,61,2)" rx="2" ry="2" />
<text  x="356.38" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1146.3" y="341" width="0.2" height="15.0" fill="rgb(233,140,17)" rx="2" ry="2" />
<text  x="1149.33" y="351.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed64 (8,000,000 samples, 0.03%)</title><rect x="794.9" y="373" width="0.4" height="15.0" fill="rgb(222,147,35)" rx="2" ry="2" />
<text  x="797.93" y="383.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (4,000,000 samples, 0.02%)</title><rect x="566.7" y="245" width="0.2" height="15.0" fill="rgb(238,147,3)" rx="2" ry="2" />
<text  x="569.74" y="255.5" ></text>
</g>
<g >
<title>ext4_group_desc_csum_set (12,000,000 samples, 0.05%)</title><rect x="359.0" y="405" width="0.6" height="15.0" fill="rgb(250,191,5)" rx="2" ry="2" />
<text  x="361.99" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (8,000,000 samples, 0.03%)</title><rect x="1089.0" y="373" width="0.4" height="15.0" fill="rgb(224,44,44)" rx="2" ry="2" />
<text  x="1092.03" y="383.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (4,000,000 samples, 0.02%)</title><rect x="906.5" y="421" width="0.2" height="15.0" fill="rgb(240,32,50)" rx="2" ry="2" />
<text  x="909.52" y="431.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (28,000,000 samples, 0.12%)</title><rect x="470.8" y="645" width="1.4" height="15.0" fill="rgb(232,214,5)" rx="2" ry="2" />
<text  x="473.78" y="655.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::ok (4,000,000 samples, 0.02%)</title><rect x="632.5" y="357" width="0.2" height="15.0" fill="rgb(207,3,38)" rx="2" ry="2" />
<text  x="635.46" y="367.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (52,000,000 samples, 0.22%)</title><rect x="722.4" y="389" width="2.6" height="15.0" fill="rgb(225,97,3)" rx="2" ry="2" />
<text  x="725.41" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (8,000,000 samples, 0.03%)</title><rect x="1172.0" y="469" width="0.4" height="15.0" fill="rgb(220,167,31)" rx="2" ry="2" />
<text  x="1174.97" y="479.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (12,000,000 samples, 0.05%)</title><rect x="701.2" y="277" width="0.6" height="15.0" fill="rgb(250,19,28)" rx="2" ry="2" />
<text  x="704.17" y="287.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (80,000,000 samples, 0.34%)</title><rect x="927.8" y="373" width="4.0" height="15.0" fill="rgb(241,202,13)" rx="2" ry="2" />
<text  x="930.76" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="612.6" y="373" width="0.2" height="15.0" fill="rgb(227,19,14)" rx="2" ry="2" />
<text  x="615.62" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (64,000,000 samples, 0.27%)</title><rect x="1160.3" y="309" width="3.3" height="15.0" fill="rgb(249,153,21)" rx="2" ry="2" />
<text  x="1163.35" y="319.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::Valid (4,000,000 samples, 0.02%)</title><rect x="568.1" y="389" width="0.2" height="15.0" fill="rgb(245,101,42)" rx="2" ry="2" />
<text  x="571.15" y="399.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (12,000,000 samples, 0.05%)</title><rect x="953.6" y="421" width="0.6" height="15.0" fill="rgb(248,151,1)" rx="2" ry="2" />
<text  x="956.60" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (8,000,000 samples, 0.03%)</title><rect x="516.3" y="453" width="0.4" height="15.0" fill="rgb(231,135,24)" rx="2" ry="2" />
<text  x="519.26" y="463.5" ></text>
</g>
<g >
<title>do_group_exit (4,000,000 samples, 0.02%)</title><rect x="1180.6" y="613" width="0.2" height="15.0" fill="rgb(252,125,4)" rx="2" ry="2" />
<text  x="1183.58" y="623.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::value (4,000,000 samples, 0.02%)</title><rect x="684.3" y="405" width="0.2" height="15.0" fill="rgb(207,208,34)" rx="2" ry="2" />
<text  x="687.34" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (28,000,000 samples, 0.12%)</title><rect x="1068.4" y="277" width="1.4" height="15.0" fill="rgb(219,118,35)" rx="2" ry="2" />
<text  x="1071.39" y="287.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (12,000,000 samples, 0.05%)</title><rect x="914.7" y="389" width="0.6" height="15.0" fill="rgb(227,69,35)" rx="2" ry="2" />
<text  x="917.73" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,000,000 samples, 0.02%)</title><rect x="1158.7" y="341" width="0.2" height="15.0" fill="rgb(217,200,51)" rx="2" ry="2" />
<text  x="1161.75" y="351.5" ></text>
</g>
<g >
<title>memcmp@plt (4,000,000 samples, 0.02%)</title><rect x="868.9" y="277" width="0.2" height="15.0" fill="rgb(248,69,50)" rx="2" ry="2" />
<text  x="871.86" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt;&gt; (4,000,000 samples, 0.02%)</title><rect x="962.2" y="421" width="0.2" height="15.0" fill="rgb(216,186,15)" rx="2" ry="2" />
<text  x="965.21" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8,000,000 samples, 0.03%)</title><rect x="981.8" y="437" width="0.4" height="15.0" fill="rgb(228,198,38)" rx="2" ry="2" />
<text  x="984.85" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_ptr (4,000,000 samples, 0.02%)</title><rect x="1162.0" y="229" width="0.2" height="15.0" fill="rgb(210,156,38)" rx="2" ry="2" />
<text  x="1164.95" y="239.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (20,000,000 samples, 0.08%)</title><rect x="914.3" y="405" width="1.0" height="15.0" fill="rgb(222,65,10)" rx="2" ry="2" />
<text  x="917.33" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_addr (4,000,000 samples, 0.02%)</title><rect x="495.6" y="485" width="0.2" height="15.0" fill="rgb(232,110,10)" rx="2" ry="2" />
<text  x="498.62" y="495.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,000,000 samples, 0.02%)</title><rect x="652.9" y="357" width="0.2" height="15.0" fill="rgb(244,85,10)" rx="2" ry="2" />
<text  x="655.89" y="367.5" ></text>
</g>
<g >
<title>__kernel_fpu_end (8,000,000 samples, 0.03%)</title><rect x="357.6" y="341" width="0.4" height="15.0" fill="rgb(245,74,2)" rx="2" ry="2" />
<text  x="360.59" y="351.5" ></text>
</g>
<g >
<title>memcmp@plt (4,000,000 samples, 0.02%)</title><rect x="799.7" y="293" width="0.2" height="15.0" fill="rgb(223,175,52)" rx="2" ry="2" />
<text  x="802.74" y="303.5" ></text>
</g>
<g >
<title>leveldb::GetVarint64 (4,000,000 samples, 0.02%)</title><rect x="665.7" y="277" width="0.2" height="15.0" fill="rgb(254,145,51)" rx="2" ry="2" />
<text  x="668.71" y="287.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (8,000,000 samples, 0.03%)</title><rect x="699.0" y="341" width="0.4" height="15.0" fill="rgb(233,226,52)" rx="2" ry="2" />
<text  x="701.97" y="351.5" ></text>
</g>
<g >
<title>aperfmperf_snapshot_cpu (4,000,000 samples, 0.02%)</title><rect x="1184.2" y="485" width="0.2" height="15.0" fill="rgb(216,78,48)" rx="2" ry="2" />
<text  x="1187.19" y="495.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result (32,000,000 samples, 0.14%)</title><rect x="1129.3" y="421" width="1.6" height="15.0" fill="rgb(248,153,4)" rx="2" ry="2" />
<text  x="1132.30" y="431.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::~future (12,000,000 samples, 0.05%)</title><rect x="1140.3" y="453" width="0.6" height="15.0" fill="rgb(252,129,7)" rx="2" ry="2" />
<text  x="1143.32" y="463.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (8,000,000 samples, 0.03%)</title><rect x="932.4" y="405" width="0.4" height="15.0" fill="rgb(226,214,47)" rx="2" ry="2" />
<text  x="935.36" y="415.5" ></text>
</g>
<g >
<title>crypto_shash_update (4,000,000 samples, 0.02%)</title><rect x="422.9" y="421" width="0.2" height="15.0" fill="rgb(217,150,6)" rx="2" ry="2" />
<text  x="425.90" y="431.5" ></text>
</g>
<g >
<title>ext4_inode_table (4,000,000 samples, 0.02%)</title><rect x="442.1" y="421" width="0.2" height="15.0" fill="rgb(220,63,22)" rx="2" ry="2" />
<text  x="445.13" y="431.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::WriteRawBlock (28,000,000 samples, 0.12%)</title><rect x="700.4" y="325" width="1.4" height="15.0" fill="rgb(248,137,54)" rx="2" ry="2" />
<text  x="703.37" y="335.5" ></text>
</g>
<g >
<title>leveldb::log::Writer::EmitPhysicalRecord (496,000,000 samples, 2.11%)</title><rect x="1098.4" y="421" width="24.9" height="15.0" fill="rgb(236,171,2)" rx="2" ry="2" />
<text  x="1101.44" y="431.5" >l..</text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter, true&gt; (8,000,000 samples, 0.03%)</title><rect x="962.4" y="405" width="0.4" height="15.0" fill="rgb(217,125,35)" rx="2" ry="2" />
<text  x="965.41" y="415.5" ></text>
</g>
<g >
<title>_cond_resched (4,000,000 samples, 0.02%)</title><rect x="329.1" y="421" width="0.2" height="15.0" fill="rgb(252,19,20)" rx="2" ry="2" />
<text  x="332.14" y="431.5" ></text>
</g>
<g >
<title>ext4_mb_regular_allocator (4,000,000 samples, 0.02%)</title><rect x="360.4" y="421" width="0.2" height="15.0" fill="rgb(230,196,52)" rx="2" ry="2" />
<text  x="363.39" y="431.5" ></text>
</g>
<g >
<title>crypto_shash_update (4,000,000 samples, 0.02%)</title><rect x="26.0" y="437" width="0.2" height="15.0" fill="rgb(205,68,35)" rx="2" ry="2" />
<text  x="29.03" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (24,000,000 samples, 0.10%)</title><rect x="1138.7" y="405" width="1.2" height="15.0" fill="rgb(219,151,40)" rx="2" ry="2" />
<text  x="1141.71" y="415.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::Next (20,000,000 samples, 0.08%)</title><rect x="567.1" y="389" width="1.0" height="15.0" fill="rgb(218,10,28)" rx="2" ry="2" />
<text  x="570.14" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (4,000,000 samples, 0.02%)</title><rect x="607.8" y="357" width="0.2" height="15.0" fill="rgb(205,103,0)" rx="2" ry="2" />
<text  x="610.81" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (4,000,000 samples, 0.02%)</title><rect x="947.8" y="405" width="0.2" height="15.0" fill="rgb(234,75,15)" rx="2" ry="2" />
<text  x="950.79" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (4,000,000 samples, 0.02%)</title><rect x="506.0" y="389" width="0.2" height="15.0" fill="rgb(229,196,27)" rx="2" ry="2" />
<text  x="509.04" y="399.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::~MemTableInserter (4,000,000 samples, 0.02%)</title><rect x="779.3" y="437" width="0.2" height="15.0" fill="rgb(209,218,35)" rx="2" ry="2" />
<text  x="782.30" y="447.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (4,000,000 samples, 0.02%)</title><rect x="632.9" y="357" width="0.2" height="15.0" fill="rgb(237,147,44)" rx="2" ry="2" />
<text  x="635.86" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.03%)</title><rect x="520.9" y="485" width="0.4" height="15.0" fill="rgb(205,157,36)" rx="2" ry="2" />
<text  x="523.87" y="495.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed32 (8,000,000 samples, 0.03%)</title><rect x="982.6" y="437" width="0.4" height="15.0" fill="rgb(213,67,34)" rx="2" ry="2" />
<text  x="985.65" y="447.5" ></text>
</g>
<g >
<title>__gthread_active_p (4,000,000 samples, 0.02%)</title><rect x="951.8" y="357" width="0.2" height="15.0" fill="rgb(245,91,39)" rx="2" ry="2" />
<text  x="954.80" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::operator* (16,000,000 samples, 0.07%)</title><rect x="1137.1" y="405" width="0.8" height="15.0" fill="rgb(212,97,31)" rx="2" ry="2" />
<text  x="1140.11" y="415.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::SingletonEnv&lt;leveldb::(anonymous namespace)::PosixEnv&gt;::SingletonEnv (4,000,000 samples, 0.02%)</title><rect x="26.2" y="581" width="0.2" height="15.0" fill="rgb(235,183,43)" rx="2" ry="2" />
<text  x="29.23" y="591.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,000,000 samples, 0.03%)</title><rect x="1088.2" y="373" width="0.4" height="15.0" fill="rgb(206,71,25)" rx="2" ry="2" />
<text  x="1091.23" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::allocator (4,000,000 samples, 0.02%)</title><rect x="1150.7" y="357" width="0.2" height="15.0" fill="rgb(229,206,9)" rx="2" ry="2" />
<text  x="1153.73" y="367.5" ></text>
</g>
<g >
<title>vm_munmap (4,000,000 samples, 0.02%)</title><rect x="1181.0" y="597" width="0.2" height="15.0" fill="rgb(236,88,42)" rx="2" ry="2" />
<text  x="1183.98" y="607.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::~_State_baseV2 (4,000,000 samples, 0.02%)</title><rect x="972.6" y="341" width="0.2" height="15.0" fill="rgb(251,103,28)" rx="2" ry="2" />
<text  x="975.63" y="351.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward (56,000,000 samples, 0.24%)</title><rect x="660.5" y="373" width="2.8" height="15.0" fill="rgb(205,212,43)" rx="2" ry="2" />
<text  x="663.50" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="585.2" y="325" width="0.2" height="15.0" fill="rgb(208,161,36)" rx="2" ry="2" />
<text  x="588.17" y="335.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (24,000,000 samples, 0.10%)</title><rect x="442.3" y="437" width="1.2" height="15.0" fill="rgb(253,81,9)" rx="2" ry="2" />
<text  x="445.33" y="447.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (8,000,000 samples, 0.03%)</title><rect x="1134.3" y="453" width="0.4" height="15.0" fill="rgb(223,79,51)" rx="2" ry="2" />
<text  x="1137.31" y="463.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (4,000,000 samples, 0.02%)</title><rect x="1134.1" y="453" width="0.2" height="15.0" fill="rgb(228,207,9)" rx="2" ry="2" />
<text  x="1137.11" y="463.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,000,000 samples, 0.02%)</title><rect x="706.6" y="405" width="0.2" height="15.0" fill="rgb(243,16,24)" rx="2" ry="2" />
<text  x="709.58" y="415.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (16,000,000 samples, 0.07%)</title><rect x="1003.1" y="421" width="0.8" height="15.0" fill="rgb(210,19,51)" rx="2" ry="2" />
<text  x="1006.08" y="431.5" ></text>
</g>
<g >
<title>__do_sys_madvise (4,000,000 samples, 0.02%)</title><rect x="10.2" y="469" width="0.2" height="15.0" fill="rgb(230,108,7)" rx="2" ry="2" />
<text  x="13.20" y="479.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.02%)</title><rect x="654.5" y="373" width="0.2" height="15.0" fill="rgb(217,168,37)" rx="2" ry="2" />
<text  x="657.49" y="383.5" ></text>
</g>
<g >
<title>iomap_apply (16,000,000 samples, 0.07%)</title><rect x="454.0" y="517" width="0.8" height="15.0" fill="rgb(206,65,40)" rx="2" ry="2" />
<text  x="456.95" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16,000,000 samples, 0.07%)</title><rect x="575.8" y="373" width="0.8" height="15.0" fill="rgb(242,65,40)" rx="2" ry="2" />
<text  x="578.76" y="383.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::get (100,000,000 samples, 0.42%)</title><rect x="1135.3" y="453" width="5.0" height="15.0" fill="rgb(248,198,51)" rx="2" ry="2" />
<text  x="1138.31" y="463.5" ></text>
</g>
</g>
</svg>

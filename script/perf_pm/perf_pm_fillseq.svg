<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>leveldb::(anonymous namespace)::RandomGenerator::RandomGenerator (16,000,000 samples, 0.17%)</title><rect x="737.4" y="309" width="2.0" height="15.0" fill="rgb(253,1,21)" rx="2" ry="2" />
<text  x="740.43" y="319.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Value (1,000,000 samples, 0.01%)</title><rect x="729.0" y="181" width="0.1" height="15.0" fill="rgb(233,88,6)" rx="2" ry="2" />
<text  x="732.01" y="191.5" ></text>
</g>
<g >
<title>__srcu_read_lock (10,500,000 samples, 0.11%)</title><rect x="80.1" y="293" width="1.3" height="15.0" fill="rgb(220,209,28)" rx="2" ry="2" />
<text  x="83.12" y="303.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (17,500,000 samples, 0.18%)</title><rect x="636.8" y="197" width="2.1" height="15.0" fill="rgb(218,28,41)" rx="2" ry="2" />
<text  x="639.80" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_State_baseV2*&amp;&gt; (3,750,000 samples, 0.04%)</title><rect x="1093.1" y="229" width="0.4" height="15.0" fill="rgb(238,109,2)" rx="2" ry="2" />
<text  x="1096.06" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (1,250,000 samples, 0.01%)</title><rect x="1178.3" y="453" width="0.2" height="15.0" fill="rgb(225,79,20)" rx="2" ry="2" />
<text  x="1181.34" y="463.5" ></text>
</g>
<g >
<title>__fget_light (20,750,000 samples, 0.21%)</title><rect x="42.7" y="389" width="2.5" height="15.0" fill="rgb(215,43,4)" rx="2" ry="2" />
<text  x="45.68" y="399.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::ok (9,500,000 samples, 0.10%)</title><rect x="725.0" y="213" width="1.2" height="15.0" fill="rgb(246,158,2)" rx="2" ry="2" />
<text  x="728.04" y="223.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::GetMaxHeight (2,750,000 samples, 0.03%)</title><rect x="804.1" y="181" width="0.3" height="15.0" fill="rgb(248,98,49)" rx="2" ry="2" />
<text  x="807.07" y="191.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (1,500,000 samples, 0.02%)</title><rect x="1159.7" y="277" width="0.2" height="15.0" fill="rgb(212,164,14)" rx="2" ry="2" />
<text  x="1162.70" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1,750,000 samples, 0.02%)</title><rect x="10.1" y="357" width="0.2" height="15.0" fill="rgb(236,97,52)" rx="2" ry="2" />
<text  x="13.06" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (2,750,000 samples, 0.03%)</title><rect x="603.7" y="421" width="0.3" height="15.0" fill="rgb(254,154,43)" rx="2" ry="2" />
<text  x="606.69" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result_base*, false&gt;::_Head_base&lt;std::__future_base::_Result_base*&amp;&gt; (5,500,000 samples, 0.06%)</title><rect x="586.1" y="277" width="0.7" height="15.0" fill="rgb(232,221,50)" rx="2" ry="2" />
<text  x="589.12" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,750,000 samples, 0.05%)</title><rect x="572.9" y="277" width="0.6" height="15.0" fill="rgb(236,142,16)" rx="2" ry="2" />
<text  x="575.93" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,000,000 samples, 0.01%)</title><rect x="30.2" y="469" width="0.2" height="15.0" fill="rgb(233,153,45)" rx="2" ry="2" />
<text  x="33.23" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (17,000,000 samples, 0.18%)</title><rect x="582.1" y="341" width="2.1" height="15.0" fill="rgb(230,183,24)" rx="2" ry="2" />
<text  x="585.12" y="351.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (9,750,000 samples, 0.10%)</title><rect x="972.2" y="213" width="1.2" height="15.0" fill="rgb(230,161,36)" rx="2" ry="2" />
<text  x="975.23" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4,750,000 samples, 0.05%)</title><rect x="473.1" y="245" width="0.5" height="15.0" fill="rgb(236,28,35)" rx="2" ry="2" />
<text  x="476.07" y="255.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Valid (4,750,000 samples, 0.05%)</title><rect x="634.3" y="197" width="0.5" height="15.0" fill="rgb(232,223,15)" rx="2" ry="2" />
<text  x="637.27" y="207.5" ></text>
</g>
<g >
<title>leveldb::MemTable::KeyComparator::operator (12,250,000 samples, 0.13%)</title><rect x="802.6" y="181" width="1.5" height="15.0" fill="rgb(215,69,14)" rx="2" ry="2" />
<text  x="805.58" y="191.5" ></text>
</g>
<g >
<title>from_kgid (4,250,000 samples, 0.04%)</title><rect x="511.9" y="277" width="0.6" height="15.0" fill="rgb(228,69,6)" rx="2" ry="2" />
<text  x="514.94" y="287.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (11,500,000 samples, 0.12%)</title><rect x="926.4" y="133" width="1.4" height="15.0" fill="rgb(235,210,13)" rx="2" ry="2" />
<text  x="929.43" y="143.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,000,000 samples, 0.01%)</title><rect x="584.1" y="325" width="0.1" height="15.0" fill="rgb(232,151,35)" rx="2" ry="2" />
<text  x="587.07" y="335.5" ></text>
</g>
<g >
<title>map_id_up (4,750,000 samples, 0.05%)</title><rect x="512.5" y="261" width="0.6" height="15.0" fill="rgb(223,133,45)" rx="2" ry="2" />
<text  x="515.52" y="271.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator== (1,250,000 samples, 0.01%)</title><rect x="1095.6" y="277" width="0.1" height="15.0" fill="rgb(230,140,11)" rx="2" ry="2" />
<text  x="1098.59" y="287.5" ></text>
</g>
<g >
<title>jbd2_transaction_committed (9,000,000 samples, 0.09%)</title><rect x="454.9" y="309" width="1.1" height="15.0" fill="rgb(241,18,18)" rx="2" ry="2" />
<text  x="457.94" y="319.5" ></text>
</g>
<g >
<title>leveldb::Slice::remove_prefix (7,750,000 samples, 0.08%)</title><rect x="977.1" y="229" width="1.0" height="15.0" fill="rgb(208,43,4)" rx="2" ry="2" />
<text  x="980.11" y="239.5" ></text>
</g>
<g >
<title>[unknown] (2,500,000 samples, 0.03%)</title><rect x="10.1" y="389" width="0.3" height="15.0" fill="rgb(206,21,33)" rx="2" ry="2" />
<text  x="13.06" y="399.5" ></text>
</g>
<g >
<title>aperfmperf_snapshot_cpu (4,500,000 samples, 0.05%)</title><rect x="1186.5" y="325" width="0.6" height="15.0" fill="rgb(253,83,24)" rx="2" ry="2" />
<text  x="1189.52" y="335.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::~_Reset (61,000,000 samples, 0.63%)</title><rect x="1088.0" y="277" width="7.4" height="15.0" fill="rgb(220,45,17)" rx="2" ry="2" />
<text  x="1090.96" y="287.5" ></text>
</g>
<g >
<title>__libc_write (1,000,000 samples, 0.01%)</title><rect x="1004.5" y="213" width="0.1" height="15.0" fill="rgb(241,5,25)" rx="2" ry="2" />
<text  x="1007.48" y="223.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (2,250,000 samples, 0.02%)</title><rect x="734.3" y="309" width="0.3" height="15.0" fill="rgb(209,150,46)" rx="2" ry="2" />
<text  x="737.35" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (6,000,000 samples, 0.06%)</title><rect x="1072.0" y="245" width="0.8" height="15.0" fill="rgb(211,118,27)" rx="2" ry="2" />
<text  x="1075.04" y="255.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Extend (1,000,000 samples, 0.01%)</title><rect x="729.0" y="165" width="0.1" height="15.0" fill="rgb(228,219,17)" rx="2" ry="2" />
<text  x="732.01" y="175.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt;::operator (1,000,000 samples, 0.01%)</title><rect x="592.3" y="357" width="0.1" height="15.0" fill="rgb(215,57,40)" rx="2" ry="2" />
<text  x="595.31" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned int&gt; &gt;::construct&lt;unsigned int, unsigned int&gt; (1,750,000 samples, 0.02%)</title><rect x="688.9" y="165" width="0.2" height="15.0" fill="rgb(245,32,53)" rx="2" ry="2" />
<text  x="691.85" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1,000,000 samples, 0.01%)</title><rect x="1134.4" y="213" width="0.1" height="15.0" fill="rgb(249,27,17)" rx="2" ry="2" />
<text  x="1137.37" y="223.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1,250,000 samples, 0.01%)</title><rect x="1131.7" y="261" width="0.2" height="15.0" fill="rgb(234,193,2)" rx="2" ry="2" />
<text  x="1134.72" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::~allocator (1,500,000 samples, 0.02%)</title><rect x="1140.0" y="149" width="0.1" height="15.0" fill="rgb(244,32,52)" rx="2" ry="2" />
<text  x="1142.96" y="159.5" ></text>
</g>
<g >
<title>operator new (1,750,000 samples, 0.02%)</title><rect x="571.7" y="309" width="0.2" height="15.0" fill="rgb(248,2,34)" rx="2" ry="2" />
<text  x="574.65" y="319.5" ></text>
</g>
<g >
<title>iomap_apply (3,817,750,000 samples, 39.49%)</title><rect x="62.2" y="341" width="466.0" height="15.0" fill="rgb(233,135,17)" rx="2" ry="2" />
<text  x="65.21" y="351.5" >iomap_apply</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (11,500,000 samples, 0.12%)</title><rect x="1151.8" y="133" width="1.4" height="15.0" fill="rgb(226,59,25)" rx="2" ry="2" />
<text  x="1154.83" y="143.5" ></text>
</g>
<g >
<title>smp_call_function_single (4,500,000 samples, 0.05%)</title><rect x="1186.5" y="309" width="0.6" height="15.0" fill="rgb(221,181,21)" rx="2" ry="2" />
<text  x="1189.52" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl (2,250,000 samples, 0.02%)</title><rect x="1120.1" y="69" width="0.2" height="15.0" fill="rgb(247,113,21)" rx="2" ry="2" />
<text  x="1123.06" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::~allocator (1,500,000 samples, 0.02%)</title><rect x="1105.9" y="277" width="0.2" height="15.0" fill="rgb(218,200,48)" rx="2" ry="2" />
<text  x="1108.88" y="287.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (2,500,000 samples, 0.03%)</title><rect x="454.5" y="277" width="0.3" height="15.0" fill="rgb(226,214,19)" rx="2" ry="2" />
<text  x="457.45" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter, void&gt; (66,500,000 samples, 0.69%)</title><rect x="584.2" y="341" width="8.1" height="15.0" fill="rgb(229,192,13)" rx="2" ry="2" />
<text  x="587.19" y="351.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::NoBarrier_SetNext (28,250,000 samples, 0.29%)</title><rect x="956.8" y="197" width="3.4" height="15.0" fill="rgb(248,144,51)" rx="2" ry="2" />
<text  x="959.79" y="207.5" ></text>
</g>
<g >
<title>leveldb::PutLengthPrefixedSlice (40,000,000 samples, 0.41%)</title><rect x="1162.8" y="293" width="4.8" height="15.0" fill="rgb(217,115,46)" rx="2" ry="2" />
<text  x="1165.75" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (5,500,000 samples, 0.06%)</title><rect x="693.9" y="181" width="0.7" height="15.0" fill="rgb(248,56,12)" rx="2" ry="2" />
<text  x="696.95" y="191.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (1,750,000 samples, 0.02%)</title><rect x="658.0" y="165" width="0.2" height="15.0" fill="rgb(245,83,4)" rx="2" ry="2" />
<text  x="661.04" y="175.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1,000,000 samples, 0.01%)</title><rect x="422.8" y="229" width="0.1" height="15.0" fill="rgb(227,208,53)" rx="2" ry="2" />
<text  x="425.81" y="239.5" ></text>
</g>
<g >
<title>[unknown] (2,500,000 samples, 0.03%)</title><rect x="607.3" y="469" width="0.3" height="15.0" fill="rgb(224,105,36)" rx="2" ry="2" />
<text  x="610.32" y="479.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::RandomHeight (22,750,000 samples, 0.24%)</title><rect x="962.5" y="197" width="2.8" height="15.0" fill="rgb(249,214,41)" rx="2" ry="2" />
<text  x="965.53" y="207.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,750,000 samples, 0.02%)</title><rect x="1127.2" y="245" width="0.2" height="15.0" fill="rgb(207,171,34)" rx="2" ry="2" />
<text  x="1130.23" y="255.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (1,000,000 samples, 0.01%)</title><rect x="1079.0" y="277" width="0.1" height="15.0" fill="rgb(209,162,46)" rx="2" ry="2" />
<text  x="1081.99" y="287.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (49,750,000 samples, 0.51%)</title><rect x="496.0" y="245" width="6.0" height="15.0" fill="rgb(217,27,53)" rx="2" ry="2" />
<text  x="498.95" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3,250,000 samples, 0.03%)</title><rect x="403.5" y="245" width="0.4" height="15.0" fill="rgb(214,109,0)" rx="2" ry="2" />
<text  x="406.50" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="581.3" y="229" width="0.1" height="15.0" fill="rgb(207,134,0)" rx="2" ry="2" />
<text  x="584.33" y="239.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BackgroundCall (854,750,000 samples, 8.84%)</title><rect x="626.2" y="309" width="104.3" height="15.0" fill="rgb(207,208,7)" rx="2" ry="2" />
<text  x="629.18" y="319.5" >leveldb::DBI..</text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (1,500,000 samples, 0.02%)</title><rect x="702.5" y="149" width="0.1" height="15.0" fill="rgb(253,25,22)" rx="2" ry="2" />
<text  x="705.46" y="159.5" ></text>
</g>
<g >
<title>ext4_group_desc_csum_set (4,500,000 samples, 0.05%)</title><rect x="425.8" y="245" width="0.6" height="15.0" fill="rgb(254,58,2)" rx="2" ry="2" />
<text  x="428.80" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_ptr (1,250,000 samples, 0.01%)</title><rect x="1095.8" y="261" width="0.2" height="15.0" fill="rgb(231,156,4)" rx="2" ry="2" />
<text  x="1098.84" y="271.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (4,250,000 samples, 0.04%)</title><rect x="451.5" y="245" width="0.5" height="15.0" fill="rgb(248,117,24)" rx="2" ry="2" />
<text  x="454.52" y="255.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (12,750,000 samples, 0.13%)</title><rect x="1009.3" y="229" width="1.6" height="15.0" fill="rgb(208,176,4)" rx="2" ry="2" />
<text  x="1012.33" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (7,250,000 samples, 0.07%)</title><rect x="588.4" y="309" width="0.9" height="15.0" fill="rgb(243,49,6)" rx="2" ry="2" />
<text  x="591.41" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (14,500,000 samples, 0.15%)</title><rect x="1077.2" y="245" width="1.7" height="15.0" fill="rgb(219,145,51)" rx="2" ry="2" />
<text  x="1080.16" y="255.5" ></text>
</g>
<g >
<title>kernel_fpu_end (2,750,000 samples, 0.03%)</title><rect x="451.7" y="229" width="0.3" height="15.0" fill="rgb(232,169,23)" rx="2" ry="2" />
<text  x="454.71" y="239.5" ></text>
</g>
<g >
<title>std::operator&amp; (1,250,000 samples, 0.01%)</title><rect x="960.1" y="181" width="0.1" height="15.0" fill="rgb(235,171,54)" rx="2" ry="2" />
<text  x="963.08" y="191.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2,500,000 samples, 0.03%)</title><rect x="522.7" y="245" width="0.3" height="15.0" fill="rgb(244,57,35)" rx="2" ry="2" />
<text  x="525.71" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,000,000 samples, 0.02%)</title><rect x="1176.0" y="421" width="0.2" height="15.0" fill="rgb(243,193,26)" rx="2" ry="2" />
<text  x="1178.99" y="431.5" ></text>
</g>
<g >
<title>dax_iomap_rw (3,857,000,000 samples, 39.89%)</title><rect x="57.4" y="357" width="470.8" height="15.0" fill="rgb(239,81,51)" rx="2" ry="2" />
<text  x="60.42" y="367.5" >dax_iomap_rw</text>
</g>
<g >
<title>[unknown] (1,000,000 samples, 0.01%)</title><rect x="1177.6" y="453" width="0.1" height="15.0" fill="rgb(251,95,12)" rx="2" ry="2" />
<text  x="1180.61" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (3,500,000 samples, 0.04%)</title><rect x="1175.8" y="453" width="0.4" height="15.0" fill="rgb(240,49,7)" rx="2" ry="2" />
<text  x="1178.81" y="463.5" ></text>
</g>
<g >
<title>__vfs_write (3,961,000,000 samples, 40.97%)</title><rect x="52.6" y="389" width="483.5" height="15.0" fill="rgb(214,134,26)" rx="2" ry="2" />
<text  x="55.63" y="399.5" >__vfs_write</text>
</g>
<g >
<title>__fget_light (4,750,000 samples, 0.05%)</title><rect x="46.4" y="405" width="0.6" height="15.0" fill="rgb(217,220,24)" rx="2" ry="2" />
<text  x="49.43" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (2,250,000 samples, 0.02%)</title><rect x="982.6" y="245" width="0.3" height="15.0" fill="rgb(214,131,27)" rx="2" ry="2" />
<text  x="985.63" y="255.5" ></text>
</g>
<g >
<title>_cond_resched (1,000,000 samples, 0.01%)</title><rect x="536.2" y="389" width="0.1" height="15.0" fill="rgb(229,187,9)" rx="2" ry="2" />
<text  x="539.20" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (1,000,000 samples, 0.01%)</title><rect x="1177.6" y="501" width="0.1" height="15.0" fill="rgb(249,72,11)" rx="2" ry="2" />
<text  x="1180.61" y="511.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (1,000,000 samples, 0.01%)</title><rect x="587.2" y="261" width="0.1" height="15.0" fill="rgb(235,216,46)" rx="2" ry="2" />
<text  x="590.15" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::__future_base::_State_baseV2&gt;::_M_ptr (1,500,000 samples, 0.02%)</title><rect x="1139.3" y="181" width="0.1" height="15.0" fill="rgb(226,124,43)" rx="2" ry="2" />
<text  x="1142.26" y="191.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (2,500,000 samples, 0.03%)</title><rect x="571.3" y="309" width="0.4" height="15.0" fill="rgb(246,157,48)" rx="2" ry="2" />
<text  x="574.35" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (5,000,000 samples, 0.05%)</title><rect x="1152.6" y="101" width="0.6" height="15.0" fill="rgb(247,76,20)" rx="2" ry="2" />
<text  x="1155.62" y="111.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get (8,500,000 samples, 0.09%)</title><rect x="591.3" y="309" width="1.0" height="15.0" fill="rgb(254,29,13)" rx="2" ry="2" />
<text  x="594.27" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_M_head (3,000,000 samples, 0.03%)</title><rect x="595.9" y="293" width="0.4" height="15.0" fill="rgb(237,144,5)" rx="2" ry="2" />
<text  x="598.94" y="303.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (19,250,000 samples, 0.20%)</title><rect x="19.2" y="469" width="2.3" height="15.0" fill="rgb(215,3,22)" rx="2" ry="2" />
<text  x="22.18" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,000,000 samples, 0.01%)</title><rect x="30.2" y="437" width="0.2" height="15.0" fill="rgb(254,144,28)" rx="2" ry="2" />
<text  x="33.23" y="447.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (3,250,000 samples, 0.03%)</title><rect x="1083.8" y="261" width="0.4" height="15.0" fill="rgb(224,139,48)" rx="2" ry="2" />
<text  x="1086.81" y="271.5" ></text>
</g>
<g >
<title>ext4_mb_use_preallocated.constprop.33 (1,000,000 samples, 0.01%)</title><rect x="427.0" y="261" width="0.1" height="15.0" fill="rgb(237,189,29)" rx="2" ry="2" />
<text  x="429.99" y="271.5" ></text>
</g>
<g >
<title>crypto_shash_update (81,250,000 samples, 0.84%)</title><rect x="502.0" y="245" width="9.9" height="15.0" fill="rgb(231,54,13)" rx="2" ry="2" />
<text  x="505.02" y="255.5" ></text>
</g>
<g >
<title>_IO_old_init (1,250,000 samples, 0.01%)</title><rect x="15.2" y="485" width="0.1" height="15.0" fill="rgb(227,171,0)" rx="2" ry="2" />
<text  x="18.16" y="495.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::MemTableInserter (1,000,000 samples, 0.01%)</title><rect x="746.0" y="277" width="0.1" height="15.0" fill="rgb(239,192,22)" rx="2" ry="2" />
<text  x="749.00" y="287.5" ></text>
</g>
<g >
<title>crypto_shash_update (22,250,000 samples, 0.23%)</title><rect x="423.0" y="229" width="2.7" height="15.0" fill="rgb(220,60,38)" rx="2" ry="2" />
<text  x="426.02" y="239.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Add (368,750,000 samples, 3.81%)</title><rect x="644.2" y="213" width="45.0" height="15.0" fill="rgb(227,224,24)" rx="2" ry="2" />
<text  x="647.15" y="223.5" >leve..</text>
</g>
<g >
<title>leveldb::ExtractUserKey (22,000,000 samples, 0.23%)</title><rect x="656.2" y="181" width="2.7" height="15.0" fill="rgb(224,158,13)" rx="2" ry="2" />
<text  x="659.21" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (1,000,000 samples, 0.01%)</title><rect x="577.8" y="277" width="0.1" height="15.0" fill="rgb(237,81,16)" rx="2" ry="2" />
<text  x="580.76" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (1,750,000 samples, 0.02%)</title><rect x="1086.9" y="213" width="0.2" height="15.0" fill="rgb(250,101,1)" rx="2" ry="2" />
<text  x="1089.93" y="223.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (372,000,000 samples, 3.85%)</title><rect x="560.3" y="453" width="45.4" height="15.0" fill="rgb(212,3,22)" rx="2" ry="2" />
<text  x="563.30" y="463.5" >std:..</text>
</g>
<g >
<title>leveldb::Arena::Allocate (9,000,000 samples, 0.09%)</title><rect x="783.0" y="213" width="1.1" height="15.0" fill="rgb(209,203,48)" rx="2" ry="2" />
<text  x="786.02" y="223.5" ></text>
</g>
<g >
<title>__gthread_once (8,000,000 samples, 0.08%)</title><rect x="1070.0" y="229" width="1.0" height="15.0" fill="rgb(236,194,54)" rx="2" ry="2" />
<text  x="1072.99" y="239.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (3,750,000 samples, 0.04%)</title><rect x="975.0" y="213" width="0.5" height="15.0" fill="rgb(248,166,49)" rx="2" ry="2" />
<text  x="978.01" y="223.5" ></text>
</g>
<g >
<title>_cond_resched (1,250,000 samples, 0.01%)</title><rect x="45.2" y="389" width="0.2" height="15.0" fill="rgb(236,148,1)" rx="2" ry="2" />
<text  x="48.21" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2,500,000 samples, 0.03%)</title><rect x="1132.0" y="245" width="0.3" height="15.0" fill="rgb(236,122,54)" rx="2" ry="2" />
<text  x="1134.99" y="255.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (2,500,000 samples, 0.03%)</title><rect x="975.5" y="229" width="0.3" height="15.0" fill="rgb(220,125,10)" rx="2" ry="2" />
<text  x="978.46" y="239.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (161,250,000 samples, 1.67%)</title><rect x="492.3" y="277" width="19.6" height="15.0" fill="rgb(215,190,22)" rx="2" ry="2" />
<text  x="495.26" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2,500,000 samples, 0.03%)</title><rect x="10.1" y="405" width="0.3" height="15.0" fill="rgb(241,81,28)" rx="2" ry="2" />
<text  x="13.06" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (1,250,000 samples, 0.01%)</title><rect x="1057.5" y="261" width="0.2" height="15.0" fill="rgb(239,201,19)" rx="2" ry="2" />
<text  x="1060.54" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get (1,750,000 samples, 0.02%)</title><rect x="571.9" y="325" width="0.2" height="15.0" fill="rgb(229,123,31)" rx="2" ry="2" />
<text  x="574.93" y="335.5" ></text>
</g>
<g >
<title>bio_put (1,750,000 samples, 0.02%)</title><rect x="428.5" y="261" width="0.2" height="15.0" fill="rgb(245,222,32)" rx="2" ry="2" />
<text  x="431.52" y="271.5" ></text>
</g>
<g >
<title>ext4_read_block_bitmap (1,500,000 samples, 0.02%)</title><rect x="426.6" y="245" width="0.2" height="15.0" fill="rgb(222,26,5)" rx="2" ry="2" />
<text  x="429.59" y="255.5" ></text>
</g>
<g >
<title>ext4_orphan_del (30,250,000 samples, 0.31%)</title><rect x="522.5" y="309" width="3.7" height="15.0" fill="rgb(241,21,7)" rx="2" ry="2" />
<text  x="525.47" y="319.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (7,500,000 samples, 0.08%)</title><rect x="657.1" y="165" width="0.9" height="15.0" fill="rgb(214,36,27)" rx="2" ry="2" />
<text  x="660.12" y="175.5" ></text>
</g>
<g >
<title>map_id_up (2,500,000 samples, 0.03%)</title><rect x="513.7" y="277" width="0.3" height="15.0" fill="rgb(241,130,40)" rx="2" ry="2" />
<text  x="516.74" y="287.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::call_once&lt;void  (5,250,000 samples, 0.05%)</title><rect x="1067.4" y="245" width="0.6" height="15.0" fill="rgb(247,219,28)" rx="2" ry="2" />
<text  x="1070.40" y="255.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (3,000,000 samples, 0.03%)</title><rect x="583.7" y="293" width="0.4" height="15.0" fill="rgb(225,52,53)" rx="2" ry="2" />
<text  x="586.71" y="303.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (1,000,000 samples, 0.01%)</title><rect x="1158.5" y="309" width="0.2" height="15.0" fill="rgb(242,2,44)" rx="2" ry="2" />
<text  x="1161.54" y="319.5" ></text>
</g>
<g >
<title>aperfmperf_get_khz (4,500,000 samples, 0.05%)</title><rect x="1186.5" y="341" width="0.6" height="15.0" fill="rgb(227,80,49)" rx="2" ry="2" />
<text  x="1189.52" y="351.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::SetSequence (22,500,000 samples, 0.23%)</title><rect x="986.3" y="277" width="2.7" height="15.0" fill="rgb(247,172,54)" rx="2" ry="2" />
<text  x="989.29" y="287.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::Stats::FinishedSingleOp (6,250,000 samples, 0.06%)</title><rect x="739.4" y="309" width="0.7" height="15.0" fill="rgb(248,209,30)" rx="2" ry="2" />
<text  x="742.38" y="319.5" ></text>
</g>
<g >
<title>kernel_fpu_end (4,000,000 samples, 0.04%)</title><rect x="423.5" y="197" width="0.4" height="15.0" fill="rgb(243,50,21)" rx="2" ry="2" />
<text  x="426.45" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,250,000 samples, 0.01%)</title><rect x="578.9" y="245" width="0.2" height="15.0" fill="rgb(218,170,34)" rx="2" ry="2" />
<text  x="581.92" y="255.5" ></text>
</g>
<g >
<title>leveldb::Random::Next (3,500,000 samples, 0.04%)</title><rect x="738.7" y="245" width="0.4" height="15.0" fill="rgb(208,194,34)" rx="2" ry="2" />
<text  x="741.68" y="255.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (5,250,000 samples, 0.05%)</title><rect x="699.7" y="213" width="0.7" height="15.0" fill="rgb(206,15,35)" rx="2" ry="2" />
<text  x="702.72" y="223.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (2,500,000 samples, 0.03%)</title><rect x="525.5" y="277" width="0.3" height="15.0" fill="rgb(206,87,34)" rx="2" ry="2" />
<text  x="528.46" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::push_back (1,250,000 samples, 0.01%)</title><rect x="1081.5" y="293" width="0.1" height="15.0" fill="rgb(251,33,48)" rx="2" ry="2" />
<text  x="1084.50" y="303.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (3,250,000 samples, 0.03%)</title><rect x="1148.9" y="69" width="0.4" height="15.0" fill="rgb(217,130,31)" rx="2" ry="2" />
<text  x="1151.87" y="79.5" ></text>
</g>
<g >
<title>_raw_read_lock (12,250,000 samples, 0.13%)</title><rect x="391.0" y="277" width="1.5" height="15.0" fill="rgb(235,152,25)" rx="2" ry="2" />
<text  x="394.02" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr (19,750,000 samples, 0.20%)</title><rect x="1101.7" y="245" width="2.4" height="15.0" fill="rgb(249,171,6)" rx="2" ry="2" />
<text  x="1104.66" y="255.5" ></text>
</g>
<g >
<title>page_fault (3,500,000 samples, 0.04%)</title><rect x="1175.8" y="469" width="0.4" height="15.0" fill="rgb(245,89,43)" rx="2" ry="2" />
<text  x="1178.81" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (6,500,000 samples, 0.07%)</title><rect x="1092.2" y="181" width="0.8" height="15.0" fill="rgb(236,82,35)" rx="2" ry="2" />
<text  x="1095.18" y="191.5" ></text>
</g>
<g >
<title>__do_sys_madvise (1,750,000 samples, 0.02%)</title><rect x="540.4" y="421" width="0.3" height="15.0" fill="rgb(219,191,39)" rx="2" ry="2" />
<text  x="543.44" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (1,500,000 samples, 0.02%)</title><rect x="1158.0" y="293" width="0.2" height="15.0" fill="rgb(205,138,11)" rx="2" ry="2" />
<text  x="1161.02" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::~allocator (1,500,000 samples, 0.02%)</title><rect x="1124.9" y="197" width="0.2" height="15.0" fill="rgb(242,226,52)" rx="2" ry="2" />
<text  x="1127.89" y="207.5" ></text>
</g>
<g >
<title>tcmalloc::MetaDataAlloc (1,500,000 samples, 0.02%)</title><rect x="1176.3" y="485" width="0.2" height="15.0" fill="rgb(227,23,14)" rx="2" ry="2" />
<text  x="1179.30" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::__future_base::_State_baseV2&gt;::_M_ptr (2,750,000 samples, 0.03%)</title><rect x="1113.6" y="165" width="0.4" height="15.0" fill="rgb(234,218,35)" rx="2" ry="2" />
<text  x="1116.63" y="175.5" ></text>
</g>
<g >
<title>std::__addressof&lt;bool&gt; (1,250,000 samples, 0.01%)</title><rect x="1067.2" y="245" width="0.2" height="15.0" fill="rgb(207,192,1)" rx="2" ry="2" />
<text  x="1070.25" y="255.5" ></text>
</g>
<g >
<title>__kmalloc (1,250,000 samples, 0.01%)</title><rect x="419.0" y="261" width="0.1" height="15.0" fill="rgb(214,134,27)" rx="2" ry="2" />
<text  x="421.97" y="271.5" ></text>
</g>
<g >
<title>page_fault (1,250,000 samples, 0.01%)</title><rect x="1178.3" y="485" width="0.2" height="15.0" fill="rgb(228,131,18)" rx="2" ry="2" />
<text  x="1181.34" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (7,000,000 samples, 0.07%)</title><rect x="595.5" y="309" width="0.8" height="15.0" fill="rgb(220,162,8)" rx="2" ry="2" />
<text  x="598.45" y="319.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Finish (5,750,000 samples, 0.06%)</title><rect x="701.0" y="181" width="0.7" height="15.0" fill="rgb(240,17,41)" rx="2" ry="2" />
<text  x="703.97" y="191.5" ></text>
</g>
<g >
<title>std::swap&lt;std::__future_base::_Result_base*&gt; (8,750,000 samples, 0.09%)</title><rect x="598.8" y="341" width="1.0" height="15.0" fill="rgb(217,212,30)" rx="2" ry="2" />
<text  x="601.78" y="351.5" ></text>
</g>
<g >
<title>ksys_write (2,500,000 samples, 0.03%)</title><rect x="540.1" y="437" width="0.3" height="15.0" fill="rgb(247,101,9)" rx="2" ry="2" />
<text  x="543.13" y="447.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (110,000,000 samples, 1.14%)</title><rect x="1037.6" y="229" width="13.5" height="15.0" fill="rgb(205,145,52)" rx="2" ry="2" />
<text  x="1040.65" y="239.5" ></text>
</g>
<g >
<title>proc_reg_open (4,000,000 samples, 0.04%)</title><rect x="29.7" y="341" width="0.5" height="15.0" fill="rgb(249,29,46)" rx="2" ry="2" />
<text  x="32.74" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,250,000 samples, 0.02%)</title><rect x="628.0" y="197" width="0.3" height="15.0" fill="rgb(242,143,53)" rx="2" ry="2" />
<text  x="631.04" y="207.5" ></text>
</g>
<g >
<title>blkdev_issue_zeroout (179,500,000 samples, 1.86%)</title><rect x="427.8" y="277" width="21.9" height="15.0" fill="rgb(228,17,42)" rx="2" ry="2" />
<text  x="430.75" y="287.5" >b..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::__future_base::_State_baseV2&gt;::_M_ptr (1,000,000 samples, 0.01%)</title><rect x="1138.0" y="197" width="0.1" height="15.0" fill="rgb(240,1,34)" rx="2" ry="2" />
<text  x="1140.98" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (323,500,000 samples, 3.35%)</title><rect x="563.4" y="405" width="39.5" height="15.0" fill="rgb(232,165,2)" rx="2" ry="2" />
<text  x="566.38" y="415.5" >std..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (89,500,000 samples, 0.93%)</title><rect x="1143.5" y="181" width="11.0" height="15.0" fill="rgb(223,99,22)" rx="2" ry="2" />
<text  x="1146.53" y="191.5" ></text>
</g>
<g >
<title>dax_iomap_actor (2,605,250,000 samples, 26.95%)</title><rect x="66.1" y="325" width="317.9" height="15.0" fill="rgb(225,208,20)" rx="2" ry="2" />
<text  x="69.05" y="335.5" >dax_iomap_actor</text>
</g>
<g >
<title>dax_copy_from_iter (86,250,000 samples, 0.89%)</title><rect x="68.0" y="309" width="10.5" height="15.0" fill="rgb(217,152,42)" rx="2" ry="2" />
<text  x="71.01" y="319.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::CompactMemTable (854,750,000 samples, 8.84%)</title><rect x="626.2" y="277" width="104.3" height="15.0" fill="rgb(233,143,41)" rx="2" ry="2" />
<text  x="629.18" y="287.5" >leveldb::DBI..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (3,750,000 samples, 0.04%)</title><rect x="1086.5" y="181" width="0.4" height="15.0" fill="rgb(225,6,40)" rx="2" ry="2" />
<text  x="1089.47" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,250,000 samples, 0.01%)</title><rect x="702.0" y="165" width="0.1" height="15.0" fill="rgb(223,45,34)" rx="2" ry="2" />
<text  x="704.97" y="175.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (6,000,000 samples, 0.06%)</title><rect x="580.7" y="277" width="0.7" height="15.0" fill="rgb(236,86,45)" rx="2" ry="2" />
<text  x="583.72" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (2,250,000 samples, 0.02%)</title><rect x="1121.9" y="181" width="0.3" height="15.0" fill="rgb(246,191,22)" rx="2" ry="2" />
<text  x="1124.89" y="191.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (5,500,000 samples, 0.06%)</title><rect x="1100.1" y="245" width="0.7" height="15.0" fill="rgb(222,170,9)" rx="2" ry="2" />
<text  x="1103.14" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="573.1" y="261" width="0.1" height="15.0" fill="rgb(247,167,46)" rx="2" ry="2" />
<text  x="576.06" y="271.5" ></text>
</g>
<g >
<title>__wake_up (27,500,000 samples, 0.28%)</title><rect x="472.5" y="277" width="3.4" height="15.0" fill="rgb(205,214,23)" rx="2" ry="2" />
<text  x="475.55" y="287.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (4,750,000 samples, 0.05%)</title><rect x="1007.9" y="245" width="0.6" height="15.0" fill="rgb(221,73,42)" rx="2" ry="2" />
<text  x="1010.93" y="255.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (7,500,000 samples, 0.08%)</title><rect x="994.0" y="245" width="0.9" height="15.0" fill="rgb(251,108,47)" rx="2" ry="2" />
<text  x="997.01" y="255.5" ></text>
</g>
<g >
<title>invalidate_inode_pages2_range (1,000,000 samples, 0.01%)</title><rect x="381.0" y="309" width="0.1" height="15.0" fill="rgb(237,90,29)" rx="2" ry="2" />
<text  x="383.98" y="319.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1,000,000 samples, 0.01%)</title><rect x="418.3" y="165" width="0.1" height="15.0" fill="rgb(237,134,31)" rx="2" ry="2" />
<text  x="421.29" y="175.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt; (3,500,000 samples, 0.04%)</title><rect x="1078.5" y="197" width="0.4" height="15.0" fill="rgb(241,51,35)" rx="2" ry="2" />
<text  x="1081.51" y="207.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::RemoveObsoleteFiles (2,000,000 samples, 0.02%)</title><rect x="626.2" y="261" width="0.2" height="15.0" fill="rgb(227,207,50)" rx="2" ry="2" />
<text  x="629.18" y="271.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::WriteLevel0Table (852,000,000 samples, 8.81%)</title><rect x="626.4" y="261" width="104.0" height="15.0" fill="rgb(209,202,13)" rx="2" ry="2" />
<text  x="629.42" y="271.5" >leveldb::DBI..</text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,250,000 samples, 0.01%)</title><rect x="573.5" y="293" width="0.2" height="15.0" fill="rgb(249,86,6)" rx="2" ry="2" />
<text  x="576.51" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single (4,000,000 samples, 0.04%)</title><rect x="29.7" y="277" width="0.5" height="15.0" fill="rgb(240,119,13)" rx="2" ry="2" />
<text  x="32.74" y="287.5" ></text>
</g>
<g >
<title>ext4_extent_block_csum_set (6,000,000 samples, 0.06%)</title><rect x="417.2" y="245" width="0.8" height="15.0" fill="rgb(232,91,51)" rx="2" ry="2" />
<text  x="420.23" y="255.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::RandomGenerator::Generate (11,500,000 samples, 0.12%)</title><rect x="736.0" y="309" width="1.4" height="15.0" fill="rgb(221,19,18)" rx="2" ry="2" />
<text  x="739.03" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,500,000 samples, 0.02%)</title><rect x="701.1" y="165" width="0.1" height="15.0" fill="rgb(243,70,3)" rx="2" ry="2" />
<text  x="704.06" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,000,000 samples, 0.01%)</title><rect x="428.6" y="197" width="0.1" height="15.0" fill="rgb(244,64,16)" rx="2" ry="2" />
<text  x="431.58" y="207.5" ></text>
</g>
<g >
<title>fsnotify (7,750,000 samples, 0.08%)</title><rect x="537.0" y="389" width="1.0" height="15.0" fill="rgb(253,124,44)" rx="2" ry="2" />
<text  x="540.02" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::_Deleter::operator (42,750,000 samples, 0.44%)</title><rect x="1146.5" y="133" width="5.2" height="15.0" fill="rgb(232,74,17)" rx="2" ry="2" />
<text  x="1149.49" y="143.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (11,250,000 samples, 0.12%)</title><rect x="589.9" y="309" width="1.3" height="15.0" fill="rgb(206,30,25)" rx="2" ry="2" />
<text  x="592.87" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,250,000 samples, 0.01%)</title><rect x="602.1" y="309" width="0.2" height="15.0" fill="rgb(244,165,43)" rx="2" ry="2" />
<text  x="605.14" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,000,000 samples, 0.01%)</title><rect x="1156.9" y="245" width="0.1" height="15.0" fill="rgb(247,224,24)" rx="2" ry="2" />
<text  x="1159.86" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,250,000 samples, 0.01%)</title><rect x="428.2" y="181" width="0.2" height="15.0" fill="rgb(215,194,22)" rx="2" ry="2" />
<text  x="431.21" y="191.5" ></text>
</g>
<g >
<title>mempool_alloc_slab (1,250,000 samples, 0.01%)</title><rect x="428.2" y="197" width="0.2" height="15.0" fill="rgb(243,18,27)" rx="2" ry="2" />
<text  x="431.21" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,250,000 samples, 0.01%)</title><rect x="10.1" y="293" width="0.1" height="15.0" fill="rgb(216,158,13)" rx="2" ry="2" />
<text  x="13.09" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (2,500,000 samples, 0.03%)</title><rect x="1152.9" y="85" width="0.3" height="15.0" fill="rgb(237,143,19)" rx="2" ry="2" />
<text  x="1155.93" y="95.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_M_set_node (1,000,000 samples, 0.01%)</title><rect x="1060.5" y="245" width="0.1" height="15.0" fill="rgb(248,222,43)" rx="2" ry="2" />
<text  x="1063.50" y="255.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (1,000,000 samples, 0.01%)</title><rect x="761.5" y="245" width="0.1" height="15.0" fill="rgb(205,24,51)" rx="2" ry="2" />
<text  x="764.51" y="255.5" ></text>
</g>
<g >
<title>_itoa_word (15,000,000 samples, 0.16%)</title><rect x="21.5" y="469" width="1.9" height="15.0" fill="rgb(209,46,50)" rx="2" ry="2" />
<text  x="24.53" y="479.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (2,250,000 samples, 0.02%)</title><rect x="754.9" y="261" width="0.3" height="15.0" fill="rgb(244,20,29)" rx="2" ry="2" />
<text  x="757.95" y="271.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (7,000,000 samples, 0.07%)</title><rect x="822.2" y="165" width="0.9" height="15.0" fill="rgb(253,170,32)" rx="2" ry="2" />
<text  x="825.23" y="175.5" ></text>
</g>
<g >
<title>file_update_time (35,750,000 samples, 0.37%)</title><rect x="529.5" y="357" width="4.3" height="15.0" fill="rgb(242,37,10)" rx="2" ry="2" />
<text  x="532.48" y="367.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_init_functor (8,750,000 samples, 0.09%)</title><rect x="1075.7" y="229" width="1.1" height="15.0" fill="rgb(237,48,5)" rx="2" ry="2" />
<text  x="1078.73" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (6,250,000 samples, 0.06%)</title><rect x="1054.2" y="245" width="0.8" height="15.0" fill="rgb(224,153,28)" rx="2" ry="2" />
<text  x="1057.22" y="255.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2,500,000 samples, 0.03%)</title><rect x="421.1" y="149" width="0.3" height="15.0" fill="rgb(230,208,53)" rx="2" ry="2" />
<text  x="424.10" y="159.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1,250,000 samples, 0.01%)</title><rect x="1101.8" y="229" width="0.2" height="15.0" fill="rgb(223,180,23)" rx="2" ry="2" />
<text  x="1104.85" y="239.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Put (87,000,000 samples, 0.90%)</title><rect x="1160.3" y="309" width="10.7" height="15.0" fill="rgb(240,35,21)" rx="2" ry="2" />
<text  x="1163.34" y="319.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Insert (1,463,000,000 samples, 15.13%)</title><rect x="787.6" y="213" width="178.5" height="15.0" fill="rgb(214,90,47)" rx="2" ry="2" />
<text  x="790.56" y="223.5" >leveldb::SkipList&lt;char ..</text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;std::__future_base::_State_baseV2&gt;, true&gt;::_Sp_ebo_helper (2,500,000 samples, 0.03%)</title><rect x="1114.0" y="165" width="0.3" height="15.0" fill="rgb(230,73,44)" rx="2" ry="2" />
<text  x="1116.96" y="175.5" ></text>
</g>
<g >
<title>ext4_ext_index_trans_blocks (2,000,000 samples, 0.02%)</title><rect x="451.1" y="293" width="0.2" height="15.0" fill="rgb(227,198,19)" rx="2" ry="2" />
<text  x="454.07" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (12,500,000 samples, 0.13%)</title><rect x="594.8" y="341" width="1.5" height="15.0" fill="rgb(214,174,25)" rx="2" ry="2" />
<text  x="597.78" y="351.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (15,500,000 samples, 0.16%)</title><rect x="993.0" y="261" width="1.9" height="15.0" fill="rgb(244,131,52)" rx="2" ry="2" />
<text  x="996.04" y="271.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (58,750,000 samples, 0.61%)</title><rect x="504.8" y="229" width="7.1" height="15.0" fill="rgb(237,158,29)" rx="2" ry="2" />
<text  x="507.77" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_Result_base*&amp;&gt; (2,750,000 samples, 0.03%)</title><rect x="1153.5" y="133" width="0.4" height="15.0" fill="rgb(243,172,19)" rx="2" ry="2" />
<text  x="1156.54" y="143.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (3,250,000 samples, 0.03%)</title><rect x="1072.4" y="229" width="0.4" height="15.0" fill="rgb(207,11,31)" rx="2" ry="2" />
<text  x="1075.37" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,250,000 samples, 0.02%)</title><rect x="628.0" y="213" width="0.3" height="15.0" fill="rgb(247,217,2)" rx="2" ry="2" />
<text  x="631.04" y="223.5" ></text>
</g>
<g >
<title>current_time (14,000,000 samples, 0.14%)</title><rect x="530.8" y="341" width="1.7" height="15.0" fill="rgb(250,208,30)" rx="2" ry="2" />
<text  x="533.80" y="351.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::Next (12,750,000 samples, 0.13%)</title><rect x="628.8" y="229" width="1.6" height="15.0" fill="rgb(251,57,26)" rx="2" ry="2" />
<text  x="631.83" y="239.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (5,250,000 samples, 0.05%)</title><rect x="662.9" y="197" width="0.7" height="15.0" fill="rgb(227,92,15)" rx="2" ry="2" />
<text  x="665.95" y="207.5" ></text>
</g>
<g >
<title>std::operator&amp; (14,750,000 samples, 0.15%)</title><rect x="950.4" y="165" width="1.8" height="15.0" fill="rgb(213,169,51)" rx="2" ry="2" />
<text  x="953.35" y="175.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1,500,000 samples, 0.02%)</title><rect x="1076.5" y="213" width="0.2" height="15.0" fill="rgb(224,200,42)" rx="2" ry="2" />
<text  x="1079.49" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (24,500,000 samples, 0.25%)</title><rect x="584.8" y="325" width="3.0" height="15.0" fill="rgb(227,150,27)" rx="2" ry="2" />
<text  x="587.84" y="335.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (16,000,000 samples, 0.17%)</title><rect x="921.0" y="117" width="2.0" height="15.0" fill="rgb(226,75,42)" rx="2" ry="2" />
<text  x="924.03" y="127.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (6,750,000 samples, 0.07%)</title><rect x="531.5" y="325" width="0.8" height="15.0" fill="rgb(239,171,40)" rx="2" ry="2" />
<text  x="534.47" y="335.5" ></text>
</g>
<g >
<title>ext4_iomap_begin (12,500,000 samples, 0.13%)</title><rect x="60.7" y="341" width="1.5" height="15.0" fill="rgb(211,164,6)" rx="2" ry="2" />
<text  x="63.68" y="351.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::WriteBlock (1,750,000 samples, 0.02%)</title><rect x="728.9" y="213" width="0.2" height="15.0" fill="rgb(252,5,20)" rx="2" ry="2" />
<text  x="731.92" y="223.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (12,750,000 samples, 0.13%)</title><rect x="766.2" y="261" width="1.6" height="15.0" fill="rgb(230,76,36)" rx="2" ry="2" />
<text  x="769.24" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (5,250,000 samples, 0.05%)</title><rect x="1172.9" y="309" width="0.6" height="15.0" fill="rgb(206,101,23)" rx="2" ry="2" />
<text  x="1175.85" y="319.5" ></text>
</g>
<g >
<title>__vfs_write (1,250,000 samples, 0.01%)</title><rect x="47.8" y="405" width="0.1" height="15.0" fill="rgb(226,110,15)" rx="2" ry="2" />
<text  x="50.78" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;std::__future_base::_State_baseV2&gt;, true&gt;::_S_get (1,000,000 samples, 0.01%)</title><rect x="1140.2" y="181" width="0.1" height="15.0" fill="rgb(219,229,36)" rx="2" ry="2" />
<text  x="1143.20" y="191.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::promise (190,250,000 samples, 1.97%)</title><rect x="1104.9" y="293" width="23.2" height="15.0" fill="rgb(242,28,25)" rx="2" ry="2" />
<text  x="1107.90" y="303.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (2,250,000 samples, 0.02%)</title><rect x="30.4" y="389" width="0.3" height="15.0" fill="rgb(243,82,46)" rx="2" ry="2" />
<text  x="33.44" y="399.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (361,500,000 samples, 3.74%)</title><rect x="478.3" y="309" width="44.2" height="15.0" fill="rgb(231,148,7)" rx="2" ry="2" />
<text  x="481.34" y="319.5" >ext4..</text>
</g>
<g >
<title>leveldb::(anonymous namespace)::KeyBuffer::Set (1,000,000 samples, 0.01%)</title><rect x="735.0" y="309" width="0.1" height="15.0" fill="rgb(226,126,33)" rx="2" ry="2" />
<text  x="738.02" y="319.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (162,000,000 samples, 1.68%)</title><rect x="843.3" y="133" width="19.8" height="15.0" fill="rgb(224,15,52)" rx="2" ry="2" />
<text  x="846.28" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6,500,000 samples, 0.07%)</title><rect x="998.2" y="245" width="0.8" height="15.0" fill="rgb(210,55,22)" rx="2" ry="2" />
<text  x="1001.16" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_ptr (3,000,000 samples, 0.03%)</title><rect x="1149.4" y="53" width="0.4" height="15.0" fill="rgb(215,156,34)" rx="2" ry="2" />
<text  x="1152.39" y="63.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (13,250,000 samples, 0.14%)</title><rect x="751.5" y="245" width="1.6" height="15.0" fill="rgb(211,90,14)" rx="2" ry="2" />
<text  x="754.53" y="255.5" ></text>
</g>
<g >
<title>leveldb::Slice::remove_prefix (1,000,000 samples, 0.01%)</title><rect x="773.9" y="261" width="0.1" height="15.0" fill="rgb(238,183,18)" rx="2" ry="2" />
<text  x="776.92" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::end (8,500,000 samples, 0.09%)</title><rect x="749.9" y="261" width="1.0" height="15.0" fill="rgb(218,10,45)" rx="2" ry="2" />
<text  x="752.91" y="271.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (35,500,000 samples, 0.37%)</title><rect x="863.1" y="133" width="4.3" height="15.0" fill="rgb(237,145,7)" rx="2" ry="2" />
<text  x="866.05" y="143.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (15,000,000 samples, 0.16%)</title><rect x="1126.0" y="261" width="1.9" height="15.0" fill="rgb(213,212,38)" rx="2" ry="2" />
<text  x="1129.04" y="271.5" ></text>
</g>
<g >
<title>memcpy_flushcache (92,000,000 samples, 0.95%)</title><rect x="438.2" y="165" width="11.2" height="15.0" fill="rgb(254,39,8)" rx="2" ry="2" />
<text  x="441.16" y="175.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (3,750,000 samples, 0.04%)</title><rect x="593.7" y="357" width="0.4" height="15.0" fill="rgb(214,9,40)" rx="2" ry="2" />
<text  x="596.65" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result_base*, false&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="1086.5" y="165" width="0.1" height="15.0" fill="rgb(233,114,8)" rx="2" ry="2" />
<text  x="1089.50" y="175.5" ></text>
</g>
<g >
<title>__fdget_pos (36,500,000 samples, 0.38%)</title><rect x="42.0" y="405" width="4.4" height="15.0" fill="rgb(222,67,11)" rx="2" ry="2" />
<text  x="44.98" y="415.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32 (37,500,000 samples, 0.39%)</title><rect x="970.9" y="229" width="4.6" height="15.0" fill="rgb(251,53,30)" rx="2" ry="2" />
<text  x="973.89" y="239.5" ></text>
</g>
<g >
<title>ksys_read (9,750,000 samples, 0.10%)</title><rect x="1186.5" y="437" width="1.2" height="15.0" fill="rgb(234,56,32)" rx="2" ry="2" />
<text  x="1189.46" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2,500,000 samples, 0.03%)</title><rect x="10.1" y="421" width="0.3" height="15.0" fill="rgb(244,12,43)" rx="2" ry="2" />
<text  x="13.06" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (2,000,000 samples, 0.02%)</title><rect x="426.4" y="229" width="0.2" height="15.0" fill="rgb(234,15,6)" rx="2" ry="2" />
<text  x="429.35" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base*&amp;&gt; (1,000,000 samples, 0.01%)</title><rect x="587.3" y="277" width="0.1" height="15.0" fill="rgb(222,144,31)" rx="2" ry="2" />
<text  x="590.28" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (2,750,000 samples, 0.03%)</title><rect x="1120.8" y="149" width="0.4" height="15.0" fill="rgb(219,142,13)" rx="2" ry="2" />
<text  x="1123.83" y="159.5" ></text>
</g>
<g >
<title>main (6,000,000 samples, 0.06%)</title><rect x="30.4" y="469" width="0.7" height="15.0" fill="rgb(213,77,6)" rx="2" ry="2" />
<text  x="33.41" y="479.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (4,496,500,000 samples, 46.51%)</title><rect x="626.2" y="437" width="548.8" height="15.0" fill="rgb(247,156,40)" rx="2" ry="2" />
<text  x="629.18" y="447.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>ext4_file_write_iter (3,936,500,000 samples, 40.72%)</title><rect x="55.3" y="373" width="480.5" height="15.0" fill="rgb(226,181,52)" rx="2" ry="2" />
<text  x="58.31" y="383.5" >ext4_file_write_iter</text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::~_Result (23,000,000 samples, 0.24%)</title><rect x="1147.2" y="101" width="2.8" height="15.0" fill="rgb(234,182,5)" rx="2" ry="2" />
<text  x="1150.19" y="111.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::~allocator (1,000,000 samples, 0.01%)</title><rect x="1125.6" y="261" width="0.2" height="15.0" fill="rgb(254,184,24)" rx="2" ry="2" />
<text  x="1128.65" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9,250,000 samples, 0.10%)</title><rect x="643.0" y="213" width="1.1" height="15.0" fill="rgb(230,138,52)" rx="2" ry="2" />
<text  x="645.96" y="223.5" ></text>
</g>
<g >
<title>ext4_read_block_bitmap_nowait (1,250,000 samples, 0.01%)</title><rect x="426.6" y="229" width="0.2" height="15.0" fill="rgb(213,200,20)" rx="2" ry="2" />
<text  x="429.62" y="239.5" ></text>
</g>
<g >
<title>__find_get_block (1,750,000 samples, 0.02%)</title><rect x="454.2" y="245" width="0.2" height="15.0" fill="rgb(232,148,34)" rx="2" ry="2" />
<text  x="457.18" y="255.5" ></text>
</g>
<g >
<title>__read_extent_tree_block (1,000,000 samples, 0.01%)</title><rect x="419.1" y="261" width="0.1" height="15.0" fill="rgb(221,168,19)" rx="2" ry="2" />
<text  x="422.12" y="271.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::_Reset (1,750,000 samples, 0.02%)</title><rect x="1087.8" y="277" width="0.2" height="15.0" fill="rgb(246,83,36)" rx="2" ry="2" />
<text  x="1090.75" y="287.5" ></text>
</g>
<g >
<title>__do_page_fault (3,500,000 samples, 0.04%)</title><rect x="1175.8" y="437" width="0.4" height="15.0" fill="rgb(234,140,52)" rx="2" ry="2" />
<text  x="1178.81" y="447.5" ></text>
</g>
<g >
<title>mutex_lock (1,500,000 samples, 0.02%)</title><rect x="526.0" y="293" width="0.2" height="15.0" fill="rgb(214,28,15)" rx="2" ry="2" />
<text  x="528.98" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (16,250,000 samples, 0.17%)</title><rect x="697.7" y="213" width="2.0" height="15.0" fill="rgb(250,101,27)" rx="2" ry="2" />
<text  x="700.73" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (4,250,000 samples, 0.04%)</title><rect x="1153.9" y="133" width="0.5" height="15.0" fill="rgb(252,100,9)" rx="2" ry="2" />
<text  x="1156.87" y="143.5" ></text>
</g>
<g >
<title>operator new[] (24,250,000 samples, 0.25%)</title><rect x="1183.5" y="501" width="3.0" height="15.0" fill="rgb(223,200,0)" rx="2" ry="2" />
<text  x="1186.50" y="511.5" ></text>
</g>
<g >
<title>timespec64_trunc (1,750,000 samples, 0.02%)</title><rect x="532.3" y="325" width="0.2" height="15.0" fill="rgb(235,9,23)" rx="2" ry="2" />
<text  x="535.29" y="335.5" ></text>
</g>
<g >
<title>timespec64_trunc (4,250,000 samples, 0.04%)</title><rect x="533.3" y="341" width="0.5" height="15.0" fill="rgb(210,205,34)" rx="2" ry="2" />
<text  x="536.33" y="351.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::KeyIsAfterNode (1,069,000,000 samples, 11.06%)</title><rect x="804.4" y="181" width="130.5" height="15.0" fill="rgb(234,197,40)" rx="2" ry="2" />
<text  x="807.41" y="191.5" >leveldb::SkipLis..</text>
</g>
<g >
<title>leveldb::TableBuilder::WriteRawBlock (1,000,000 samples, 0.01%)</title><rect x="729.0" y="197" width="0.1" height="15.0" fill="rgb(233,100,29)" rx="2" ry="2" />
<text  x="732.01" y="207.5" ></text>
</g>
<g >
<title>do_sys_open (2,250,000 samples, 0.02%)</title><rect x="628.0" y="165" width="0.3" height="15.0" fill="rgb(223,182,19)" rx="2" ry="2" />
<text  x="631.04" y="175.5" ></text>
</g>
<g >
<title>snappy::internal::CompressFragment (151,250,000 samples, 1.56%)</title><rect x="607.6" y="485" width="18.5" height="15.0" fill="rgb(211,63,43)" rx="2" ry="2" />
<text  x="610.63" y="495.5" ></text>
</g>
<g >
<title>madvise_free_single_vma (1,000,000 samples, 0.01%)</title><rect x="13.1" y="389" width="0.1" height="15.0" fill="rgb(239,130,6)" rx="2" ry="2" />
<text  x="16.11" y="399.5" ></text>
</g>
<g >
<title>std::atomic_flag::_S_init (2,000,000 samples, 0.02%)</title><rect x="1118.2" y="117" width="0.3" height="15.0" fill="rgb(244,64,20)" rx="2" ry="2" />
<text  x="1121.23" y="127.5" ></text>
</g>
<g >
<title>from_kgid (1,500,000 samples, 0.02%)</title><rect x="521.6" y="293" width="0.2" height="15.0" fill="rgb(212,225,15)" rx="2" ry="2" />
<text  x="524.58" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::operator* (1,000,000 samples, 0.01%)</title><rect x="1055.0" y="277" width="0.1" height="15.0" fill="rgb(248,102,14)" rx="2" ry="2" />
<text  x="1057.98" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (2,250,000 samples, 0.02%)</title><rect x="728.0" y="213" width="0.3" height="15.0" fill="rgb(222,27,49)" rx="2" ry="2" />
<text  x="731.03" y="223.5" ></text>
</g>
<g >
<title>__libc_write (4,172,750,000 samples, 43.16%)</title><rect x="31.1" y="485" width="509.3" height="15.0" fill="rgb(237,210,29)" rx="2" ry="2" />
<text  x="34.15" y="495.5" >__libc_write</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (1,000,000 samples, 0.01%)</title><rect x="581.4" y="341" width="0.2" height="15.0" fill="rgb(209,202,29)" rx="2" ry="2" />
<text  x="584.45" y="351.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*&amp;, std::__future_base::_Result_base::_Deleter, true&gt; (21,250,000 samples, 0.22%)</title><rect x="575.3" y="293" width="2.6" height="15.0" fill="rgb(218,10,36)" rx="2" ry="2" />
<text  x="578.28" y="303.5" ></text>
</g>
<g >
<title>vfs_write (4,022,000,000 samples, 41.60%)</title><rect x="49.1" y="405" width="490.9" height="15.0" fill="rgb(247,185,23)" rx="2" ry="2" />
<text  x="52.12" y="415.5" >vfs_write</text>
</g>
<g >
<title>crc32c_pcl_intel_update (2,750,000 samples, 0.03%)</title><rect x="417.3" y="213" width="0.3" height="15.0" fill="rgb(228,171,13)" rx="2" ry="2" />
<text  x="420.29" y="223.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_tlbonly (1,250,000 samples, 0.01%)</title><rect x="540.5" y="357" width="0.2" height="15.0" fill="rgb(253,38,1)" rx="2" ry="2" />
<text  x="543.50" y="367.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::future (1,250,000 samples, 0.01%)</title><rect x="1081.6" y="293" width="0.2" height="15.0" fill="rgb(233,31,14)" rx="2" ry="2" />
<text  x="1084.65" y="303.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::~MemTableInserter (5,250,000 samples, 0.05%)</title><rect x="772.7" y="261" width="0.6" height="15.0" fill="rgb(211,127,18)" rx="2" ry="2" />
<text  x="775.67" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (17,000,000 samples, 0.18%)</title><rect x="1102.0" y="229" width="2.1" height="15.0" fill="rgb(243,51,40)" rx="2" ry="2" />
<text  x="1105.00" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,250,000 samples, 0.01%)</title><rect x="590.5" y="277" width="0.2" height="15.0" fill="rgb(233,77,54)" rx="2" ry="2" />
<text  x="593.54" y="287.5" ></text>
</g>
<g >
<title>__getblk_gfp (1,000,000 samples, 0.01%)</title><rect x="419.1" y="245" width="0.1" height="15.0" fill="rgb(234,126,12)" rx="2" ry="2" />
<text  x="422.12" y="255.5" ></text>
</g>
<g >
<title>ksys_write (1,000,000 samples, 0.01%)</title><rect x="30.2" y="421" width="0.2" height="15.0" fill="rgb(227,142,2)" rx="2" ry="2" />
<text  x="33.23" y="431.5" ></text>
</g>
<g >
<title>find_get_pages_range (18,500,000 samples, 0.19%)</title><rect x="412.5" y="261" width="2.3" height="15.0" fill="rgb(247,176,17)" rx="2" ry="2" />
<text  x="415.50" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,000,000 samples, 0.04%)</title><rect x="29.7" y="453" width="0.5" height="15.0" fill="rgb(238,218,37)" rx="2" ry="2" />
<text  x="32.74" y="463.5" ></text>
</g>
<g >
<title>leveldb::operator== (14,500,000 samples, 0.15%)</title><rect x="685.1" y="197" width="1.7" height="15.0" fill="rgb(241,54,50)" rx="2" ry="2" />
<text  x="688.07" y="207.5" ></text>
</g>
<g >
<title>[unknown] (1,750,000 samples, 0.02%)</title><rect x="10.1" y="325" width="0.2" height="15.0" fill="rgb(212,209,1)" rx="2" ry="2" />
<text  x="13.06" y="335.5" ></text>
</g>
<g >
<title>__kernel_fpu_begin (1,250,000 samples, 0.01%)</title><rect x="451.6" y="213" width="0.1" height="15.0" fill="rgb(246,101,29)" rx="2" ry="2" />
<text  x="454.55" y="223.5" ></text>
</g>
<g >
<title>__libc_start_main (6,000,000 samples, 0.06%)</title><rect x="30.4" y="485" width="0.7" height="15.0" fill="rgb(253,9,26)" rx="2" ry="2" />
<text  x="33.41" y="495.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (12,250,000 samples, 0.13%)</title><rect x="927.8" y="133" width="1.5" height="15.0" fill="rgb(233,163,16)" rx="2" ry="2" />
<text  x="930.83" y="143.5" ></text>
</g>
<g >
<title>std::atomic&lt;unsigned int&gt;::atomic (5,500,000 samples, 0.06%)</title><rect x="1117.1" y="117" width="0.7" height="15.0" fill="rgb(236,84,17)" rx="2" ry="2" />
<text  x="1120.10" y="127.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (1,000,000 samples, 0.01%)</title><rect x="1125.9" y="261" width="0.1" height="15.0" fill="rgb(224,64,45)" rx="2" ry="2" />
<text  x="1128.92" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,500,000 samples, 0.02%)</title><rect x="589.1" y="261" width="0.2" height="15.0" fill="rgb(214,131,28)" rx="2" ry="2" />
<text  x="592.11" y="271.5" ></text>
</g>
<g >
<title>crypto_shash_update (1,250,000 samples, 0.01%)</title><rect x="418.3" y="181" width="0.1" height="15.0" fill="rgb(215,214,48)" rx="2" ry="2" />
<text  x="421.26" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (3,500,000 samples, 0.04%)</title><rect x="1101.2" y="229" width="0.5" height="15.0" fill="rgb(233,209,27)" rx="2" ry="2" />
<text  x="1104.24" y="239.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (1,750,000 samples, 0.02%)</title><rect x="640.2" y="213" width="0.3" height="15.0" fill="rgb(230,176,52)" rx="2" ry="2" />
<text  x="643.25" y="223.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::__basic_future (45,000,000 samples, 0.47%)</title><rect x="1098.6" y="261" width="5.5" height="15.0" fill="rgb(218,69,44)" rx="2" ry="2" />
<text  x="1101.58" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1,500,000 samples, 0.02%)</title><rect x="687.8" y="197" width="0.2" height="15.0" fill="rgb(252,39,44)" rx="2" ry="2" />
<text  x="690.82" y="207.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (12,250,000 samples, 0.13%)</title><rect x="1163.4" y="277" width="1.5" height="15.0" fill="rgb(238,167,22)" rx="2" ry="2" />
<text  x="1166.42" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,136,250,000 samples, 42.78%)</title><rect x="35.6" y="453" width="504.8" height="15.0" fill="rgb(235,7,50)" rx="2" ry="2" />
<text  x="38.60" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>leveldb::Slice::data (3,500,000 samples, 0.04%)</title><rect x="976.7" y="229" width="0.4" height="15.0" fill="rgb(206,52,25)" rx="2" ry="2" />
<text  x="979.68" y="239.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (1,000,000 samples, 0.01%)</title><rect x="519.2" y="261" width="0.1" height="15.0" fill="rgb(242,63,52)" rx="2" ry="2" />
<text  x="522.20" y="271.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (5,500,000 samples, 0.06%)</title><rect x="454.1" y="293" width="0.7" height="15.0" fill="rgb(222,97,17)" rx="2" ry="2" />
<text  x="457.12" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (1,500,000 samples, 0.02%)</title><rect x="1154.2" y="85" width="0.2" height="15.0" fill="rgb(205,175,32)" rx="2" ry="2" />
<text  x="1157.18" y="95.5" ></text>
</g>
<g >
<title>ext4_ext_try_to_merge_right (1,000,000 samples, 0.01%)</title><rect x="418.6" y="245" width="0.1" height="15.0" fill="rgb(220,136,19)" rx="2" ry="2" />
<text  x="421.60" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (1,250,000 samples, 0.01%)</title><rect x="1170.7" y="293" width="0.2" height="15.0" fill="rgb(253,20,53)" rx="2" ry="2" />
<text  x="1173.72" y="303.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32 (1,000,000 samples, 0.01%)</title><rect x="979.1" y="245" width="0.1" height="15.0" fill="rgb(218,21,37)" rx="2" ry="2" />
<text  x="982.06" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (7,000,000 samples, 0.07%)</title><rect x="762.0" y="229" width="0.8" height="15.0" fill="rgb(228,104,37)" rx="2" ry="2" />
<text  x="764.99" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,250,000 samples, 0.01%)</title><rect x="416.9" y="277" width="0.1" height="15.0" fill="rgb(215,162,6)" rx="2" ry="2" />
<text  x="419.86" y="287.5" ></text>
</g>
<g >
<title>leveldb::Arena::MemoryUsage (2,250,000 samples, 0.02%)</title><rect x="754.5" y="245" width="0.3" height="15.0" fill="rgb(240,184,16)" rx="2" ry="2" />
<text  x="757.55" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (6,500,000 samples, 0.07%)</title><rect x="1086.1" y="213" width="0.8" height="15.0" fill="rgb(228,69,20)" rx="2" ry="2" />
<text  x="1089.13" y="223.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (313,750,000 samples, 3.25%)</title><rect x="564.1" y="389" width="38.3" height="15.0" fill="rgb(212,55,49)" rx="2" ry="2" />
<text  x="567.15" y="399.5" >std..</text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Node (1,750,000 samples, 0.02%)</title><rect x="955.6" y="181" width="0.2" height="15.0" fill="rgb(222,183,23)" rx="2" ry="2" />
<text  x="958.60" y="191.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (1,750,000 samples, 0.02%)</title><rect x="513.5" y="277" width="0.2" height="15.0" fill="rgb(223,112,7)" rx="2" ry="2" />
<text  x="516.53" y="287.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Count (9,000,000 samples, 0.09%)</title><rect x="983.0" y="245" width="1.1" height="15.0" fill="rgb(213,28,40)" rx="2" ry="2" />
<text  x="986.00" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (3,250,000 samples, 0.03%)</title><rect x="1100.4" y="229" width="0.4" height="15.0" fill="rgb(221,51,48)" rx="2" ry="2" />
<text  x="1103.41" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::release (23,500,000 samples, 0.24%)</title><rect x="589.4" y="325" width="2.9" height="15.0" fill="rgb(233,77,13)" rx="2" ry="2" />
<text  x="592.44" y="335.5" ></text>
</g>
<g >
<title>up_write (8,750,000 samples, 0.09%)</title><rect x="526.2" y="309" width="1.1" height="15.0" fill="rgb(232,119,28)" rx="2" ry="2" />
<text  x="529.25" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;leveldb::FileMetaData*, std::allocator&lt;leveldb::FileMetaData*&gt; &gt;::size (9,000,000 samples, 0.09%)</title><rect x="755.7" y="245" width="1.1" height="15.0" fill="rgb(245,182,46)" rx="2" ry="2" />
<text  x="758.71" y="255.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::__atomic_futex_unsigned (1,750,000 samples, 0.02%)</title><rect x="1115.5" y="149" width="0.2" height="15.0" fill="rgb(245,71,8)" rx="2" ry="2" />
<text  x="1118.46" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3,750,000 samples, 0.04%)</title><rect x="1170.1" y="293" width="0.4" height="15.0" fill="rgb(216,158,44)" rx="2" ry="2" />
<text  x="1173.07" y="303.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_super (7,250,000 samples, 0.07%)</title><rect x="522.6" y="293" width="0.9" height="15.0" fill="rgb(254,50,13)" rx="2" ry="2" />
<text  x="525.65" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::operator* (11,500,000 samples, 0.12%)</title><rect x="1085.7" y="245" width="1.4" height="15.0" fill="rgb(228,137,28)" rx="2" ry="2" />
<text  x="1088.74" y="255.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (4,250,000 samples, 0.04%)</title><rect x="543.1" y="485" width="0.5" height="15.0" fill="rgb(239,213,50)" rx="2" ry="2" />
<text  x="546.12" y="495.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (3,750,000 samples, 0.04%)</title><rect x="525.4" y="293" width="0.5" height="15.0" fill="rgb(218,101,18)" rx="2" ry="2" />
<text  x="528.40" y="303.5" ></text>
</g>
<g >
<title>_cond_resched (1,500,000 samples, 0.02%)</title><rect x="52.4" y="373" width="0.2" height="15.0" fill="rgb(233,169,37)" rx="2" ry="2" />
<text  x="55.41" y="383.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::WriteBlock (196,250,000 samples, 2.03%)</title><rect x="700.9" y="197" width="24.0" height="15.0" fill="rgb(218,173,32)" rx="2" ry="2" />
<text  x="703.91" y="207.5" >l..</text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait (24,000,000 samples, 0.25%)</title><rect x="1084.2" y="261" width="2.9" height="15.0" fill="rgb(223,225,20)" rx="2" ry="2" />
<text  x="1087.21" y="271.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::key (33,750,000 samples, 0.35%)</title><rect x="630.8" y="229" width="4.2" height="15.0" fill="rgb(211,68,17)" rx="2" ry="2" />
<text  x="633.85" y="239.5" ></text>
</g>
<g >
<title>leveldb::Arena::Allocate (2,500,000 samples, 0.03%)</title><rect x="779.3" y="229" width="0.3" height="15.0" fill="rgb(236,137,43)" rx="2" ry="2" />
<text  x="782.26" y="239.5" ></text>
</g>
<g >
<title>page_fault (1,000,000 samples, 0.01%)</title><rect x="634.8" y="213" width="0.2" height="15.0" fill="rgb(225,30,4)" rx="2" ry="2" />
<text  x="637.85" y="223.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::key (6,000,000 samples, 0.06%)</title><rect x="634.1" y="213" width="0.7" height="15.0" fill="rgb(214,148,48)" rx="2" ry="2" />
<text  x="637.11" y="223.5" ></text>
</g>
<g >
<title>do_futex (53,250,000 samples, 0.55%)</title><rect x="553.5" y="421" width="6.5" height="15.0" fill="rgb(230,186,3)" rx="2" ry="2" />
<text  x="556.47" y="431.5" ></text>
</g>
<g >
<title>ext4_data_block_valid (9,250,000 samples, 0.10%)</title><rect x="410.3" y="277" width="1.1" height="15.0" fill="rgb(215,202,51)" rx="2" ry="2" />
<text  x="413.30" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (3,250,000 samples, 0.03%)</title><rect x="1073.9" y="245" width="0.4" height="15.0" fill="rgb(219,146,20)" rx="2" ry="2" />
<text  x="1076.90" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (18,250,000 samples, 0.19%)</title><rect x="461.3" y="277" width="2.2" height="15.0" fill="rgb(228,115,45)" rx="2" ry="2" />
<text  x="464.32" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::clear (1,000,000 samples, 0.01%)</title><rect x="701.7" y="165" width="0.1" height="15.0" fill="rgb(227,171,24)" rx="2" ry="2" />
<text  x="704.70" y="175.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (3,750,000 samples, 0.04%)</title><rect x="1153.9" y="117" width="0.5" height="15.0" fill="rgb(219,136,34)" rx="2" ry="2" />
<text  x="1156.90" y="127.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result_base*, false&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="598.1" y="277" width="0.1" height="15.0" fill="rgb(247,20,33)" rx="2" ry="2" />
<text  x="601.08" y="287.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::KeyBuffer::slice (7,250,000 samples, 0.07%)</title><rect x="735.1" y="309" width="0.9" height="15.0" fill="rgb(226,227,54)" rx="2" ry="2" />
<text  x="738.14" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="592.0" y="245" width="0.1" height="15.0" fill="rgb(205,159,11)" rx="2" ry="2" />
<text  x="594.98" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (4,496,500,000 samples, 46.51%)</title><rect x="626.2" y="453" width="548.8" height="15.0" fill="rgb(225,86,13)" rx="2" ry="2" />
<text  x="629.18" y="463.5" >[libstdc++.so.6.0.29]</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,750,000 samples, 0.02%)</title><rect x="580.0" y="245" width="0.3" height="15.0" fill="rgb(211,86,44)" rx="2" ry="2" />
<text  x="583.04" y="255.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Next (3,000,000 samples, 0.03%)</title><rect x="955.8" y="197" width="0.4" height="15.0" fill="rgb(242,30,1)" rx="2" ry="2" />
<text  x="958.81" y="207.5" ></text>
</g>
<g >
<title>kernel_fpu_end (1,750,000 samples, 0.02%)</title><rect x="522.8" y="229" width="0.2" height="15.0" fill="rgb(245,96,54)" rx="2" ry="2" />
<text  x="525.80" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,750,000 samples, 0.10%)</title><rect x="1186.5" y="485" width="1.2" height="15.0" fill="rgb(223,147,39)" rx="2" ry="2" />
<text  x="1189.46" y="495.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (2,500,000 samples, 0.03%)</title><rect x="454.1" y="277" width="0.4" height="15.0" fill="rgb(235,94,18)" rx="2" ry="2" />
<text  x="457.15" y="287.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixEnv::BackgroundThreadNodeMain (855,000,000 samples, 8.84%)</title><rect x="626.2" y="341" width="104.3" height="15.0" fill="rgb(218,71,35)" rx="2" ry="2" />
<text  x="629.18" y="351.5" >leveldb::(an..</text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter, true&gt; (3,500,000 samples, 0.04%)</title><rect x="1127.4" y="245" width="0.5" height="15.0" fill="rgb(240,140,3)" rx="2" ry="2" />
<text  x="1130.45" y="255.5" ></text>
</g>
<g >
<title>_IO_no_init (2,500,000 samples, 0.03%)</title><rect x="14.9" y="485" width="0.3" height="15.0" fill="rgb(207,173,35)" rx="2" ry="2" />
<text  x="17.85" y="495.5" ></text>
</g>
<g >
<title>rw_verify_area (16,500,000 samples, 0.17%)</title><rect x="538.0" y="389" width="2.0" height="15.0" fill="rgb(244,21,33)" rx="2" ry="2" />
<text  x="540.97" y="399.5" ></text>
</g>
<g >
<title>__kernel_fpu_end (2,750,000 samples, 0.03%)</title><rect x="451.7" y="213" width="0.3" height="15.0" fill="rgb(244,97,35)" rx="2" ry="2" />
<text  x="454.71" y="223.5" ></text>
</g>
<g >
<title>std::operator&amp; (1,000,000 samples, 0.01%)</title><rect x="804.3" y="165" width="0.1" height="15.0" fill="rgb(210,181,51)" rx="2" ry="2" />
<text  x="807.28" y="175.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (2,000,000 samples, 0.02%)</title><rect x="1054.0" y="245" width="0.2" height="15.0" fill="rgb(229,24,13)" rx="2" ry="2" />
<text  x="1056.97" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (12,250,000 samples, 0.13%)</title><rect x="596.7" y="325" width="1.5" height="15.0" fill="rgb(251,202,53)" rx="2" ry="2" />
<text  x="599.70" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,000,000 samples, 0.01%)</title><rect x="427.4" y="261" width="0.1" height="15.0" fill="rgb(245,41,0)" rx="2" ry="2" />
<text  x="430.36" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,000,000 samples, 0.04%)</title><rect x="591.8" y="277" width="0.4" height="15.0" fill="rgb(241,140,50)" rx="2" ry="2" />
<text  x="594.76" y="287.5" ></text>
</g>
<g >
<title>leveldb::port::CondVar::~CondVar (1,750,000 samples, 0.02%)</title><rect x="1051.3" y="277" width="0.2" height="15.0" fill="rgb(237,222,0)" rx="2" ry="2" />
<text  x="1054.26" y="287.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (65,250,000 samples, 0.67%)</title><rect x="400.0" y="293" width="8.0" height="15.0" fill="rgb(205,128,11)" rx="2" ry="2" />
<text  x="403.02" y="303.5" ></text>
</g>
<g >
<title>leveldb::BlockHandle::EncodeTo (1,500,000 samples, 0.02%)</title><rect x="690.1" y="213" width="0.2" height="15.0" fill="rgb(248,99,12)" rx="2" ry="2" />
<text  x="693.07" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_futex (9,750,000 samples, 0.10%)</title><rect x="548.4" y="453" width="1.2" height="15.0" fill="rgb(238,197,5)" rx="2" ry="2" />
<text  x="551.37" y="463.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Flush (11,250,000 samples, 0.12%)</title><rect x="991.1" y="261" width="1.4" height="15.0" fill="rgb(233,228,54)" rx="2" ry="2" />
<text  x="994.12" y="271.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_S_check&lt;std::__future_base::_State_baseV2&gt; (1,000,000 samples, 0.01%)</title><rect x="1104.6" y="261" width="0.1" height="15.0" fill="rgb(208,129,12)" rx="2" ry="2" />
<text  x="1107.56" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (76,500,000 samples, 0.79%)</title><rect x="1145.1" y="149" width="9.3" height="15.0" fill="rgb(244,18,50)" rx="2" ry="2" />
<text  x="1148.05" y="159.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::SetNext (2,000,000 samples, 0.02%)</title><rect x="966.5" y="213" width="0.2" height="15.0" fill="rgb(221,199,36)" rx="2" ry="2" />
<text  x="969.46" y="223.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (14,250,000 samples, 0.15%)</title><rect x="691.3" y="197" width="1.8" height="15.0" fill="rgb(209,82,13)" rx="2" ry="2" />
<text  x="694.33" y="207.5" ></text>
</g>
<g >
<title>memcpy@plt (1,500,000 samples, 0.02%)</title><rect x="1169.9" y="293" width="0.2" height="15.0" fill="rgb(219,27,51)" rx="2" ry="2" />
<text  x="1172.89" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (1,250,000 samples, 0.01%)</title><rect x="1087.4" y="245" width="0.1" height="15.0" fill="rgb(210,59,22)" rx="2" ry="2" />
<text  x="1090.38" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_Head_base&lt;std::__future_base::_Result_base::_Deleter&gt; (1,000,000 samples, 0.01%)</title><rect x="587.0" y="261" width="0.2" height="15.0" fill="rgb(237,28,7)" rx="2" ry="2" />
<text  x="590.03" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (5,000,000 samples, 0.05%)</title><rect x="604.8" y="437" width="0.6" height="15.0" fill="rgb(250,91,43)" rx="2" ry="2" />
<text  x="607.79" y="447.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (1,250,000 samples, 0.01%)</title><rect x="759.2" y="261" width="0.2" height="15.0" fill="rgb(235,217,34)" rx="2" ry="2" />
<text  x="762.25" y="271.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (20,750,000 samples, 0.21%)</title><rect x="765.3" y="277" width="2.5" height="15.0" fill="rgb(219,88,12)" rx="2" ry="2" />
<text  x="768.26" y="287.5" ></text>
</g>
<g >
<title>path_openat (2,250,000 samples, 0.02%)</title><rect x="628.0" y="133" width="0.3" height="15.0" fill="rgb(217,69,30)" rx="2" ry="2" />
<text  x="631.04" y="143.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (5,000,000 samples, 0.05%)</title><rect x="1164.3" y="261" width="0.6" height="15.0" fill="rgb(250,177,25)" rx="2" ry="2" />
<text  x="1167.31" y="271.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Finish (2,000,000 samples, 0.02%)</title><rect x="728.9" y="229" width="0.2" height="15.0" fill="rgb(234,174,31)" rx="2" ry="2" />
<text  x="731.89" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (3,500,000 samples, 0.04%)</title><rect x="1144.3" y="149" width="0.4" height="15.0" fill="rgb(219,88,26)" rx="2" ry="2" />
<text  x="1147.29" y="159.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (6,750,000 samples, 0.07%)</title><rect x="579.4" y="293" width="0.9" height="15.0" fill="rgb(234,16,36)" rx="2" ry="2" />
<text  x="582.43" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (1,500,000 samples, 0.02%)</title><rect x="1167.9" y="293" width="0.2" height="15.0" fill="rgb(224,12,26)" rx="2" ry="2" />
<text  x="1170.91" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (1,500,000 samples, 0.02%)</title><rect x="659.0" y="181" width="0.2" height="15.0" fill="rgb(211,91,32)" rx="2" ry="2" />
<text  x="662.04" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,000,000 samples, 0.04%)</title><rect x="29.7" y="469" width="0.5" height="15.0" fill="rgb(230,42,47)" rx="2" ry="2" />
<text  x="32.74" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (1,500,000 samples, 0.02%)</title><rect x="596.5" y="325" width="0.2" height="15.0" fill="rgb(230,136,54)" rx="2" ry="2" />
<text  x="599.52" y="335.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (2,500,000 samples, 0.03%)</title><rect x="765.0" y="277" width="0.3" height="15.0" fill="rgb(250,159,24)" rx="2" ry="2" />
<text  x="767.95" y="287.5" ></text>
</g>
<g >
<title>ext4_write_checks (1,000,000 samples, 0.01%)</title><rect x="529.1" y="357" width="0.2" height="15.0" fill="rgb(250,134,10)" rx="2" ry="2" />
<text  x="532.15" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (1,750,000 samples, 0.02%)</title><rect x="1157.8" y="293" width="0.2" height="15.0" fill="rgb(222,205,35)" rx="2" ry="2" />
<text  x="1160.81" y="303.5" ></text>
</g>
<g >
<title>[unknown] (9,557,000,000 samples, 98.85%)</title><rect x="10.1" y="501" width="1166.4" height="15.0" fill="rgb(217,119,35)" rx="2" ry="2" />
<text  x="13.06" y="511.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (1,500,000 samples, 0.02%)</title><rect x="584.7" y="325" width="0.1" height="15.0" fill="rgb(245,128,24)" rx="2" ry="2" />
<text  x="587.65" y="335.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (12,000,000 samples, 0.12%)</title><rect x="933.4" y="149" width="1.5" height="15.0" fill="rgb(233,101,51)" rx="2" ry="2" />
<text  x="936.42" y="159.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (2,250,000 samples, 0.02%)</title><rect x="1154.1" y="101" width="0.3" height="15.0" fill="rgb(213,81,54)" rx="2" ry="2" />
<text  x="1157.09" y="111.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (3,000,000 samples, 0.03%)</title><rect x="1155.2" y="213" width="0.4" height="15.0" fill="rgb(208,42,34)" rx="2" ry="2" />
<text  x="1158.22" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (1,000,000 samples, 0.01%)</title><rect x="634.8" y="181" width="0.2" height="15.0" fill="rgb(212,201,52)" rx="2" ry="2" />
<text  x="637.85" y="191.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Handler::Handler (1,250,000 samples, 0.01%)</title><rect x="771.8" y="245" width="0.2" height="15.0" fill="rgb(247,17,21)" rx="2" ry="2" />
<text  x="774.85" y="255.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (11,250,000 samples, 0.12%)</title><rect x="654.8" y="181" width="1.4" height="15.0" fill="rgb(240,108,42)" rx="2" ry="2" />
<text  x="657.83" y="191.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Value (179,500,000 samples, 1.86%)</title><rect x="702.7" y="165" width="21.9" height="15.0" fill="rgb(249,157,15)" rx="2" ry="2" />
<text  x="705.71" y="175.5" >l..</text>
</g>
<g >
<title>operator new (1,250,000 samples, 0.01%)</title><rect x="1076.3" y="213" width="0.2" height="15.0" fill="rgb(241,138,20)" rx="2" ry="2" />
<text  x="1079.34" y="223.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (12,500,000 samples, 0.13%)</title><rect x="1011.8" y="245" width="1.5" height="15.0" fill="rgb(218,44,20)" rx="2" ry="2" />
<text  x="1014.77" y="255.5" ></text>
</g>
<g >
<title>_cond_resched (3,250,000 samples, 0.03%)</title><rect x="491.8" y="277" width="0.4" height="15.0" fill="rgb(205,83,39)" rx="2" ry="2" />
<text  x="494.80" y="287.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint64 (1,250,000 samples, 0.01%)</title><rect x="690.1" y="181" width="0.1" height="15.0" fill="rgb(235,0,2)" rx="2" ry="2" />
<text  x="693.07" y="191.5" ></text>
</g>
<g >
<title>__snprintf (2,250,000 samples, 0.02%)</title><rect x="734.7" y="309" width="0.3" height="15.0" fill="rgb(213,48,0)" rx="2" ry="2" />
<text  x="737.72" y="319.5" ></text>
</g>
<g >
<title>do_unlinkat (2,250,000 samples, 0.02%)</title><rect x="30.4" y="357" width="0.3" height="15.0" fill="rgb(239,205,3)" rx="2" ry="2" />
<text  x="33.44" y="367.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (8,250,000 samples, 0.09%)</title><rect x="767.8" y="277" width="1.0" height="15.0" fill="rgb(241,93,51)" rx="2" ry="2" />
<text  x="770.79" y="287.5" ></text>
</g>
<g >
<title>leveldb::log::Writer::AddRecord (509,500,000 samples, 5.27%)</title><rect x="989.0" y="277" width="62.2" height="15.0" fill="rgb(220,149,47)" rx="2" ry="2" />
<text  x="992.04" y="287.5" >leveld..</text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::key (1,250,000 samples, 0.01%)</title><rect x="640.5" y="229" width="0.2" height="15.0" fill="rgb(209,53,39)" rx="2" ry="2" />
<text  x="643.52" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (1,000,000 samples, 0.01%)</title><rect x="584.5" y="325" width="0.2" height="15.0" fill="rgb(253,47,30)" rx="2" ry="2" />
<text  x="587.53" y="335.5" ></text>
</g>
<g >
<title>down_write (8,500,000 samples, 0.09%)</title><rect x="477.2" y="309" width="1.1" height="15.0" fill="rgb(252,1,42)" rx="2" ry="2" />
<text  x="480.25" y="319.5" ></text>
</g>
<g >
<title>mutex_unlock (7,500,000 samples, 0.08%)</title><rect x="48.1" y="405" width="1.0" height="15.0" fill="rgb(252,67,18)" rx="2" ry="2" />
<text  x="51.14" y="415.5" ></text>
</g>
<g >
<title>leveldb::Random::OneIn (16,750,000 samples, 0.17%)</title><rect x="963.3" y="181" width="2.0" height="15.0" fill="rgb(224,119,17)" rx="2" ry="2" />
<text  x="966.26" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (2,750,000 samples, 0.03%)</title><rect x="1074.0" y="229" width="0.3" height="15.0" fill="rgb(247,227,0)" rx="2" ry="2" />
<text  x="1076.96" y="239.5" ></text>
</g>
<g >
<title>__wake_up (27,250,000 samples, 0.28%)</title><rect x="402.9" y="277" width="3.3" height="15.0" fill="rgb(229,41,45)" rx="2" ry="2" />
<text  x="405.92" y="287.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_retrieved_flag (9,750,000 samples, 0.10%)</title><rect x="1098.9" y="245" width="1.2" height="15.0" fill="rgb(207,193,15)" rx="2" ry="2" />
<text  x="1101.95" y="255.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (4,500,000 samples, 0.05%)</title><rect x="1082.5" y="277" width="0.5" height="15.0" fill="rgb(228,223,34)" rx="2" ry="2" />
<text  x="1085.47" y="287.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (296,000,000 samples, 3.06%)</title><rect x="831.3" y="149" width="36.1" height="15.0" fill="rgb(250,184,26)" rx="2" ry="2" />
<text  x="834.29" y="159.5" >lev..</text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (9,500,000 samples, 0.10%)</title><rect x="632.7" y="197" width="1.2" height="15.0" fill="rgb(248,206,53)" rx="2" ry="2" />
<text  x="635.71" y="207.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::MakeRoomForWrite (29,500,000 samples, 0.31%)</title><rect x="753.7" y="277" width="3.6" height="15.0" fill="rgb(219,114,5)" rx="2" ry="2" />
<text  x="756.69" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt; (5,250,000 samples, 0.05%)</title><rect x="1056.3" y="261" width="0.6" height="15.0" fill="rgb(235,96,28)" rx="2" ry="2" />
<text  x="1059.26" y="271.5" ></text>
</g>
<g >
<title>leveldb::test::CompressibleString (14,500,000 samples, 0.15%)</title><rect x="737.5" y="293" width="1.7" height="15.0" fill="rgb(213,63,26)" rx="2" ry="2" />
<text  x="740.46" y="303.5" ></text>
</g>
<g >
<title>security_file_permission (13,250,000 samples, 0.14%)</title><rect x="538.4" y="373" width="1.6" height="15.0" fill="rgb(235,95,23)" rx="2" ry="2" />
<text  x="541.36" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (1,500,000 samples, 0.02%)</title><rect x="633.9" y="197" width="0.2" height="15.0" fill="rgb(250,98,33)" rx="2" ry="2" />
<text  x="636.87" y="207.5" ></text>
</g>
<g >
<title>seq_read (9,500,000 samples, 0.10%)</title><rect x="1186.5" y="373" width="1.2" height="15.0" fill="rgb(221,109,37)" rx="2" ry="2" />
<text  x="1189.49" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::operator* (1,250,000 samples, 0.01%)</title><rect x="1087.6" y="261" width="0.2" height="15.0" fill="rgb(249,155,1)" rx="2" ry="2" />
<text  x="1090.60" y="271.5" ></text>
</g>
<g >
<title>std::operator==&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt; (2,500,000 samples, 0.03%)</title><rect x="749.6" y="245" width="0.3" height="15.0" fill="rgb(246,210,42)" rx="2" ry="2" />
<text  x="752.61" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (16,750,000 samples, 0.17%)</title><rect x="403.9" y="245" width="2.0" height="15.0" fill="rgb(245,57,28)" rx="2" ry="2" />
<text  x="406.89" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="580.1" y="229" width="0.2" height="15.0" fill="rgb(209,89,15)" rx="2" ry="2" />
<text  x="583.14" y="239.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (48,500,000 samples, 0.50%)</title><rect x="1089.2" y="245" width="5.9" height="15.0" fill="rgb(208,214,40)" rx="2" ry="2" />
<text  x="1092.15" y="255.5" ></text>
</g>
<g >
<title>_pthread_cleanup_pop (4,750,000 samples, 0.05%)</title><rect x="606.4" y="485" width="0.6" height="15.0" fill="rgb(250,213,21)" rx="2" ry="2" />
<text  x="609.38" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_M_head (1,250,000 samples, 0.01%)</title><rect x="1157.4" y="197" width="0.2" height="15.0" fill="rgb(219,193,9)" rx="2" ry="2" />
<text  x="1160.44" y="207.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1,000,000 samples, 0.01%)</title><rect x="606.3" y="485" width="0.1" height="15.0" fill="rgb(206,119,42)" rx="2" ry="2" />
<text  x="609.26" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (8,000,000 samples, 0.08%)</title><rect x="578.2" y="309" width="1.0" height="15.0" fill="rgb(248,110,32)" rx="2" ry="2" />
<text  x="581.24" y="319.5" ></text>
</g>
<g >
<title>leveldb::Arena::AllocateAligned (3,750,000 samples, 0.04%)</title><rect x="955.1" y="181" width="0.5" height="15.0" fill="rgb(217,62,25)" rx="2" ry="2" />
<text  x="958.14" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::operator* (1,750,000 samples, 0.02%)</title><rect x="1057.7" y="261" width="0.2" height="15.0" fill="rgb(229,127,16)" rx="2" ry="2" />
<text  x="1060.70" y="271.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (140,000,000 samples, 1.45%)</title><rect x="1108.1" y="213" width="17.1" height="15.0" fill="rgb(234,7,2)" rx="2" ry="2" />
<text  x="1111.13" y="223.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::~_Result (8,500,000 samples, 0.09%)</title><rect x="1150.7" y="117" width="1.0" height="15.0" fill="rgb(231,198,34)" rx="2" ry="2" />
<text  x="1153.67" y="127.5" ></text>
</g>
<g >
<title>__pthread_once (2,500,000 samples, 0.03%)</title><rect x="1071.0" y="229" width="0.3" height="15.0" fill="rgb(235,100,44)" rx="2" ry="2" />
<text  x="1073.97" y="239.5" ></text>
</g>
<g >
<title>exit_mmap (1,500,000 samples, 0.02%)</title><rect x="1183.1" y="405" width="0.2" height="15.0" fill="rgb(235,93,41)" rx="2" ry="2" />
<text  x="1186.10" y="415.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.11 (2,500,000 samples, 0.03%)</title><rect x="454.5" y="245" width="0.3" height="15.0" fill="rgb(252,0,40)" rx="2" ry="2" />
<text  x="457.45" y="255.5" ></text>
</g>
<g >
<title>up_write (1,500,000 samples, 0.02%)</title><rect x="535.9" y="373" width="0.2" height="15.0" fill="rgb(253,154,2)" rx="2" ry="2" />
<text  x="538.89" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (8,250,000 samples, 0.09%)</title><rect x="973.4" y="213" width="1.0" height="15.0" fill="rgb(253,187,32)" rx="2" ry="2" />
<text  x="976.42" y="223.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (1,250,000 samples, 0.01%)</title><rect x="421.8" y="261" width="0.1" height="15.0" fill="rgb(243,159,18)" rx="2" ry="2" />
<text  x="424.77" y="271.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (11,500,000 samples, 0.12%)</title><rect x="415.2" y="293" width="1.4" height="15.0" fill="rgb(248,121,16)" rx="2" ry="2" />
<text  x="418.21" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1,250,000 samples, 0.01%)</title><rect x="1170.6" y="293" width="0.1" height="15.0" fill="rgb(251,133,23)" rx="2" ry="2" />
<text  x="1173.56" y="303.5" ></text>
</g>
<g >
<title>crypto_shash_update (5,750,000 samples, 0.06%)</title><rect x="417.3" y="229" width="0.7" height="15.0" fill="rgb(235,58,41)" rx="2" ry="2" />
<text  x="420.26" y="239.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (14,750,000 samples, 0.15%)</title><rect x="929.3" y="133" width="1.8" height="15.0" fill="rgb(229,193,44)" rx="2" ry="2" />
<text  x="932.33" y="143.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::Valid (1,250,000 samples, 0.01%)</title><rect x="730.1" y="245" width="0.1" height="15.0" fill="rgb(241,24,36)" rx="2" ry="2" />
<text  x="733.08" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (341,500,000 samples, 3.53%)</title><rect x="561.9" y="421" width="41.7" height="15.0" fill="rgb(207,152,10)" rx="2" ry="2" />
<text  x="564.92" y="431.5" >std..</text>
</g>
<g >
<title>prefetch_freepointer (2,000,000 samples, 0.02%)</title><rect x="463.3" y="261" width="0.2" height="15.0" fill="rgb(223,68,47)" rx="2" ry="2" />
<text  x="466.27" y="271.5" ></text>
</g>
<g >
<title>leveldb::VersionSet::NumLevelFiles (13,000,000 samples, 0.13%)</title><rect x="755.2" y="261" width="1.6" height="15.0" fill="rgb(223,225,18)" rx="2" ry="2" />
<text  x="758.22" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base*&amp;, std::__future_base::_Result_base::_Deleter, void&gt; (13,500,000 samples, 0.14%)</title><rect x="585.8" y="293" width="1.6" height="15.0" fill="rgb(222,91,12)" rx="2" ry="2" />
<text  x="588.78" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_write (1,000,000 samples, 0.01%)</title><rect x="30.2" y="485" width="0.2" height="15.0" fill="rgb(220,52,33)" rx="2" ry="2" />
<text  x="33.23" y="495.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::MemTableInserter (3,500,000 samples, 0.04%)</title><rect x="771.6" y="261" width="0.4" height="15.0" fill="rgb(251,170,21)" rx="2" ry="2" />
<text  x="774.57" y="271.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (24,250,000 samples, 0.25%)</title><rect x="403.0" y="261" width="2.9" height="15.0" fill="rgb(238,113,22)" rx="2" ry="2" />
<text  x="405.98" y="271.5" ></text>
</g>
<g >
<title>dax_direct_access (12,500,000 samples, 0.13%)</title><rect x="78.5" y="309" width="1.6" height="15.0" fill="rgb(208,153,53)" rx="2" ry="2" />
<text  x="81.53" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (1,500,000 samples, 0.02%)</title><rect x="585.4" y="309" width="0.2" height="15.0" fill="rgb(245,11,15)" rx="2" ry="2" />
<text  x="588.38" y="319.5" ></text>
</g>
<g >
<title>leveldb::Status::OK (1,500,000 samples, 0.02%)</title><rect x="1006.7" y="213" width="0.2" height="15.0" fill="rgb(244,31,39)" rx="2" ry="2" />
<text  x="1009.71" y="223.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (27,000,000 samples, 0.28%)</title><rect x="1068.3" y="245" width="3.2" height="15.0" fill="rgb(244,68,34)" rx="2" ry="2" />
<text  x="1071.25" y="255.5" ></text>
</g>
<g >
<title>add_transaction_credits (10,500,000 samples, 0.11%)</title><rect x="468.3" y="261" width="1.3" height="15.0" fill="rgb(224,193,7)" rx="2" ry="2" />
<text  x="471.31" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_State_baseV2*&gt; (2,000,000 samples, 0.02%)</title><rect x="604.0" y="421" width="0.3" height="15.0" fill="rgb(245,9,2)" rx="2" ry="2" />
<text  x="607.03" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1,000,000 samples, 0.01%)</title><rect x="688.4" y="197" width="0.1" height="15.0" fill="rgb(254,173,10)" rx="2" ry="2" />
<text  x="691.37" y="207.5" ></text>
</g>
<g >
<title>generic_make_request_checks (2,250,000 samples, 0.02%)</title><rect x="429.2" y="213" width="0.2" height="15.0" fill="rgb(242,115,5)" rx="2" ry="2" />
<text  x="432.16" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (1,000,000 samples, 0.01%)</title><rect x="1105.7" y="277" width="0.1" height="15.0" fill="rgb(212,136,54)" rx="2" ry="2" />
<text  x="1108.66" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (1,000,000 samples, 0.01%)</title><rect x="1142.7" y="181" width="0.1" height="15.0" fill="rgb(225,45,44)" rx="2" ry="2" />
<text  x="1145.67" y="191.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_retrieved_flag (4,000,000 samples, 0.04%)</title><rect x="1104.1" y="261" width="0.5" height="15.0" fill="rgb(251,193,40)" rx="2" ry="2" />
<text  x="1107.08" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (2,000,000 samples, 0.02%)</title><rect x="604.3" y="421" width="0.2" height="15.0" fill="rgb(224,74,33)" rx="2" ry="2" />
<text  x="607.27" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (3,250,000 samples, 0.03%)</title><rect x="1142.4" y="197" width="0.4" height="15.0" fill="rgb(230,70,32)" rx="2" ry="2" />
<text  x="1145.40" y="207.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::NewNode (9,000,000 samples, 0.09%)</title><rect x="954.7" y="197" width="1.1" height="15.0" fill="rgb(215,15,12)" rx="2" ry="2" />
<text  x="957.71" y="207.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (4,250,000 samples, 0.04%)</title><rect x="562.9" y="405" width="0.5" height="15.0" fill="rgb(231,90,36)" rx="2" ry="2" />
<text  x="565.87" y="415.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (15,750,000 samples, 0.16%)</title><rect x="1140.5" y="197" width="1.9" height="15.0" fill="rgb(236,129,32)" rx="2" ry="2" />
<text  x="1143.48" y="207.5" ></text>
</g>
<g >
<title>__pmem_direct_access (5,500,000 samples, 0.06%)</title><rect x="79.4" y="277" width="0.7" height="15.0" fill="rgb(232,58,50)" rx="2" ry="2" />
<text  x="82.39" y="287.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed32 (7,750,000 samples, 0.08%)</title><rect x="1168.9" y="277" width="1.0" height="15.0" fill="rgb(206,43,19)" rx="2" ry="2" />
<text  x="1171.95" y="287.5" ></text>
</g>
<g >
<title>ext4_mb_mark_diskspace_used (37,250,000 samples, 0.39%)</title><rect x="422.4" y="261" width="4.5" height="15.0" fill="rgb(249,183,41)" rx="2" ry="2" />
<text  x="425.35" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_Result_base*&amp;&gt; (1,250,000 samples, 0.01%)</title><rect x="598.6" y="341" width="0.1" height="15.0" fill="rgb(254,184,29)" rx="2" ry="2" />
<text  x="601.57" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (2,250,000 samples, 0.02%)</title><rect x="994.7" y="229" width="0.2" height="15.0" fill="rgb(245,52,13)" rx="2" ry="2" />
<text  x="997.66" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (2,500,000 samples, 0.03%)</title><rect x="1153.2" y="133" width="0.3" height="15.0" fill="rgb(225,71,5)" rx="2" ry="2" />
<text  x="1156.23" y="143.5" ></text>
</g>
<g >
<title>pmem_copy_from_iter (85,500,000 samples, 0.88%)</title><rect x="68.1" y="293" width="10.4" height="15.0" fill="rgb(239,160,13)" rx="2" ry="2" />
<text  x="71.10" y="303.5" ></text>
</g>
<g >
<title>common_file_perm (1,250,000 samples, 0.01%)</title><rect x="539.8" y="357" width="0.2" height="15.0" fill="rgb(234,173,10)" rx="2" ry="2" />
<text  x="542.83" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (2,750,000 samples, 0.03%)</title><rect x="591.9" y="261" width="0.3" height="15.0" fill="rgb(222,129,41)" rx="2" ry="2" />
<text  x="594.91" y="271.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (2,750,000 samples, 0.03%)</title><rect x="578.7" y="261" width="0.4" height="15.0" fill="rgb(207,158,52)" rx="2" ry="2" />
<text  x="581.73" y="271.5" ></text>
</g>
<g >
<title>pmem_dax_direct_access (9,000,000 samples, 0.09%)</title><rect x="79.0" y="293" width="1.1" height="15.0" fill="rgb(212,127,7)" rx="2" ry="2" />
<text  x="81.96" y="303.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (10,000,000 samples, 0.10%)</title><rect x="1158.7" y="309" width="1.2" height="15.0" fill="rgb(229,90,31)" rx="2" ry="2" />
<text  x="1161.66" y="319.5" ></text>
</g>
<g >
<title>crypto_shash_update (8,250,000 samples, 0.09%)</title><rect x="451.5" y="261" width="1.0" height="15.0" fill="rgb(237,89,42)" rx="2" ry="2" />
<text  x="454.49" y="271.5" ></text>
</g>
<g >
<title>std::mutex::lock (10,000,000 samples, 0.10%)</title><rect x="761.6" y="245" width="1.2" height="15.0" fill="rgb(222,24,48)" rx="2" ry="2" />
<text  x="764.63" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (4,500,000 samples, 0.05%)</title><rect x="1126.7" y="245" width="0.5" height="15.0" fill="rgb(235,98,34)" rx="2" ry="2" />
<text  x="1129.69" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (2,250,000 samples, 0.02%)</title><rect x="30.4" y="373" width="0.3" height="15.0" fill="rgb(248,176,29)" rx="2" ry="2" />
<text  x="33.44" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (96,250,000 samples, 1.00%)</title><rect x="1109.7" y="197" width="11.7" height="15.0" fill="rgb(206,3,9)" rx="2" ry="2" />
<text  x="1112.69" y="207.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (1,250,000 samples, 0.01%)</title><rect x="540.5" y="373" width="0.2" height="15.0" fill="rgb(229,161,0)" rx="2" ry="2" />
<text  x="543.50" y="383.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (11,750,000 samples, 0.12%)</title><rect x="452.7" y="293" width="1.4" height="15.0" fill="rgb(223,176,1)" rx="2" ry="2" />
<text  x="455.68" y="303.5" ></text>
</g>
<g >
<title>fsnotify (1,750,000 samples, 0.02%)</title><rect x="47.9" y="405" width="0.2" height="15.0" fill="rgb(247,144,5)" rx="2" ry="2" />
<text  x="50.93" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::remove_prefix (10,500,000 samples, 0.11%)</title><rect x="981.4" y="245" width="1.2" height="15.0" fill="rgb(236,215,38)" rx="2" ry="2" />
<text  x="984.35" y="255.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Lock (12,500,000 samples, 0.13%)</title><rect x="761.3" y="261" width="1.5" height="15.0" fill="rgb(221,155,5)" rx="2" ry="2" />
<text  x="764.32" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (1,500,000 samples, 0.02%)</title><rect x="688.2" y="197" width="0.2" height="15.0" fill="rgb(226,74,35)" rx="2" ry="2" />
<text  x="691.18" y="207.5" ></text>
</g>
<g >
<title>_raw_read_lock (7,000,000 samples, 0.07%)</title><rect x="411.4" y="293" width="0.9" height="15.0" fill="rgb(237,40,28)" rx="2" ry="2" />
<text  x="414.43" y="303.5" ></text>
</g>
<g >
<title>complete (65,250,000 samples, 0.67%)</title><rect x="430.1" y="165" width="8.0" height="15.0" fill="rgb(253,171,5)" rx="2" ry="2" />
<text  x="433.13" y="175.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (19,500,000 samples, 0.20%)</title><rect x="1008.5" y="245" width="2.4" height="15.0" fill="rgb(239,225,22)" rx="2" ry="2" />
<text  x="1011.51" y="255.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1,500,000 samples, 0.02%)</title><rect x="426.2" y="197" width="0.2" height="15.0" fill="rgb(225,56,8)" rx="2" ry="2" />
<text  x="429.17" y="207.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (3,000,000 samples, 0.03%)</title><rect x="655.8" y="165" width="0.3" height="15.0" fill="rgb(233,41,42)" rx="2" ry="2" />
<text  x="658.78" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::allocator (2,500,000 samples, 0.03%)</title><rect x="1124.6" y="197" width="0.3" height="15.0" fill="rgb(250,175,53)" rx="2" ry="2" />
<text  x="1127.58" y="207.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (6,000,000 samples, 0.06%)</title><rect x="1123.5" y="197" width="0.7" height="15.0" fill="rgb(230,106,42)" rx="2" ry="2" />
<text  x="1126.51" y="207.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::Benchmark (3,000,000 samples, 0.03%)</title><rect x="30.4" y="453" width="0.4" height="15.0" fill="rgb(228,76,46)" rx="2" ry="2" />
<text  x="33.41" y="463.5" ></text>
</g>
<g >
<title>ext4_map_blocks (332,750,000 samples, 3.44%)</title><rect x="409.0" y="309" width="40.7" height="15.0" fill="rgb(237,144,4)" rx="2" ry="2" />
<text  x="412.05" y="319.5" >ext..</text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (18,000,000 samples, 0.19%)</title><rect x="631.9" y="213" width="2.2" height="15.0" fill="rgb(208,98,52)" rx="2" ry="2" />
<text  x="634.86" y="223.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (4,750,000 samples, 0.05%)</title><rect x="974.4" y="213" width="0.6" height="15.0" fill="rgb(234,220,52)" rx="2" ry="2" />
<text  x="977.43" y="223.5" ></text>
</g>
<g >
<title>std::condition_variable::condition_variable (2,000,000 samples, 0.02%)</title><rect x="758.8" y="261" width="0.2" height="15.0" fill="rgb(217,46,30)" rx="2" ry="2" />
<text  x="761.76" y="271.5" ></text>
</g>
<g >
<title>memcpy@plt (1,500,000 samples, 0.02%)</title><rect x="726.4" y="213" width="0.1" height="15.0" fill="rgb(240,218,42)" rx="2" ry="2" />
<text  x="729.35" y="223.5" ></text>
</g>
<g >
<title>leveldb::PutFixed32 (2,250,000 samples, 0.02%)</title><rect x="701.3" y="165" width="0.2" height="15.0" fill="rgb(224,153,18)" rx="2" ry="2" />
<text  x="704.27" y="175.5" ></text>
</g>
<g >
<title>__getblk_gfp (25,250,000 samples, 0.26%)</title><rect x="516.1" y="261" width="3.1" height="15.0" fill="rgb(222,215,15)" rx="2" ry="2" />
<text  x="519.09" y="271.5" ></text>
</g>
<g >
<title>snappy::UncheckedByteArraySink::~UncheckedByteArraySink (2,500,000 samples, 0.03%)</title><rect x="607.3" y="485" width="0.3" height="15.0" fill="rgb(238,34,31)" rx="2" ry="2" />
<text  x="610.32" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::swap (64,000,000 samples, 0.66%)</title><rect x="593.2" y="373" width="7.8" height="15.0" fill="rgb(212,140,5)" rx="2" ry="2" />
<text  x="596.17" y="383.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (3,500,000 samples, 0.04%)</title><rect x="453.5" y="229" width="0.5" height="15.0" fill="rgb(254,206,54)" rx="2" ry="2" />
<text  x="456.54" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_write (13,250,000 samples, 0.14%)</title><rect x="33.9" y="453" width="1.6" height="15.0" fill="rgb(223,214,45)" rx="2" ry="2" />
<text  x="36.92" y="463.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::RandomHeight (2,000,000 samples, 0.02%)</title><rect x="966.7" y="213" width="0.2" height="15.0" fill="rgb(231,172,9)" rx="2" ry="2" />
<text  x="969.71" y="223.5" ></text>
</g>
<g >
<title>[unknown] (4,496,500,000 samples, 46.51%)</title><rect x="626.2" y="469" width="548.8" height="15.0" fill="rgb(217,150,5)" rx="2" ry="2" />
<text  x="629.18" y="479.5" >[unknown]</text>
</g>
<g >
<title>ext4_inode_csum_set (2,750,000 samples, 0.03%)</title><rect x="418.1" y="213" width="0.3" height="15.0" fill="rgb(252,142,5)" rx="2" ry="2" />
<text  x="421.08" y="223.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (14,500,000 samples, 0.15%)</title><rect x="17.2" y="469" width="1.8" height="15.0" fill="rgb(214,10,9)" rx="2" ry="2" />
<text  x="20.23" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (24,500,000 samples, 0.25%)</title><rect x="1090.1" y="229" width="3.0" height="15.0" fill="rgb(249,83,54)" rx="2" ry="2" />
<text  x="1093.07" y="239.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (2,250,000 samples, 0.02%)</title><rect x="773.5" y="261" width="0.3" height="15.0" fill="rgb(238,34,32)" rx="2" ry="2" />
<text  x="776.53" y="271.5" ></text>
</g>
<g >
<title>kernel_fpu_end (1,500,000 samples, 0.02%)</title><rect x="417.4" y="197" width="0.2" height="15.0" fill="rgb(236,42,49)" rx="2" ry="2" />
<text  x="420.44" y="207.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (1,500,000 samples, 0.02%)</title><rect x="1148.0" y="85" width="0.1" height="15.0" fill="rgb(249,59,27)" rx="2" ry="2" />
<text  x="1150.95" y="95.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl (2,500,000 samples, 0.03%)</title><rect x="1127.5" y="229" width="0.3" height="15.0" fill="rgb(229,26,41)" rx="2" ry="2" />
<text  x="1130.54" y="239.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (3,250,000 samples, 0.03%)</title><rect x="685.7" y="181" width="0.3" height="15.0" fill="rgb(219,87,1)" rx="2" ry="2" />
<text  x="688.65" y="191.5" ></text>
</g>
<g >
<title>memcmp@plt (4,500,000 samples, 0.05%)</title><rect x="903.5" y="117" width="0.6" height="15.0" fill="rgb(216,89,13)" rx="2" ry="2" />
<text  x="906.51" y="127.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,500,000 samples, 0.05%)</title><rect x="977.5" y="213" width="0.6" height="15.0" fill="rgb(229,152,17)" rx="2" ry="2" />
<text  x="980.51" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (7,000,000 samples, 0.07%)</title><rect x="597.3" y="309" width="0.9" height="15.0" fill="rgb(254,210,34)" rx="2" ry="2" />
<text  x="600.35" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (1,250,000 samples, 0.01%)</title><rect x="602.3" y="357" width="0.1" height="15.0" fill="rgb(249,217,48)" rx="2" ry="2" />
<text  x="605.29" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_set (9,000,000 samples, 0.09%)</title><rect x="570.8" y="325" width="1.1" height="15.0" fill="rgb(223,26,37)" rx="2" ry="2" />
<text  x="573.77" y="335.5" ></text>
</g>
<g >
<title>submit_bio (170,000,000 samples, 1.76%)</title><rect x="428.9" y="245" width="20.7" height="15.0" fill="rgb(245,2,39)" rx="2" ry="2" />
<text  x="431.88" y="255.5" ></text>
</g>
<g >
<title>leveldb::VersionSet::SetLastSequence (7,000,000 samples, 0.07%)</title><rect x="769.0" y="277" width="0.8" height="15.0" fill="rgb(246,115,31)" rx="2" ry="2" />
<text  x="771.95" y="287.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::~_State_baseV2 (85,250,000 samples, 0.88%)</title><rect x="1144.0" y="165" width="10.4" height="15.0" fill="rgb(219,31,7)" rx="2" ry="2" />
<text  x="1146.99" y="175.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (2,500,000 samples, 0.03%)</title><rect x="575.0" y="293" width="0.3" height="15.0" fill="rgb(235,186,12)" rx="2" ry="2" />
<text  x="577.98" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::~_State_baseV2 (1,500,000 samples, 0.02%)</title><rect x="1154.5" y="181" width="0.1" height="15.0" fill="rgb(246,163,0)" rx="2" ry="2" />
<text  x="1157.45" y="191.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Write (3,425,750,000 samples, 35.43%)</title><rect x="740.1" y="309" width="418.2" height="15.0" fill="rgb(224,66,8)" rx="2" ry="2" />
<text  x="743.15" y="319.5" >leveldb::DBImpl::Write</text>
</g>
<g >
<title>__kernel_fpu_begin (2,750,000 samples, 0.03%)</title><rect x="423.1" y="181" width="0.3" height="15.0" fill="rgb(207,140,25)" rx="2" ry="2" />
<text  x="426.09" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (3,000,000 samples, 0.03%)</title><rect x="1167.1" y="277" width="0.4" height="15.0" fill="rgb(237,86,34)" rx="2" ry="2" />
<text  x="1170.08" y="287.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::store (5,750,000 samples, 0.06%)</title><rect x="965.4" y="197" width="0.7" height="15.0" fill="rgb(226,168,24)" rx="2" ry="2" />
<text  x="968.42" y="207.5" ></text>
</g>
<g >
<title>leveldb::port::CondVar::~CondVar (2,000,000 samples, 0.02%)</title><rect x="759.4" y="261" width="0.2" height="15.0" fill="rgb(207,207,13)" rx="2" ry="2" />
<text  x="762.40" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (1,000,000 samples, 0.01%)</title><rect x="634.8" y="197" width="0.2" height="15.0" fill="rgb(224,137,21)" rx="2" ry="2" />
<text  x="637.85" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (1,000,000 samples, 0.01%)</title><rect x="577.0" y="229" width="0.1" height="15.0" fill="rgb(213,19,1)" rx="2" ry="2" />
<text  x="579.96" y="239.5" ></text>
</g>
<g >
<title>arch_freq_prepare_all (4,000,000 samples, 0.04%)</title><rect x="29.7" y="309" width="0.5" height="15.0" fill="rgb(213,178,42)" rx="2" ry="2" />
<text  x="32.74" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_M_head (1,500,000 samples, 0.02%)</title><rect x="595.8" y="293" width="0.1" height="15.0" fill="rgb(215,208,19)" rx="2" ry="2" />
<text  x="598.76" y="303.5" ></text>
</g>
<g >
<title>__check_object_size (18,250,000 samples, 0.19%)</title><rect x="68.6" y="277" width="2.2" height="15.0" fill="rgb(211,75,14)" rx="2" ry="2" />
<text  x="71.59" y="287.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::status (2,750,000 samples, 0.03%)</title><rect x="725.9" y="197" width="0.3" height="15.0" fill="rgb(219,178,13)" rx="2" ry="2" />
<text  x="728.87" y="207.5" ></text>
</g>
<g >
<title>std::operator==&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt; (2,750,000 samples, 0.03%)</title><rect x="753.4" y="245" width="0.3" height="15.0" fill="rgb(253,76,20)" rx="2" ry="2" />
<text  x="756.36" y="255.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::CurrentSizeEstimate (7,500,000 samples, 0.08%)</title><rect x="689.2" y="213" width="0.9" height="15.0" fill="rgb(208,20,13)" rx="2" ry="2" />
<text  x="692.16" y="223.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (5,750,000 samples, 0.06%)</title><rect x="536.3" y="389" width="0.7" height="15.0" fill="rgb(206,82,22)" rx="2" ry="2" />
<text  x="539.32" y="399.5" ></text>
</g>
<g >
<title>down_write_trylock (8,000,000 samples, 0.08%)</title><rect x="528.2" y="357" width="0.9" height="15.0" fill="rgb(217,188,23)" rx="2" ry="2" />
<text  x="531.17" y="367.5" ></text>
</g>
<g >
<title>__kernel_fpu_end (1,750,000 samples, 0.02%)</title><rect x="522.8" y="213" width="0.2" height="15.0" fill="rgb(214,59,11)" rx="2" ry="2" />
<text  x="525.80" y="223.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (10,500,000 samples, 0.11%)</title><rect x="979.2" y="245" width="1.3" height="15.0" fill="rgb(207,138,23)" rx="2" ry="2" />
<text  x="982.19" y="255.5" ></text>
</g>
<g >
<title>vfs_write (1,000,000 samples, 0.01%)</title><rect x="30.2" y="405" width="0.2" height="15.0" fill="rgb(235,174,20)" rx="2" ry="2" />
<text  x="33.23" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::swap (55,000,000 samples, 0.57%)</title><rect x="594.1" y="357" width="6.7" height="15.0" fill="rgb(222,72,32)" rx="2" ry="2" />
<text  x="597.11" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl (1,000,000 samples, 0.01%)</title><rect x="1119.1" y="101" width="0.1" height="15.0" fill="rgb(231,79,28)" rx="2" ry="2" />
<text  x="1122.12" y="111.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (5,250,000 samples, 0.05%)</title><rect x="491.2" y="261" width="0.6" height="15.0" fill="rgb(238,33,42)" rx="2" ry="2" />
<text  x="494.16" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (15,250,000 samples, 0.16%)</title><rect x="1155.9" y="277" width="1.9" height="15.0" fill="rgb(234,130,54)" rx="2" ry="2" />
<text  x="1158.95" y="287.5" ></text>
</g>
<g >
<title>madvise_free_single_vma (1,000,000 samples, 0.01%)</title><rect x="10.1" y="229" width="0.1" height="15.0" fill="rgb(253,171,0)" rx="2" ry="2" />
<text  x="13.12" y="239.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (1,500,000 samples, 0.02%)</title><rect x="761.8" y="229" width="0.2" height="15.0" fill="rgb(247,58,28)" rx="2" ry="2" />
<text  x="764.81" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2,250,000 samples, 0.02%)</title><rect x="475.6" y="261" width="0.3" height="15.0" fill="rgb(223,190,29)" rx="2" ry="2" />
<text  x="478.63" y="271.5" ></text>
</g>
<g >
<title>bio_alloc_bioset (2,750,000 samples, 0.03%)</title><rect x="428.1" y="229" width="0.3" height="15.0" fill="rgb(254,31,40)" rx="2" ry="2" />
<text  x="431.09" y="239.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::__basic_future (2,000,000 samples, 0.02%)</title><rect x="1097.9" y="277" width="0.3" height="15.0" fill="rgb(250,146,9)" rx="2" ry="2" />
<text  x="1100.94" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (6,000,000 samples, 0.06%)</title><rect x="578.3" y="293" width="0.8" height="15.0" fill="rgb(229,57,7)" rx="2" ry="2" />
<text  x="581.34" y="303.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (64,500,000 samples, 0.67%)</title><rect x="716.7" y="117" width="7.9" height="15.0" fill="rgb(229,126,5)" rx="2" ry="2" />
<text  x="719.74" y="127.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (359,750,000 samples, 3.72%)</title><rect x="560.9" y="437" width="43.9" height="15.0" fill="rgb(218,72,27)" rx="2" ry="2" />
<text  x="563.88" y="447.5" >std:..</text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (5,750,000 samples, 0.06%)</title><rect x="1122.2" y="181" width="0.7" height="15.0" fill="rgb(238,115,42)" rx="2" ry="2" />
<text  x="1125.20" y="191.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1,000,000 samples, 0.01%)</title><rect x="536.1" y="389" width="0.1" height="15.0" fill="rgb(252,113,44)" rx="2" ry="2" />
<text  x="539.08" y="399.5" ></text>
</g>
<g >
<title>add_transaction_credits (13,500,000 samples, 0.14%)</title><rect x="397.6" y="261" width="1.7" height="15.0" fill="rgb(249,75,21)" rx="2" ry="2" />
<text  x="400.61" y="271.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (14,500,000 samples, 0.15%)</title><rect x="419.9" y="229" width="1.8" height="15.0" fill="rgb(224,116,27)" rx="2" ry="2" />
<text  x="422.94" y="239.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1,250,000 samples, 0.01%)</title><rect x="538.2" y="373" width="0.2" height="15.0" fill="rgb(228,138,31)" rx="2" ry="2" />
<text  x="541.21" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::swap (1,000,000 samples, 0.01%)</title><rect x="602.7" y="389" width="0.1" height="15.0" fill="rgb(246,120,14)" rx="2" ry="2" />
<text  x="605.69" y="399.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (183,250,000 samples, 1.90%)</title><rect x="904.1" y="133" width="22.3" height="15.0" fill="rgb(214,131,6)" rx="2" ry="2" />
<text  x="907.06" y="143.5" >l..</text>
</g>
<g >
<title>[unknown] (2,500,000 samples, 0.03%)</title><rect x="10.1" y="437" width="0.3" height="15.0" fill="rgb(243,49,0)" rx="2" ry="2" />
<text  x="13.06" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr (63,750,000 samples, 0.66%)</title><rect x="573.7" y="325" width="7.7" height="15.0" fill="rgb(236,87,40)" rx="2" ry="2" />
<text  x="576.67" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (2,000,000 samples, 0.02%)</title><rect x="577.9" y="309" width="0.2" height="15.0" fill="rgb(252,163,19)" rx="2" ry="2" />
<text  x="580.88" y="319.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Flush (1,750,000 samples, 0.02%)</title><rect x="700.6" y="197" width="0.2" height="15.0" fill="rgb(230,101,23)" rx="2" ry="2" />
<text  x="703.60" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (15,500,000 samples, 0.16%)</title><rect x="596.3" y="341" width="1.9" height="15.0" fill="rgb(248,108,36)" rx="2" ry="2" />
<text  x="599.31" y="351.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::SetNext (18,750,000 samples, 0.19%)</title><rect x="960.2" y="197" width="2.3" height="15.0" fill="rgb(252,182,6)" rx="2" ry="2" />
<text  x="963.24" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl (1,750,000 samples, 0.02%)</title><rect x="1126.5" y="245" width="0.2" height="15.0" fill="rgb(213,123,22)" rx="2" ry="2" />
<text  x="1129.47" y="255.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (8,500,000 samples, 0.09%)</title><rect x="786.5" y="213" width="1.0" height="15.0" fill="rgb(239,44,17)" rx="2" ry="2" />
<text  x="789.47" y="223.5" ></text>
</g>
<g >
<title>leveldb::Slice::empty (3,500,000 samples, 0.04%)</title><rect x="980.5" y="245" width="0.4" height="15.0" fill="rgb(243,121,31)" rx="2" ry="2" />
<text  x="983.47" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (5,750,000 samples, 0.06%)</title><rect x="1101.0" y="245" width="0.7" height="15.0" fill="rgb(244,125,32)" rx="2" ry="2" />
<text  x="1103.96" y="255.5" ></text>
</g>
<g >
<title>__copy_user_flushcache (10,000,000 samples, 0.10%)</title><rect x="71.7" y="261" width="1.2" height="15.0" fill="rgb(253,212,10)" rx="2" ry="2" />
<text  x="74.70" y="271.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::set_value (1,500,000 samples, 0.02%)</title><rect x="1128.1" y="293" width="0.2" height="15.0" fill="rgb(248,220,35)" rx="2" ry="2" />
<text  x="1131.12" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (10,500,000 samples, 0.11%)</title><rect x="541.1" y="485" width="1.3" height="15.0" fill="rgb(212,100,25)" rx="2" ry="2" />
<text  x="544.14" y="495.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (8,250,000 samples, 0.09%)</title><rect x="420.4" y="181" width="1.0" height="15.0" fill="rgb(231,46,35)" rx="2" ry="2" />
<text  x="423.40" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (4,496,500,000 samples, 46.51%)</title><rect x="626.2" y="373" width="548.8" height="15.0" fill="rgb(253,76,32)" rx="2" ry="2" />
<text  x="629.18" y="383.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>kfree (1,250,000 samples, 0.01%)</title><rect x="427.5" y="277" width="0.2" height="15.0" fill="rgb(207,12,11)" rx="2" ry="2" />
<text  x="430.54" y="287.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Append (1,750,000 samples, 0.02%)</title><rect x="702.1" y="165" width="0.2" height="15.0" fill="rgb(209,155,38)" rx="2" ry="2" />
<text  x="705.13" y="175.5" ></text>
</g>
<g >
<title>__kernel_fpu_end (3,750,000 samples, 0.04%)</title><rect x="423.5" y="181" width="0.4" height="15.0" fill="rgb(254,206,20)" rx="2" ry="2" />
<text  x="426.45" y="191.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (2,000,000 samples, 0.02%)</title><rect x="702.4" y="165" width="0.2" height="15.0" fill="rgb(208,28,30)" rx="2" ry="2" />
<text  x="705.40" y="175.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (4,750,000 samples, 0.05%)</title><rect x="1037.1" y="229" width="0.5" height="15.0" fill="rgb(232,152,39)" rx="2" ry="2" />
<text  x="1040.07" y="239.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2,500,000 samples, 0.03%)</title><rect x="524.5" y="245" width="0.3" height="15.0" fill="rgb(214,11,21)" rx="2" ry="2" />
<text  x="527.48" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_destroy (4,750,000 samples, 0.05%)</title><rect x="1078.4" y="213" width="0.5" height="15.0" fill="rgb(231,107,10)" rx="2" ry="2" />
<text  x="1081.35" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::__future_base::_State_baseV2&gt;::_M_addr (1,750,000 samples, 0.02%)</title><rect x="1113.7" y="149" width="0.3" height="15.0" fill="rgb(250,177,52)" rx="2" ry="2" />
<text  x="1116.75" y="159.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (1,250,000 samples, 0.01%)</title><rect x="966.9" y="213" width="0.2" height="15.0" fill="rgb(214,35,23)" rx="2" ry="2" />
<text  x="969.95" y="223.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (61,250,000 samples, 0.63%)</title><rect x="469.6" y="309" width="7.5" height="15.0" fill="rgb(244,85,23)" rx="2" ry="2" />
<text  x="472.62" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,250,000 samples, 0.01%)</title><rect x="399.3" y="293" width="0.1" height="15.0" fill="rgb(244,135,1)" rx="2" ry="2" />
<text  x="402.25" y="303.5" ></text>
</g>
<g >
<title>leveldb::PutVarint64 (1,250,000 samples, 0.01%)</title><rect x="690.1" y="197" width="0.1" height="15.0" fill="rgb(242,193,32)" rx="2" ry="2" />
<text  x="693.07" y="207.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1,250,000 samples, 0.01%)</title><rect x="606.1" y="485" width="0.2" height="15.0" fill="rgb(251,22,14)" rx="2" ry="2" />
<text  x="609.10" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result_base*, false&gt;::_Head_base (1,750,000 samples, 0.02%)</title><rect x="1119.8" y="69" width="0.2" height="15.0" fill="rgb(212,151,45)" rx="2" ry="2" />
<text  x="1122.79" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (1,250,000 samples, 0.01%)</title><rect x="1125.2" y="213" width="0.2" height="15.0" fill="rgb(219,179,30)" rx="2" ry="2" />
<text  x="1128.22" y="223.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (3,500,000 samples, 0.04%)</title><rect x="597.8" y="293" width="0.4" height="15.0" fill="rgb(215,53,42)" rx="2" ry="2" />
<text  x="600.77" y="303.5" ></text>
</g>
<g >
<title>leveldb::BuildTable (847,750,000 samples, 8.77%)</title><rect x="626.4" y="245" width="103.5" height="15.0" fill="rgb(207,7,11)" rx="2" ry="2" />
<text  x="629.42" y="255.5" >leveldb::Bui..</text>
</g>
<g >
<title>__f_unlock_pos (1,500,000 samples, 0.02%)</title><rect x="40.0" y="421" width="0.2" height="15.0" fill="rgb(212,109,10)" rx="2" ry="2" />
<text  x="43.02" y="431.5" ></text>
</g>
<g >
<title>iput (1,750,000 samples, 0.02%)</title><rect x="30.4" y="341" width="0.3" height="15.0" fill="rgb(205,10,28)" rx="2" ry="2" />
<text  x="33.44" y="351.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (3,000,000 samples, 0.03%)</title><rect x="423.1" y="197" width="0.4" height="15.0" fill="rgb(238,11,52)" rx="2" ry="2" />
<text  x="426.09" y="207.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::Put (5,500,000 samples, 0.06%)</title><rect x="772.0" y="261" width="0.7" height="15.0" fill="rgb(242,191,45)" rx="2" ry="2" />
<text  x="775.00" y="271.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::~promise (241,750,000 samples, 2.50%)</title><rect x="1128.3" y="293" width="29.5" height="15.0" fill="rgb(238,170,12)" rx="2" ry="2" />
<text  x="1131.30" y="303.5" >st..</text>
</g>
<g >
<title>std::mutex::lock (16,250,000 samples, 0.17%)</title><rect x="1051.7" y="261" width="2.0" height="15.0" fill="rgb(243,207,20)" rx="2" ry="2" />
<text  x="1054.68" y="271.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1,500,000 samples, 0.02%)</title><rect x="569.0" y="309" width="0.2" height="15.0" fill="rgb(225,133,29)" rx="2" ry="2" />
<text  x="572.00" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (4,250,000 samples, 0.04%)</title><rect x="688.6" y="197" width="0.6" height="15.0" fill="rgb(235,2,51)" rx="2" ry="2" />
<text  x="691.64" y="207.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (2,250,000 samples, 0.02%)</title><rect x="1164.9" y="277" width="0.3" height="15.0" fill="rgb(216,122,43)" rx="2" ry="2" />
<text  x="1167.92" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1,250,000 samples, 0.01%)</title><rect x="1096.8" y="245" width="0.1" height="15.0" fill="rgb(224,76,10)" rx="2" ry="2" />
<text  x="1099.78" y="255.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (11,750,000 samples, 0.12%)</title><rect x="820.8" y="165" width="1.4" height="15.0" fill="rgb(206,191,17)" rx="2" ry="2" />
<text  x="823.79" y="175.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed64 (19,250,000 samples, 0.20%)</title><rect x="784.1" y="213" width="2.4" height="15.0" fill="rgb(252,207,4)" rx="2" ry="2" />
<text  x="787.12" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_open (4,000,000 samples, 0.04%)</title><rect x="29.7" y="485" width="0.5" height="15.0" fill="rgb(225,194,22)" rx="2" ry="2" />
<text  x="32.74" y="495.5" ></text>
</g>
<g >
<title>cpuinfo_open (4,000,000 samples, 0.04%)</title><rect x="29.7" y="325" width="0.5" height="15.0" fill="rgb(218,116,49)" rx="2" ry="2" />
<text  x="32.74" y="335.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (45,250,000 samples, 0.47%)</title><rect x="690.6" y="213" width="5.5" height="15.0" fill="rgb(235,173,13)" rx="2" ry="2" />
<text  x="693.56" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::~allocator (1,750,000 samples, 0.02%)</title><rect x="1114.5" y="181" width="0.3" height="15.0" fill="rgb(219,179,1)" rx="2" ry="2" />
<text  x="1117.54" y="191.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::value (45,000,000 samples, 0.47%)</title><rect x="635.0" y="229" width="5.5" height="15.0" fill="rgb(252,70,50)" rx="2" ry="2" />
<text  x="637.97" y="239.5" ></text>
</g>
<g >
<title>crypto_shash_update (5,000,000 samples, 0.05%)</title><rect x="453.4" y="245" width="0.6" height="15.0" fill="rgb(243,188,2)" rx="2" ry="2" />
<text  x="456.35" y="255.5" ></text>
</g>
<g >
<title>leveldb::Status::OK (3,750,000 samples, 0.04%)</title><rect x="1000.7" y="229" width="0.5" height="15.0" fill="rgb(246,229,8)" rx="2" ry="2" />
<text  x="1003.70" y="239.5" ></text>
</g>
<g >
<title>down_write (1,250,000 samples, 0.01%)</title><rect x="414.8" y="293" width="0.1" height="15.0" fill="rgb(238,66,49)" rx="2" ry="2" />
<text  x="417.76" y="303.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (15,000,000 samples, 0.16%)</title><rect x="661.1" y="181" width="1.8" height="15.0" fill="rgb(232,26,3)" rx="2" ry="2" />
<text  x="664.12" y="191.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,250,000 samples, 0.01%)</title><rect x="592.1" y="245" width="0.1" height="15.0" fill="rgb(224,180,3)" rx="2" ry="2" />
<text  x="595.10" y="255.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (3,750,000 samples, 0.04%)</title><rect x="980.9" y="245" width="0.5" height="15.0" fill="rgb(239,152,48)" rx="2" ry="2" />
<text  x="983.89" y="255.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::Open (1,500,000 samples, 0.02%)</title><rect x="30.8" y="437" width="0.2" height="15.0" fill="rgb(210,37,18)" rx="2" ry="2" />
<text  x="33.78" y="447.5" ></text>
</g>
<g >
<title>std::swap&lt;std::__future_base::_Result_base::_Deleter&gt; (8,000,000 samples, 0.08%)</title><rect x="599.8" y="341" width="1.0" height="15.0" fill="rgb(208,185,24)" rx="2" ry="2" />
<text  x="602.85" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_State_baseV2 (2,000,000 samples, 0.02%)</title><rect x="1121.2" y="165" width="0.2" height="15.0" fill="rgb(210,39,0)" rx="2" ry="2" />
<text  x="1124.19" y="175.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (1,000,000 samples, 0.01%)</title><rect x="1087.4" y="229" width="0.1" height="15.0" fill="rgb(234,225,20)" rx="2" ry="2" />
<text  x="1090.42" y="239.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1,250,000 samples, 0.01%)</title><rect x="425.9" y="213" width="0.2" height="15.0" fill="rgb(215,93,6)" rx="2" ry="2" />
<text  x="428.92" y="223.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (6,500,000 samples, 0.07%)</title><rect x="686.0" y="181" width="0.8" height="15.0" fill="rgb(229,113,31)" rx="2" ry="2" />
<text  x="689.05" y="191.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,500,000 samples, 0.02%)</title><rect x="1127.1" y="197" width="0.1" height="15.0" fill="rgb(227,8,9)" rx="2" ry="2" />
<text  x="1130.05" y="207.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter, true&gt; (2,000,000 samples, 0.02%)</title><rect x="1127.9" y="261" width="0.2" height="15.0" fill="rgb(250,172,3)" rx="2" ry="2" />
<text  x="1130.88" y="271.5" ></text>
</g>
<g >
<title>ext4_meta_trans_blocks (5,500,000 samples, 0.06%)</title><rect x="527.4" y="325" width="0.7" height="15.0" fill="rgb(216,73,33)" rx="2" ry="2" />
<text  x="530.38" y="335.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (7,750,000 samples, 0.08%)</title><rect x="1073.0" y="245" width="0.9" height="15.0" fill="rgb(244,51,20)" rx="2" ry="2" />
<text  x="1075.95" y="255.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (7,250,000 samples, 0.07%)</title><rect x="1010.9" y="245" width="0.9" height="15.0" fill="rgb(205,9,27)" rx="2" ry="2" />
<text  x="1013.89" y="255.5" ></text>
</g>
<g >
<title>snappy::internal::CompressFragment (11,000,000 samples, 0.11%)</title><rect x="1187.8" y="501" width="1.3" height="15.0" fill="rgb(242,193,31)" rx="2" ry="2" />
<text  x="1190.80" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6,500,000 samples, 0.07%)</title><rect x="1103.3" y="197" width="0.8" height="15.0" fill="rgb(233,137,29)" rx="2" ry="2" />
<text  x="1106.28" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (2,250,000 samples, 0.02%)</title><rect x="1055.1" y="277" width="0.3" height="15.0" fill="rgb(235,168,30)" rx="2" ry="2" />
<text  x="1058.13" y="287.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_M_get_result (38,750,000 samples, 0.40%)</title><rect x="1083.0" y="277" width="4.8" height="15.0" fill="rgb(218,224,28)" rx="2" ry="2" />
<text  x="1086.02" y="287.5" ></text>
</g>
<g >
<title>mempool_free_slab (1,000,000 samples, 0.01%)</title><rect x="428.6" y="213" width="0.1" height="15.0" fill="rgb(216,210,41)" rx="2" ry="2" />
<text  x="431.58" y="223.5" ></text>
</g>
<g >
<title>leveldb::port::CondVar::CondVar (1,500,000 samples, 0.02%)</title><rect x="758.6" y="261" width="0.2" height="15.0" fill="rgb(227,183,47)" rx="2" ry="2" />
<text  x="761.58" y="271.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (1,250,000 samples, 0.01%)</title><rect x="1108.0" y="213" width="0.1" height="15.0" fill="rgb(225,165,35)" rx="2" ry="2" />
<text  x="1110.98" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (2,750,000 samples, 0.03%)</title><rect x="589.0" y="277" width="0.3" height="15.0" fill="rgb(214,37,10)" rx="2" ry="2" />
<text  x="591.95" y="287.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (3,750,000 samples, 0.04%)</title><rect x="64.6" y="325" width="0.5" height="15.0" fill="rgb(238,72,37)" rx="2" ry="2" />
<text  x="67.62" y="335.5" ></text>
</g>
<g >
<title>leveldb::DestroyDB (2,750,000 samples, 0.03%)</title><rect x="30.4" y="437" width="0.3" height="15.0" fill="rgb(241,54,19)" rx="2" ry="2" />
<text  x="33.41" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (58,750,000 samples, 0.61%)</title><rect x="1088.2" y="261" width="7.2" height="15.0" fill="rgb(205,163,23)" rx="2" ry="2" />
<text  x="1091.24" y="271.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1,500,000 samples, 0.02%)</title><rect x="422.7" y="245" width="0.2" height="15.0" fill="rgb(231,107,10)" rx="2" ry="2" />
<text  x="425.75" y="255.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (9,000,000 samples, 0.09%)</title><rect x="520.0" y="261" width="1.1" height="15.0" fill="rgb(210,218,47)" rx="2" ry="2" />
<text  x="522.99" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (8,000,000 samples, 0.08%)</title><rect x="1096.7" y="261" width="0.9" height="15.0" fill="rgb(213,2,1)" rx="2" ry="2" />
<text  x="1099.66" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (147,500,000 samples, 1.53%)</title><rect x="1136.6" y="213" width="18.0" height="15.0" fill="rgb(251,91,39)" rx="2" ry="2" />
<text  x="1139.63" y="223.5" ></text>
</g>
<g >
<title>do_filp_open (2,250,000 samples, 0.02%)</title><rect x="628.0" y="149" width="0.3" height="15.0" fill="rgb(253,220,27)" rx="2" ry="2" />
<text  x="631.04" y="159.5" ></text>
</g>
<g >
<title>vfs_read (9,750,000 samples, 0.10%)</title><rect x="1186.5" y="421" width="1.2" height="15.0" fill="rgb(205,106,29)" rx="2" ry="2" />
<text  x="1189.46" y="431.5" ></text>
</g>
<g >
<title>__madvise (1,000,000 samples, 0.01%)</title><rect x="13.1" y="469" width="0.1" height="15.0" fill="rgb(231,212,7)" rx="2" ry="2" />
<text  x="16.11" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (5,000,000 samples, 0.05%)</title><rect x="1122.9" y="181" width="0.6" height="15.0" fill="rgb(210,20,25)" rx="2" ry="2" />
<text  x="1125.90" y="191.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2,500,000 samples, 0.03%)</title><rect x="1139.4" y="181" width="0.3" height="15.0" fill="rgb(236,112,9)" rx="2" ry="2" />
<text  x="1142.44" y="191.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::~_Result_base (2,000,000 samples, 0.02%)</title><rect x="1149.8" y="85" width="0.2" height="15.0" fill="rgb(228,2,14)" rx="2" ry="2" />
<text  x="1152.75" y="95.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (3,500,000 samples, 0.04%)</title><rect x="602.9" y="405" width="0.4" height="15.0" fill="rgb(237,142,9)" rx="2" ry="2" />
<text  x="605.87" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (10,250,000 samples, 0.11%)</title><rect x="1102.8" y="213" width="1.3" height="15.0" fill="rgb(219,174,34)" rx="2" ry="2" />
<text  x="1105.82" y="223.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (20,500,000 samples, 0.21%)</title><rect x="693.1" y="197" width="2.5" height="15.0" fill="rgb(211,81,54)" rx="2" ry="2" />
<text  x="696.06" y="207.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (19,250,000 samples, 0.20%)</title><rect x="682.7" y="197" width="2.4" height="15.0" fill="rgb(237,51,43)" rx="2" ry="2" />
<text  x="685.72" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (7,500,000 samples, 0.08%)</title><rect x="1092.1" y="197" width="0.9" height="15.0" fill="rgb(251,90,1)" rx="2" ry="2" />
<text  x="1095.05" y="207.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (18,750,000 samples, 0.19%)</title><rect x="931.1" y="133" width="2.3" height="15.0" fill="rgb(251,26,23)" rx="2" ry="2" />
<text  x="934.13" y="143.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (3,250,000 samples, 0.03%)</title><rect x="694.6" y="181" width="0.4" height="15.0" fill="rgb(215,99,51)" rx="2" ry="2" />
<text  x="697.62" y="191.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (14,500,000 samples, 0.15%)</title><rect x="829.5" y="149" width="1.8" height="15.0" fill="rgb(218,6,7)" rx="2" ry="2" />
<text  x="832.52" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8,000,000 samples, 0.08%)</title><rect x="686.8" y="197" width="1.0" height="15.0" fill="rgb(227,0,1)" rx="2" ry="2" />
<text  x="689.84" y="207.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BGWork (854,750,000 samples, 8.84%)</title><rect x="626.2" y="325" width="104.3" height="15.0" fill="rgb(205,182,27)" rx="2" ry="2" />
<text  x="629.18" y="335.5" >leveldb::DBI..</text>
</g>
<g >
<title>dl_main (1,000,000 samples, 0.01%)</title><rect x="606.3" y="469" width="0.1" height="15.0" fill="rgb(247,25,11)" rx="2" ry="2" />
<text  x="609.26" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (12,500,000 samples, 0.13%)</title><rect x="1058.3" y="245" width="1.6" height="15.0" fill="rgb(242,0,48)" rx="2" ry="2" />
<text  x="1061.34" y="255.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::GetMaxHeight (3,250,000 samples, 0.03%)</title><rect x="953.2" y="197" width="0.4" height="15.0" fill="rgb(206,105,26)" rx="2" ry="2" />
<text  x="956.25" y="207.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (1,250,000 samples, 0.01%)</title><rect x="1174.2" y="309" width="0.1" height="15.0" fill="rgb(238,91,1)" rx="2" ry="2" />
<text  x="1177.19" y="319.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (5,500,000 samples, 0.06%)</title><rect x="14.2" y="485" width="0.7" height="15.0" fill="rgb(221,229,40)" rx="2" ry="2" />
<text  x="17.18" y="495.5" ></text>
</g>
<g >
<title>memset_erms (8,500,000 samples, 0.09%)</title><rect x="463.6" y="277" width="1.1" height="15.0" fill="rgb(229,54,47)" rx="2" ry="2" />
<text  x="466.64" y="287.5" ></text>
</g>
<g >
<title>std::operator&amp; (1,000,000 samples, 0.01%)</title><rect x="962.4" y="165" width="0.1" height="15.0" fill="rgb(220,165,39)" rx="2" ry="2" />
<text  x="965.37" y="175.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.11 (1,000,000 samples, 0.01%)</title><rect x="422.8" y="213" width="0.1" height="15.0" fill="rgb(207,42,24)" rx="2" ry="2" />
<text  x="425.81" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (1,500,000 samples, 0.02%)</title><rect x="1138.1" y="197" width="0.2" height="15.0" fill="rgb(208,171,37)" rx="2" ry="2" />
<text  x="1141.10" y="207.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (151,750,000 samples, 1.57%)</title><rect x="664.2" y="197" width="18.5" height="15.0" fill="rgb(241,217,0)" rx="2" ry="2" />
<text  x="667.20" y="207.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.04%)</title><rect x="967.1" y="213" width="0.5" height="15.0" fill="rgb(211,14,43)" rx="2" ry="2" />
<text  x="970.10" y="223.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (54,750,000 samples, 0.57%)</title><rect x="896.8" y="117" width="6.7" height="15.0" fill="rgb(211,143,53)" rx="2" ry="2" />
<text  x="899.83" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (2,750,000 samples, 0.03%)</title><rect x="1123.1" y="165" width="0.3" height="15.0" fill="rgb(227,136,5)" rx="2" ry="2" />
<text  x="1126.05" y="175.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Next (10,750,000 samples, 0.11%)</title><rect x="629.0" y="213" width="1.3" height="15.0" fill="rgb(213,96,29)" rx="2" ry="2" />
<text  x="631.96" y="223.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Next (141,500,000 samples, 1.46%)</title><rect x="934.9" y="181" width="17.3" height="15.0" fill="rgb(223,40,46)" rx="2" ry="2" />
<text  x="937.88" y="191.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,250,000 samples, 0.01%)</title><rect x="579.1" y="293" width="0.1" height="15.0" fill="rgb(228,102,5)" rx="2" ry="2" />
<text  x="582.07" y="303.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::FlushBuffer (34,250,000 samples, 0.35%)</title><rect x="1002.8" y="229" width="4.2" height="15.0" fill="rgb(210,190,17)" rx="2" ry="2" />
<text  x="1005.77" y="239.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (14,250,000 samples, 0.15%)</title><rect x="490.1" y="277" width="1.7" height="15.0" fill="rgb(231,85,13)" rx="2" ry="2" />
<text  x="493.06" y="287.5" ></text>
</g>
<g >
<title>submit_bio_wait (170,750,000 samples, 1.77%)</title><rect x="428.8" y="261" width="20.9" height="15.0" fill="rgb(227,211,38)" rx="2" ry="2" />
<text  x="431.82" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_openat (2,250,000 samples, 0.02%)</title><rect x="628.0" y="181" width="0.3" height="15.0" fill="rgb(207,156,49)" rx="2" ry="2" />
<text  x="631.04" y="191.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (30,750,000 samples, 0.32%)</title><rect x="635.5" y="213" width="3.8" height="15.0" fill="rgb(218,63,34)" rx="2" ry="2" />
<text  x="638.55" y="223.5" ></text>
</g>
<g >
<title>__copy_user_flushcache (1,000,000 samples, 0.01%)</title><rect x="70.8" y="277" width="0.1" height="15.0" fill="rgb(238,112,49)" rx="2" ry="2" />
<text  x="73.81" y="287.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (1,000,000 samples, 0.01%)</title><rect x="452.5" y="277" width="0.1" height="15.0" fill="rgb(250,48,35)" rx="2" ry="2" />
<text  x="455.50" y="287.5" ></text>
</g>
<g >
<title>_cond_resched (2,000,000 samples, 0.02%)</title><rect x="521.2" y="277" width="0.3" height="15.0" fill="rgb(245,151,8)" rx="2" ry="2" />
<text  x="524.25" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (6,000,000 samples, 0.06%)</title><rect x="591.5" y="293" width="0.7" height="15.0" fill="rgb(249,116,1)" rx="2" ry="2" />
<text  x="594.52" y="303.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1,250,000 samples, 0.01%)</title><rect x="540.5" y="389" width="0.2" height="15.0" fill="rgb(251,77,1)" rx="2" ry="2" />
<text  x="543.50" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (3,000,000 samples, 0.03%)</title><rect x="581.6" y="341" width="0.4" height="15.0" fill="rgb(254,151,36)" rx="2" ry="2" />
<text  x="584.63" y="351.5" ></text>
</g>
<g >
<title>__find_get_block (21,500,000 samples, 0.22%)</title><rect x="516.4" y="245" width="2.6" height="15.0" fill="rgb(244,53,54)" rx="2" ry="2" />
<text  x="519.36" y="255.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (1,000,000 samples, 0.01%)</title><rect x="1158.4" y="309" width="0.1" height="15.0" fill="rgb(231,61,40)" rx="2" ry="2" />
<text  x="1161.42" y="319.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (100,500,000 samples, 1.04%)</title><rect x="457.4" y="309" width="12.2" height="15.0" fill="rgb(246,132,53)" rx="2" ry="2" />
<text  x="460.35" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr (1,250,000 samples, 0.01%)</title><rect x="1104.7" y="261" width="0.2" height="15.0" fill="rgb(227,48,9)" rx="2" ry="2" />
<text  x="1107.75" y="271.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Lock (17,500,000 samples, 0.18%)</title><rect x="1051.5" y="277" width="2.2" height="15.0" fill="rgb(217,16,6)" rx="2" ry="2" />
<text  x="1054.53" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_Head_base&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*&amp;&gt; (3,000,000 samples, 0.03%)</title><rect x="576.1" y="261" width="0.4" height="15.0" fill="rgb(216,6,42)" rx="2" ry="2" />
<text  x="579.11" y="271.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (373,500,000 samples, 3.86%)</title><rect x="560.1" y="469" width="45.6" height="15.0" fill="rgb(218,212,38)" rx="2" ry="2" />
<text  x="563.12" y="479.5" >std:..</text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::get (118,000,000 samples, 1.22%)</title><rect x="1081.8" y="293" width="14.4" height="15.0" fill="rgb(246,111,6)" rx="2" ry="2" />
<text  x="1084.80" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::get (9,750,000 samples, 0.10%)</title><rect x="1086.0" y="229" width="1.1" height="15.0" fill="rgb(254,176,52)" rx="2" ry="2" />
<text  x="1088.95" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (6,500,000 samples, 0.07%)</title><rect x="583.3" y="309" width="0.8" height="15.0" fill="rgb(222,90,10)" rx="2" ry="2" />
<text  x="586.28" y="319.5" ></text>
</g>
<g >
<title>up_write (5,250,000 samples, 0.05%)</title><rect x="535.1" y="357" width="0.7" height="15.0" fill="rgb(223,155,2)" rx="2" ry="2" />
<text  x="538.13" y="367.5" ></text>
</g>
<g >
<title>leveldb::VarintLength (5,500,000 samples, 0.06%)</title><rect x="968.4" y="229" width="0.7" height="15.0" fill="rgb(246,125,23)" rx="2" ry="2" />
<text  x="971.44" y="239.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (8,750,000 samples, 0.09%)</title><rect x="1176.5" y="501" width="1.1" height="15.0" fill="rgb(226,52,16)" rx="2" ry="2" />
<text  x="1179.51" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2,250,000 samples, 0.02%)</title><rect x="406.0" y="261" width="0.2" height="15.0" fill="rgb(210,25,54)" rx="2" ry="2" />
<text  x="408.97" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (5,250,000 samples, 0.05%)</title><rect x="1141.8" y="181" width="0.6" height="15.0" fill="rgb(233,112,49)" rx="2" ry="2" />
<text  x="1144.76" y="191.5" ></text>
</g>
<g >
<title>leveldb::Slice::compare (1,500,000 samples, 0.02%)</title><rect x="695.6" y="197" width="0.2" height="15.0" fill="rgb(246,118,28)" rx="2" ry="2" />
<text  x="698.60" y="207.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (2,250,000 samples, 0.02%)</title><rect x="598.2" y="341" width="0.3" height="15.0" fill="rgb(234,4,25)" rx="2" ry="2" />
<text  x="601.20" y="351.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Unlock (10,750,000 samples, 0.11%)</title><rect x="1053.7" y="277" width="1.3" height="15.0" fill="rgb(239,205,46)" rx="2" ry="2" />
<text  x="1056.67" y="287.5" ></text>
</g>
<g >
<title>__gthread_once (2,500,000 samples, 0.03%)</title><rect x="1066.9" y="245" width="0.3" height="15.0" fill="rgb(253,86,31)" rx="2" ry="2" />
<text  x="1069.94" y="255.5" ></text>
</g>
<g >
<title>std::swap&lt;std::__future_base::_State_baseV2*&gt; (2,750,000 samples, 0.03%)</title><rect x="1095.1" y="245" width="0.3" height="15.0" fill="rgb(243,204,36)" rx="2" ry="2" />
<text  x="1098.07" y="255.5" ></text>
</g>
<g >
<title>crc_128 (1,000,000 samples, 0.01%)</title><rect x="424.3" y="213" width="0.1" height="15.0" fill="rgb(241,75,34)" rx="2" ry="2" />
<text  x="427.28" y="223.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (4,500,000 samples, 0.05%)</title><rect x="770.7" y="261" width="0.5" height="15.0" fill="rgb(206,66,46)" rx="2" ry="2" />
<text  x="773.66" y="271.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Valid (2,250,000 samples, 0.02%)</title><rect x="630.6" y="213" width="0.2" height="15.0" fill="rgb(226,104,41)" rx="2" ry="2" />
<text  x="633.57" y="223.5" ></text>
</g>
<g >
<title>__fget (20,750,000 samples, 0.21%)</title><rect x="42.7" y="373" width="2.5" height="15.0" fill="rgb(207,157,16)" rx="2" ry="2" />
<text  x="45.68" y="383.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (1,500,000 samples, 0.02%)</title><rect x="696.8" y="213" width="0.2" height="15.0" fill="rgb(245,53,45)" rx="2" ry="2" />
<text  x="699.85" y="223.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (1,750,000 samples, 0.02%)</title><rect x="1167.6" y="293" width="0.2" height="15.0" fill="rgb(206,131,40)" rx="2" ry="2" />
<text  x="1170.63" y="303.5" ></text>
</g>
<g >
<title>__getblk_gfp (2,000,000 samples, 0.02%)</title><rect x="454.2" y="261" width="0.2" height="15.0" fill="rgb(242,229,42)" rx="2" ry="2" />
<text  x="457.18" y="271.5" ></text>
</g>
<g >
<title>generic_write_checks (7,500,000 samples, 0.08%)</title><rect x="533.8" y="357" width="1.0" height="15.0" fill="rgb(250,135,37)" rx="2" ry="2" />
<text  x="536.85" y="367.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Extend (309,750,000 samples, 3.20%)</title><rect x="1013.3" y="245" width="37.8" height="15.0" fill="rgb(213,80,10)" rx="2" ry="2" />
<text  x="1016.30" y="255.5" >lev..</text>
</g>
<g >
<title>mutex_unlock (2,750,000 samples, 0.03%)</title><rect x="456.0" y="309" width="0.4" height="15.0" fill="rgb(222,135,34)" rx="2" ry="2" />
<text  x="459.04" y="319.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (1,750,000 samples, 0.02%)</title><rect x="1068.0" y="245" width="0.3" height="15.0" fill="rgb(211,220,34)" rx="2" ry="2" />
<text  x="1071.04" y="255.5" ></text>
</g>
<g >
<title>vfs_open (4,000,000 samples, 0.04%)</title><rect x="29.7" y="373" width="0.5" height="15.0" fill="rgb(233,225,28)" rx="2" ry="2" />
<text  x="32.74" y="383.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (4,250,000 samples, 0.04%)</title><rect x="736.9" y="293" width="0.5" height="15.0" fill="rgb(238,3,24)" rx="2" ry="2" />
<text  x="739.91" y="303.5" ></text>
</g>
<g >
<title>current_time (6,500,000 samples, 0.07%)</title><rect x="56.6" y="357" width="0.8" height="15.0" fill="rgb(219,137,50)" rx="2" ry="2" />
<text  x="59.62" y="367.5" ></text>
</g>
<g >
<title>__ext4_new_inode (1,500,000 samples, 0.02%)</title><rect x="628.0" y="101" width="0.2" height="15.0" fill="rgb(252,215,39)" rx="2" ry="2" />
<text  x="631.04" y="111.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (1,000,000 samples, 0.01%)</title><rect x="565.1" y="373" width="0.1" height="15.0" fill="rgb(215,198,24)" rx="2" ry="2" />
<text  x="568.06" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;void  (1,750,000 samples, 0.02%)</title><rect x="605.5" y="437" width="0.2" height="15.0" fill="rgb(241,205,0)" rx="2" ry="2" />
<text  x="608.49" y="447.5" ></text>
</g>
<g >
<title>crc_42 (1,250,000 samples, 0.01%)</title><rect x="424.9" y="213" width="0.1" height="15.0" fill="rgb(228,66,5)" rx="2" ry="2" />
<text  x="427.89" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (1,000,000 samples, 0.01%)</title><rect x="1106.8" y="245" width="0.1" height="15.0" fill="rgb(249,210,10)" rx="2" ry="2" />
<text  x="1109.76" y="255.5" ></text>
</g>
<g >
<title>__copy_user_nocache (45,750,000 samples, 0.47%)</title><rect x="72.9" y="261" width="5.6" height="15.0" fill="rgb(251,37,18)" rx="2" ry="2" />
<text  x="75.92" y="271.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (2,250,000 samples, 0.02%)</title><rect x="1127.0" y="213" width="0.2" height="15.0" fill="rgb(233,92,8)" rx="2" ry="2" />
<text  x="1129.96" y="223.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1,250,000 samples, 0.01%)</title><rect x="1077.0" y="245" width="0.2" height="15.0" fill="rgb(230,222,26)" rx="2" ry="2" />
<text  x="1080.01" y="255.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::FindShortestSeparator (6,250,000 samples, 0.06%)</title><rect x="696.1" y="213" width="0.7" height="15.0" fill="rgb(246,180,3)" rx="2" ry="2" />
<text  x="699.09" y="223.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr (1,000,000 samples, 0.01%)</title><rect x="1095.5" y="277" width="0.1" height="15.0" fill="rgb(218,214,36)" rx="2" ry="2" />
<text  x="1098.47" y="287.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (6,500,000 samples, 0.07%)</title><rect x="453.2" y="277" width="0.8" height="15.0" fill="rgb(229,2,15)" rx="2" ry="2" />
<text  x="456.17" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (2,000,000 samples, 0.02%)</title><rect x="583.8" y="277" width="0.3" height="15.0" fill="rgb(206,7,44)" rx="2" ry="2" />
<text  x="586.83" y="287.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (7,250,000 samples, 0.07%)</title><rect x="13.3" y="469" width="0.9" height="15.0" fill="rgb(252,146,43)" rx="2" ry="2" />
<text  x="16.30" y="479.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (1,750,000 samples, 0.02%)</title><rect x="714.4" y="133" width="0.2" height="15.0" fill="rgb(229,183,41)" rx="2" ry="2" />
<text  x="717.36" y="143.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;std::__future_base::_State_baseV2&gt;, true&gt;::~_Sp_ebo_helper (2,750,000 samples, 0.03%)</title><rect x="1139.8" y="165" width="0.3" height="15.0" fill="rgb(216,162,4)" rx="2" ry="2" />
<text  x="1142.81" y="175.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_Result_base*&amp;&gt; (1,750,000 samples, 0.02%)</title><rect x="599.6" y="325" width="0.2" height="15.0" fill="rgb(208,18,26)" rx="2" ry="2" />
<text  x="602.63" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (3,750,000 samples, 0.04%)</title><rect x="1139.7" y="181" width="0.5" height="15.0" fill="rgb(248,1,52)" rx="2" ry="2" />
<text  x="1142.75" y="191.5" ></text>
</g>
<g >
<title>ext4_find_extent (4,500,000 samples, 0.05%)</title><rect x="418.8" y="277" width="0.6" height="15.0" fill="rgb(254,83,33)" rx="2" ry="2" />
<text  x="421.84" y="287.5" ></text>
</g>
<g >
<title>clean_bdev_aliases (19,500,000 samples, 0.20%)</title><rect x="412.4" y="293" width="2.4" height="15.0" fill="rgb(244,35,39)" rx="2" ry="2" />
<text  x="415.38" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (86,250,000 samples, 0.89%)</title><rect x="549.6" y="453" width="10.5" height="15.0" fill="rgb(222,13,44)" rx="2" ry="2" />
<text  x="552.56" y="463.5" ></text>
</g>
<g >
<title>leveldb::PutVarint32 (30,500,000 samples, 0.32%)</title><rect x="659.2" y="197" width="3.7" height="15.0" fill="rgb(228,116,19)" rx="2" ry="2" />
<text  x="662.23" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (6,750,000 samples, 0.07%)</title><rect x="726.5" y="213" width="0.9" height="15.0" fill="rgb(215,61,23)" rx="2" ry="2" />
<text  x="729.54" y="223.5" ></text>
</g>
<g >
<title>[unknown] (24,750,000 samples, 0.26%)</title><rect x="10.1" y="469" width="3.0" height="15.0" fill="rgb(226,193,44)" rx="2" ry="2" />
<text  x="13.06" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (3,500,000 samples, 0.04%)</title><rect x="579.8" y="277" width="0.5" height="15.0" fill="rgb(218,199,37)" rx="2" ry="2" />
<text  x="582.83" y="287.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::WriteSeq (3,641,500,000 samples, 37.67%)</title><rect x="730.5" y="341" width="444.5" height="15.0" fill="rgb(238,207,11)" rx="2" ry="2" />
<text  x="733.53" y="351.5" >leveldb::Benchmark::WriteSeq</text>
</g>
<g >
<title>map_id_up (3,500,000 samples, 0.04%)</title><rect x="512.0" y="261" width="0.5" height="15.0" fill="rgb(235,227,23)" rx="2" ry="2" />
<text  x="515.03" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::allocator (1,500,000 samples, 0.02%)</title><rect x="1114.1" y="149" width="0.2" height="15.0" fill="rgb(216,31,44)" rx="2" ry="2" />
<text  x="1117.08" y="159.5" ></text>
</g>
<g >
<title>leveldb::BlockBuilder::Reset (1,750,000 samples, 0.02%)</title><rect x="701.7" y="181" width="0.2" height="15.0" fill="rgb(211,8,11)" rx="2" ry="2" />
<text  x="704.67" y="191.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,500,000 samples, 0.05%)</title><rect x="590.7" y="277" width="0.5" height="15.0" fill="rgb(221,123,3)" rx="2" ry="2" />
<text  x="593.69" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2,000,000 samples, 0.02%)</title><rect x="10.1" y="373" width="0.2" height="15.0" fill="rgb(222,10,0)" rx="2" ry="2" />
<text  x="13.06" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (2,250,000 samples, 0.02%)</title><rect x="1157.3" y="213" width="0.3" height="15.0" fill="rgb(242,53,39)" rx="2" ry="2" />
<text  x="1160.32" y="223.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (4,500,000 samples, 0.05%)</title><rect x="576.7" y="261" width="0.5" height="15.0" fill="rgb(244,118,28)" rx="2" ry="2" />
<text  x="579.69" y="271.5" ></text>
</g>
<g >
<title>__ext4_ext_dirty (11,500,000 samples, 0.12%)</title><rect x="417.1" y="261" width="1.4" height="15.0" fill="rgb(230,145,52)" rx="2" ry="2" />
<text  x="420.14" y="271.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (268,250,000 samples, 2.77%)</title><rect x="481.3" y="293" width="32.7" height="15.0" fill="rgb(207,153,15)" rx="2" ry="2" />
<text  x="484.30" y="303.5" >ex..</text>
</g>
<g >
<title>ext4_ext_truncate (1,000,000 samples, 0.01%)</title><rect x="30.5" y="277" width="0.2" height="15.0" fill="rgb(216,55,20)" rx="2" ry="2" />
<text  x="33.54" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3,750,000 samples, 0.04%)</title><rect x="540.7" y="485" width="0.4" height="15.0" fill="rgb(241,175,31)" rx="2" ry="2" />
<text  x="543.68" y="495.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Add (721,000,000 samples, 7.46%)</title><rect x="640.9" y="229" width="88.0" height="15.0" fill="rgb(232,12,39)" rx="2" ry="2" />
<text  x="643.89" y="239.5" >leveldb::T..</text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (202,500,000 samples, 2.09%)</title><rect x="567.6" y="357" width="24.7" height="15.0" fill="rgb(218,206,1)" rx="2" ry="2" />
<text  x="570.60" y="367.5" >s..</text>
</g>
<g >
<title>ext4_dirty_inode (16,750,000 samples, 0.17%)</title><rect x="419.7" y="245" width="2.1" height="15.0" fill="rgb(212,20,31)" rx="2" ry="2" />
<text  x="422.73" y="255.5" ></text>
</g>
<g >
<title>[unknown] (4,500,000 samples, 0.05%)</title><rect x="10.1" y="453" width="0.5" height="15.0" fill="rgb(227,226,32)" rx="2" ry="2" />
<text  x="13.06" y="463.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (2,453,750,000 samples, 25.38%)</title><rect x="81.5" y="293" width="299.5" height="15.0" fill="rgb(251,204,37)" rx="2" ry="2" />
<text  x="84.49" y="303.5" >__srcu_read_unlock</text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::store (15,500,000 samples, 0.16%)</title><rect x="960.6" y="181" width="1.9" height="15.0" fill="rgb(233,186,0)" rx="2" ry="2" />
<text  x="963.60" y="191.5" ></text>
</g>
<g >
<title>crypto_shash_update (2,250,000 samples, 0.02%)</title><rect x="426.1" y="213" width="0.3" height="15.0" fill="rgb(246,194,19)" rx="2" ry="2" />
<text  x="429.08" y="223.5" ></text>
</g>
<g >
<title>std::operator&amp; (1,500,000 samples, 0.02%)</title><rect x="959.9" y="165" width="0.2" height="15.0" fill="rgb(239,174,46)" rx="2" ry="2" />
<text  x="962.90" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (2,500,000 samples, 0.03%)</title><rect x="1144.7" y="149" width="0.4" height="15.0" fill="rgb(209,5,20)" rx="2" ry="2" />
<text  x="1147.75" y="159.5" ></text>
</g>
<g >
<title>ext4_block_bitmap_csum_set (22,500,000 samples, 0.23%)</title><rect x="423.0" y="245" width="2.7" height="15.0" fill="rgb(221,1,28)" rx="2" ry="2" />
<text  x="425.99" y="255.5" ></text>
</g>
<g >
<title>_copy_from_iter_flushcache (61,250,000 samples, 0.63%)</title><rect x="71.0" y="277" width="7.5" height="15.0" fill="rgb(221,132,45)" rx="2" ry="2" />
<text  x="74.03" y="287.5" ></text>
</g>
<g >
<title>aperfmperf_snapshot_cpu (4,000,000 samples, 0.04%)</title><rect x="29.7" y="293" width="0.5" height="15.0" fill="rgb(219,67,2)" rx="2" ry="2" />
<text  x="32.74" y="303.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (1,000,000 samples, 0.01%)</title><rect x="965.3" y="197" width="0.1" height="15.0" fill="rgb(246,215,30)" rx="2" ry="2" />
<text  x="968.30" y="207.5" ></text>
</g>
<g >
<title>crypto_shash_update (4,250,000 samples, 0.04%)</title><rect x="524.8" y="245" width="0.5" height="15.0" fill="rgb(232,71,2)" rx="2" ry="2" />
<text  x="527.79" y="255.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (2,750,000 samples, 0.03%)</title><rect x="697.4" y="213" width="0.3" height="15.0" fill="rgb(244,149,48)" rx="2" ry="2" />
<text  x="700.40" y="223.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result_base*, false&gt;::_M_head (1,500,000 samples, 0.02%)</title><rect x="1086.7" y="149" width="0.2" height="15.0" fill="rgb(233,193,9)" rx="2" ry="2" />
<text  x="1089.74" y="159.5" ></text>
</g>
<g >
<title>leveldb::MemTable::Add (1,536,500,000 samples, 15.89%)</title><rect x="780.8" y="229" width="187.5" height="15.0" fill="rgb(208,180,41)" rx="2" ry="2" />
<text  x="783.79" y="239.5" >leveldb::MemTable::Add</text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (18,750,000 samples, 0.19%)</title><rect x="1129.2" y="277" width="2.3" height="15.0" fill="rgb(252,26,6)" rx="2" ry="2" />
<text  x="1132.22" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,750,000 samples, 0.11%)</title><rect x="1091.7" y="213" width="1.4" height="15.0" fill="rgb(232,110,6)" rx="2" ry="2" />
<text  x="1094.75" y="223.5" ></text>
</g>
<g >
<title>ext4_issue_zeroout (179,750,000 samples, 1.86%)</title><rect x="427.7" y="293" width="22.0" height="15.0" fill="rgb(207,211,11)" rx="2" ry="2" />
<text  x="430.72" y="303.5" >e..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (2,750,000 samples, 0.03%)</title><rect x="573.2" y="261" width="0.3" height="15.0" fill="rgb(249,81,50)" rx="2" ry="2" />
<text  x="576.18" y="271.5" ></text>
</g>
<g >
<title>__find_get_block (1,000,000 samples, 0.01%)</title><rect x="419.1" y="229" width="0.1" height="15.0" fill="rgb(243,174,25)" rx="2" ry="2" />
<text  x="422.12" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,000,000 samples, 0.02%)</title><rect x="1183.0" y="501" width="0.3" height="15.0" fill="rgb(209,52,9)" rx="2" ry="2" />
<text  x="1186.04" y="511.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (2,000,000 samples, 0.02%)</title><rect x="587.6" y="293" width="0.2" height="15.0" fill="rgb(211,163,45)" rx="2" ry="2" />
<text  x="590.58" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (1,000,000 samples, 0.01%)</title><rect x="1131.5" y="277" width="0.1" height="15.0" fill="rgb(226,62,19)" rx="2" ry="2" />
<text  x="1134.51" y="287.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (3,000,000 samples, 0.03%)</title><rect x="638.9" y="197" width="0.4" height="15.0" fill="rgb(249,168,46)" rx="2" ry="2" />
<text  x="641.93" y="207.5" ></text>
</g>
<g >
<title>std::swap&lt;char const*&gt; (7,000,000 samples, 0.07%)</title><rect x="1159.0" y="293" width="0.9" height="15.0" fill="rgb(251,76,42)" rx="2" ry="2" />
<text  x="1162.03" y="303.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (1,000,000 samples, 0.01%)</title><rect x="981.2" y="229" width="0.2" height="15.0" fill="rgb(251,156,14)" rx="2" ry="2" />
<text  x="984.23" y="239.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (1,750,000 samples, 0.02%)</title><rect x="1074.3" y="261" width="0.2" height="15.0" fill="rgb(249,3,0)" rx="2" ry="2" />
<text  x="1077.29" y="271.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (4,500,000 samples, 0.05%)</title><rect x="1157.0" y="229" width="0.6" height="15.0" fill="rgb(215,67,48)" rx="2" ry="2" />
<text  x="1160.05" y="239.5" ></text>
</g>
<g >
<title>__gthread_active_p (1,250,000 samples, 0.01%)</title><rect x="1136.5" y="213" width="0.1" height="15.0" fill="rgb(228,165,31)" rx="2" ry="2" />
<text  x="1139.48" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (3,250,000 samples, 0.03%)</title><rect x="579.9" y="261" width="0.4" height="15.0" fill="rgb(222,174,5)" rx="2" ry="2" />
<text  x="582.86" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get (10,000,000 samples, 0.10%)</title><rect x="572.4" y="309" width="1.3" height="15.0" fill="rgb(245,220,30)" rx="2" ry="2" />
<text  x="575.45" y="319.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (2,500,000 samples, 0.03%)</title><rect x="956.4" y="181" width="0.3" height="15.0" fill="rgb(210,86,43)" rx="2" ry="2" />
<text  x="959.39" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (1,250,000 samples, 0.01%)</title><rect x="747.5" y="261" width="0.2" height="15.0" fill="rgb(223,64,14)" rx="2" ry="2" />
<text  x="750.53" y="271.5" ></text>
</g>
<g >
<title>prefetch_freepointer (3,000,000 samples, 0.03%)</title><rect x="393.5" y="261" width="0.4" height="15.0" fill="rgb(213,203,52)" rx="2" ry="2" />
<text  x="396.49" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (197,250,000 samples, 2.04%)</title><rect x="1131.9" y="261" width="24.0" height="15.0" fill="rgb(230,60,47)" rx="2" ry="2" />
<text  x="1134.87" y="271.5" >s..</text>
</g>
<g >
<title>fput (8,000,000 samples, 0.08%)</title><rect x="40.3" y="421" width="0.9" height="15.0" fill="rgb(222,86,14)" rx="2" ry="2" />
<text  x="43.27" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait (1,000,000 samples, 0.01%)</title><rect x="1096.0" y="277" width="0.1" height="15.0" fill="rgb(219,160,16)" rx="2" ry="2" />
<text  x="1099.02" y="287.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::_Result_base (1,000,000 samples, 0.01%)</title><rect x="1105.5" y="277" width="0.2" height="15.0" fill="rgb(223,127,23)" rx="2" ry="2" />
<text  x="1108.54" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_Head_base&lt;std::__future_base::_Result_base::_Deleter&gt; (2,000,000 samples, 0.02%)</title><rect x="576.8" y="245" width="0.3" height="15.0" fill="rgb(238,224,50)" rx="2" ry="2" />
<text  x="579.84" y="255.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (42,000,000 samples, 0.43%)</title><rect x="514.3" y="277" width="5.1" height="15.0" fill="rgb(238,51,30)" rx="2" ry="2" />
<text  x="517.32" y="287.5" ></text>
</g>
<g >
<title>ext4_lock_group (2,000,000 samples, 0.02%)</title><rect x="426.4" y="245" width="0.2" height="15.0" fill="rgb(213,197,17)" rx="2" ry="2" />
<text  x="429.35" y="255.5" ></text>
</g>
<g >
<title>jbd2__journal_start (77,250,000 samples, 0.80%)</title><rect x="389.8" y="293" width="9.5" height="15.0" fill="rgb(247,189,8)" rx="2" ry="2" />
<text  x="392.83" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,750,000 samples, 0.02%)</title><rect x="540.4" y="453" width="0.3" height="15.0" fill="rgb(213,95,9)" rx="2" ry="2" />
<text  x="543.44" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_State_baseV2&gt;::construct&lt;std::__future_base::_State_baseV2&gt; (48,750,000 samples, 0.50%)</title><rect x="1115.2" y="165" width="6.0" height="15.0" fill="rgb(254,188,32)" rx="2" ry="2" />
<text  x="1118.21" y="175.5" ></text>
</g>
<g >
<title>do_exit (2,000,000 samples, 0.02%)</title><rect x="1183.0" y="437" width="0.3" height="15.0" fill="rgb(225,147,27)" rx="2" ry="2" />
<text  x="1186.04" y="447.5" ></text>
</g>
<g >
<title>bdev_dax_pgoff (1,000,000 samples, 0.01%)</title><rect x="67.9" y="309" width="0.1" height="15.0" fill="rgb(216,165,1)" rx="2" ry="2" />
<text  x="70.88" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (1,250,000 samples, 0.01%)</title><rect x="1100.8" y="245" width="0.2" height="15.0" fill="rgb(246,227,51)" rx="2" ry="2" />
<text  x="1103.81" y="255.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (17,000,000 samples, 0.18%)</title><rect x="1121.4" y="197" width="2.1" height="15.0" fill="rgb(232,104,31)" rx="2" ry="2" />
<text  x="1124.44" y="207.5" ></text>
</g>
<g >
<title>__virt_addr_valid (13,750,000 samples, 0.14%)</title><rect x="69.1" y="261" width="1.7" height="15.0" fill="rgb(248,140,33)" rx="2" ry="2" />
<text  x="72.13" y="271.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Count (6,500,000 samples, 0.07%)</title><rect x="1168.1" y="293" width="0.8" height="15.0" fill="rgb(248,78,20)" rx="2" ry="2" />
<text  x="1171.09" y="303.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_super (9,750,000 samples, 0.10%)</title><rect x="451.4" y="293" width="1.2" height="15.0" fill="rgb(235,43,32)" rx="2" ry="2" />
<text  x="454.43" y="303.5" ></text>
</g>
<g >
<title>ext4_ext_remove_space (1,000,000 samples, 0.01%)</title><rect x="30.5" y="261" width="0.2" height="15.0" fill="rgb(219,41,0)" rx="2" ry="2" />
<text  x="33.54" y="271.5" ></text>
</g>
<g >
<title>leveldb::Random::Uniform (11,250,000 samples, 0.12%)</title><rect x="737.7" y="261" width="1.4" height="15.0" fill="rgb(209,32,40)" rx="2" ry="2" />
<text  x="740.74" y="271.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (11,000,000 samples, 0.11%)</title><rect x="420.1" y="213" width="1.3" height="15.0" fill="rgb(246,95,26)" rx="2" ry="2" />
<text  x="423.06" y="223.5" ></text>
</g>
<g >
<title>proc_reg_read (9,500,000 samples, 0.10%)</title><rect x="1186.5" y="389" width="1.2" height="15.0" fill="rgb(223,133,25)" rx="2" ry="2" />
<text  x="1189.49" y="399.5" ></text>
</g>
<g >
<title>ext4_iomap_end (581,000,000 samples, 6.01%)</title><rect x="456.4" y="325" width="70.9" height="15.0" fill="rgb(241,94,12)" rx="2" ry="2" />
<text  x="459.41" y="335.5" >ext4_iom..</text>
</g>
<g >
<title>std::move&lt;std::__future_base::_State_baseV2*&amp;&gt; (4,500,000 samples, 0.05%)</title><rect x="1094.5" y="213" width="0.6" height="15.0" fill="rgb(207,189,26)" rx="2" ry="2" />
<text  x="1097.52" y="223.5" ></text>
</g>
<g >
<title>leveldb::ExtractUserKey (1,000,000 samples, 0.01%)</title><rect x="696.7" y="197" width="0.1" height="15.0" fill="rgb(227,141,29)" rx="2" ry="2" />
<text  x="699.67" y="207.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (8,250,000 samples, 0.09%)</title><rect x="524.3" y="261" width="1.0" height="15.0" fill="rgb(216,148,16)" rx="2" ry="2" />
<text  x="527.30" y="271.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (7,500,000 samples, 0.08%)</title><rect x="975.8" y="229" width="0.9" height="15.0" fill="rgb(212,69,35)" rx="2" ry="2" />
<text  x="978.77" y="239.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::key (5,000,000 samples, 0.05%)</title><rect x="639.4" y="213" width="0.6" height="15.0" fill="rgb(229,200,18)" rx="2" ry="2" />
<text  x="642.42" y="223.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (7,750,000 samples, 0.08%)</title><rect x="983.2" y="229" width="0.9" height="15.0" fill="rgb(217,12,30)" rx="2" ry="2" />
<text  x="986.15" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt; &gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (2,500,000 samples, 0.03%)</title><rect x="1155.6" y="213" width="0.3" height="15.0" fill="rgb(229,209,21)" rx="2" ry="2" />
<text  x="1158.58" y="223.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::Run (2,250,000 samples, 0.02%)</title><rect x="30.8" y="453" width="0.3" height="15.0" fill="rgb(226,86,28)" rx="2" ry="2" />
<text  x="33.78" y="463.5" ></text>
</g>
<g >
<title>from_kprojid (5,250,000 samples, 0.05%)</title><rect x="512.5" y="277" width="0.6" height="15.0" fill="rgb(214,171,24)" rx="2" ry="2" />
<text  x="515.46" y="287.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (14,000,000 samples, 0.14%)</title><rect x="523.7" y="293" width="1.7" height="15.0" fill="rgb(213,25,48)" rx="2" ry="2" />
<text  x="526.69" y="303.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::exception_ptr (2,500,000 samples, 0.03%)</title><rect x="1083.5" y="261" width="0.3" height="15.0" fill="rgb(240,143,5)" rx="2" ry="2" />
<text  x="1086.51" y="271.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Valid (1,500,000 samples, 0.02%)</title><rect x="629.3" y="197" width="0.2" height="15.0" fill="rgb(215,36,23)" rx="2" ry="2" />
<text  x="632.29" y="207.5" ></text>
</g>
<g >
<title>read (9,750,000 samples, 0.10%)</title><rect x="1186.5" y="501" width="1.2" height="15.0" fill="rgb(231,80,25)" rx="2" ry="2" />
<text  x="1189.46" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,250,000 samples, 0.01%)</title><rect x="10.1" y="277" width="0.1" height="15.0" fill="rgb(219,130,33)" rx="2" ry="2" />
<text  x="13.09" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (6,500,000 samples, 0.07%)</title><rect x="590.4" y="293" width="0.8" height="15.0" fill="rgb(252,130,51)" rx="2" ry="2" />
<text  x="593.45" y="303.5" ></text>
</g>
<g >
<title>crypto_shash_update (6,500,000 samples, 0.07%)</title><rect x="522.6" y="261" width="0.8" height="15.0" fill="rgb(254,95,43)" rx="2" ry="2" />
<text  x="525.65" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_addr (2,250,000 samples, 0.02%)</title><rect x="1149.5" y="37" width="0.3" height="15.0" fill="rgb(245,124,7)" rx="2" ry="2" />
<text  x="1152.48" y="47.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (4,496,500,000 samples, 46.51%)</title><rect x="626.2" y="485" width="548.8" height="15.0" fill="rgb(208,80,27)" rx="2" ry="2" />
<text  x="629.18" y="495.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>leveldb::ExtractUserKey (2,500,000 samples, 0.03%)</title><rect x="690.3" y="213" width="0.3" height="15.0" fill="rgb(246,160,21)" rx="2" ry="2" />
<text  x="693.26" y="223.5" ></text>
</g>
<g >
<title>ext4_superblock_csum_set (6,500,000 samples, 0.07%)</title><rect x="522.6" y="277" width="0.8" height="15.0" fill="rgb(250,156,43)" rx="2" ry="2" />
<text  x="525.65" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,000,000 samples, 0.08%)</title><rect x="1112.1" y="181" width="0.9" height="15.0" fill="rgb(211,7,37)" rx="2" ry="2" />
<text  x="1115.07" y="191.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::store (21,250,000 samples, 0.22%)</title><rect x="957.5" y="181" width="2.6" height="15.0" fill="rgb(240,42,33)" rx="2" ry="2" />
<text  x="960.49" y="191.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Sequence (13,500,000 samples, 0.14%)</title><rect x="984.5" y="261" width="1.6" height="15.0" fill="rgb(217,101,44)" rx="2" ry="2" />
<text  x="987.46" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (27,500,000 samples, 0.28%)</title><rect x="574.5" y="309" width="3.4" height="15.0" fill="rgb(231,207,16)" rx="2" ry="2" />
<text  x="577.52" y="319.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed64 (20,500,000 samples, 0.21%)</title><rect x="986.5" y="261" width="2.5" height="15.0" fill="rgb(217,183,11)" rx="2" ry="2" />
<text  x="989.54" y="271.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::FlushBuffer (1,000,000 samples, 0.01%)</title><rect x="700.7" y="181" width="0.1" height="15.0" fill="rgb(205,15,11)" rx="2" ry="2" />
<text  x="703.69" y="191.5" ></text>
</g>
<g >
<title>hash_futex (10,250,000 samples, 0.11%)</title><rect x="558.7" y="405" width="1.3" height="15.0" fill="rgb(228,209,21)" rx="2" ry="2" />
<text  x="561.72" y="415.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (4,496,500,000 samples, 46.51%)</title><rect x="626.2" y="421" width="548.8" height="15.0" fill="rgb(236,43,26)" rx="2" ry="2" />
<text  x="629.18" y="431.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>ext4_mark_iloc_dirty (3,250,000 samples, 0.03%)</title><rect x="418.1" y="229" width="0.3" height="15.0" fill="rgb(236,118,44)" rx="2" ry="2" />
<text  x="421.05" y="239.5" ></text>
</g>
<g >
<title>leveldb::MemTable::KeyComparator::operator (916,000,000 samples, 9.47%)</title><rect x="823.1" y="165" width="111.8" height="15.0" fill="rgb(226,109,50)" rx="2" ry="2" />
<text  x="826.08" y="175.5" >leveldb::MemT..</text>
</g>
<g >
<title>_IO_setb (1,000,000 samples, 0.01%)</title><rect x="15.6" y="485" width="0.1" height="15.0" fill="rgb(222,135,34)" rx="2" ry="2" />
<text  x="18.58" y="495.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Clear (1,250,000 samples, 0.01%)</title><rect x="1160.2" y="309" width="0.1" height="15.0" fill="rgb(236,178,25)" rx="2" ry="2" />
<text  x="1163.19" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::size (3,500,000 samples, 0.04%)</title><rect x="689.6" y="197" width="0.5" height="15.0" fill="rgb(243,127,32)" rx="2" ry="2" />
<text  x="692.65" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::allocator (1,250,000 samples, 0.01%)</title><rect x="1114.4" y="181" width="0.1" height="15.0" fill="rgb(250,55,16)" rx="2" ry="2" />
<text  x="1117.39" y="191.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1,250,000 samples, 0.01%)</title><rect x="1078.8" y="181" width="0.1" height="15.0" fill="rgb(250,128,46)" rx="2" ry="2" />
<text  x="1081.78" y="191.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::ThreadBody (3,641,500,000 samples, 37.67%)</title><rect x="730.5" y="357" width="444.5" height="15.0" fill="rgb(220,63,48)" rx="2" ry="2" />
<text  x="733.53" y="367.5" >leveldb::Benchmark::ThreadBody</text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixEnv::BackgroundThreadNodeEntryPoint (855,000,000 samples, 8.84%)</title><rect x="626.2" y="357" width="104.3" height="15.0" fill="rgb(238,169,32)" rx="2" ry="2" />
<text  x="629.18" y="367.5" >leveldb::(an..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (1,000,000 samples, 0.01%)</title><rect x="587.4" y="293" width="0.2" height="15.0" fill="rgb(229,77,24)" rx="2" ry="2" />
<text  x="590.43" y="303.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Writer::Writer (14,000,000 samples, 0.14%)</title><rect x="757.3" y="277" width="1.7" height="15.0" fill="rgb(223,209,20)" rx="2" ry="2" />
<text  x="760.29" y="287.5" ></text>
</g>
<g >
<title>ext4_group_desc_csum (4,250,000 samples, 0.04%)</title><rect x="425.8" y="229" width="0.6" height="15.0" fill="rgb(244,111,1)" rx="2" ry="2" />
<text  x="428.83" y="239.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::~__basic_future (10,500,000 samples, 0.11%)</title><rect x="1096.4" y="277" width="1.2" height="15.0" fill="rgb(237,225,53)" rx="2" ry="2" />
<text  x="1099.36" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_init_functor (13,250,000 samples, 0.14%)</title><rect x="1075.3" y="245" width="1.6" height="15.0" fill="rgb(253,133,25)" rx="2" ry="2" />
<text  x="1078.27" y="255.5" ></text>
</g>
<g >
<title>leveldb::MemTable::ApproximateMemoryUsage (2,750,000 samples, 0.03%)</title><rect x="754.5" y="261" width="0.4" height="15.0" fill="rgb(243,107,18)" rx="2" ry="2" />
<text  x="757.52" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (2,500,000 samples, 0.03%)</title><rect x="1124.3" y="197" width="0.3" height="15.0" fill="rgb(231,164,37)" rx="2" ry="2" />
<text  x="1127.27" y="207.5" ></text>
</g>
<g >
<title>std::operator&amp; (1,000,000 samples, 0.01%)</title><rect x="1085.4" y="245" width="0.2" height="15.0" fill="rgb(245,168,32)" rx="2" ry="2" />
<text  x="1088.43" y="255.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::key (1,250,000 samples, 0.01%)</title><rect x="730.2" y="245" width="0.2" height="15.0" fill="rgb(240,119,14)" rx="2" ry="2" />
<text  x="733.23" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter, void&gt; (1,250,000 samples, 0.01%)</title><rect x="593.0" y="357" width="0.2" height="15.0" fill="rgb(251,99,37)" rx="2" ry="2" />
<text  x="596.01" y="367.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (2,500,000 samples, 0.03%)</title><rect x="418.1" y="197" width="0.3" height="15.0" fill="rgb(244,135,44)" rx="2" ry="2" />
<text  x="421.11" y="207.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed32 (1,500,000 samples, 0.02%)</title><rect x="701.4" y="149" width="0.1" height="15.0" fill="rgb(252,86,47)" rx="2" ry="2" />
<text  x="704.36" y="159.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1,750,000 samples, 0.02%)</title><rect x="1129.0" y="277" width="0.2" height="15.0" fill="rgb(224,36,42)" rx="2" ry="2" />
<text  x="1132.00" y="287.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::WriteWrapper (2,765,750,000 samples, 28.61%)</title><rect x="741.5" y="293" width="337.6" height="15.0" fill="rgb(214,29,13)" rx="2" ry="2" />
<text  x="744.55" y="303.5" >leveldb::DBImpl::WriteWrapper</text>
</g>
<g >
<title>leveldb::Slice::Slice (2,750,000 samples, 0.03%)</title><rect x="735.7" y="293" width="0.3" height="15.0" fill="rgb(246,164,43)" rx="2" ry="2" />
<text  x="738.69" y="303.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (3,000,000 samples, 0.03%)</title><rect x="725.4" y="197" width="0.4" height="15.0" fill="rgb(246,200,34)" rx="2" ry="2" />
<text  x="728.41" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,250,000 samples, 0.01%)</title><rect x="1176.0" y="405" width="0.1" height="15.0" fill="rgb(210,92,21)" rx="2" ry="2" />
<text  x="1178.99" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::get (1,500,000 samples, 0.02%)</title><rect x="1085.6" y="245" width="0.1" height="15.0" fill="rgb(212,200,5)" rx="2" ry="2" />
<text  x="1088.55" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (99,500,000 samples, 1.03%)</title><rect x="884.7" y="117" width="12.1" height="15.0" fill="rgb(252,149,17)" rx="2" ry="2" />
<text  x="887.69" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1,250,000 samples, 0.01%)</title><rect x="984.1" y="245" width="0.2" height="15.0" fill="rgb(207,179,44)" rx="2" ry="2" />
<text  x="987.10" y="255.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (8,250,000 samples, 0.09%)</title><rect x="524.3" y="277" width="1.0" height="15.0" fill="rgb(220,43,42)" rx="2" ry="2" />
<text  x="527.30" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (7,250,000 samples, 0.07%)</title><rect x="750.1" y="245" width="0.8" height="15.0" fill="rgb(229,58,44)" rx="2" ry="2" />
<text  x="753.06" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (15,750,000 samples, 0.16%)</title><rect x="473.6" y="245" width="2.0" height="15.0" fill="rgb(242,87,0)" rx="2" ry="2" />
<text  x="476.65" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (1,000,000 samples, 0.01%)</title><rect x="603.4" y="405" width="0.1" height="15.0" fill="rgb(215,191,1)" rx="2" ry="2" />
<text  x="606.39" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::push_back (19,000,000 samples, 0.20%)</title><rect x="1060.6" y="277" width="2.3" height="15.0" fill="rgb(226,210,51)" rx="2" ry="2" />
<text  x="1063.62" y="287.5" ></text>
</g>
<g >
<title>__madvise (1,250,000 samples, 0.01%)</title><rect x="10.1" y="309" width="0.1" height="15.0" fill="rgb(227,33,23)" rx="2" ry="2" />
<text  x="13.09" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base*&amp;&gt; (1,750,000 samples, 0.02%)</title><rect x="586.6" y="261" width="0.2" height="15.0" fill="rgb(236,171,18)" rx="2" ry="2" />
<text  x="589.57" y="271.5" ></text>
</g>
<g >
<title>__vfs_read (9,750,000 samples, 0.10%)</title><rect x="1186.5" y="405" width="1.2" height="15.0" fill="rgb(233,80,21)" rx="2" ry="2" />
<text  x="1189.46" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (1,250,000 samples, 0.01%)</title><rect x="1107.7" y="213" width="0.2" height="15.0" fill="rgb(243,42,52)" rx="2" ry="2" />
<text  x="1110.74" y="223.5" ></text>
</g>
<g >
<title>__do_sys_madvise (1,000,000 samples, 0.01%)</title><rect x="10.1" y="245" width="0.1" height="15.0" fill="rgb(217,12,40)" rx="2" ry="2" />
<text  x="13.12" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*&amp;&gt; (2,000,000 samples, 0.02%)</title><rect x="577.2" y="261" width="0.3" height="15.0" fill="rgb(244,157,18)" rx="2" ry="2" />
<text  x="580.24" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;leveldb::Status&gt;::_M_addr (4,500,000 samples, 0.05%)</title><rect x="570.2" y="325" width="0.5" height="15.0" fill="rgb(245,64,40)" rx="2" ry="2" />
<text  x="573.19" y="335.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::set_value (127,750,000 samples, 1.32%)</title><rect x="1063.4" y="277" width="15.6" height="15.0" fill="rgb(243,147,12)" rx="2" ry="2" />
<text  x="1066.40" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,750,000 samples, 0.02%)</title><rect x="1157.6" y="261" width="0.2" height="15.0" fill="rgb(214,25,10)" rx="2" ry="2" />
<text  x="1160.60" y="271.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (1,750,000 samples, 0.02%)</title><rect x="1175.0" y="485" width="0.2" height="15.0" fill="rgb(225,49,24)" rx="2" ry="2" />
<text  x="1178.02" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (4,000,000 samples, 0.04%)</title><rect x="567.1" y="357" width="0.5" height="15.0" fill="rgb(241,200,46)" rx="2" ry="2" />
<text  x="570.11" y="367.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1,000,000 samples, 0.01%)</title><rect x="453.2" y="245" width="0.2" height="15.0" fill="rgb(250,63,21)" rx="2" ry="2" />
<text  x="456.23" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (7,250,000 samples, 0.07%)</title><rect x="583.2" y="325" width="0.9" height="15.0" fill="rgb(252,170,13)" rx="2" ry="2" />
<text  x="586.19" y="335.5" ></text>
</g>
<g >
<title>ext4_inode_table (1,000,000 samples, 0.01%)</title><rect x="519.3" y="261" width="0.1" height="15.0" fill="rgb(244,91,11)" rx="2" ry="2" />
<text  x="522.32" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (9,750,000 samples, 0.10%)</title><rect x="1186.5" y="453" width="1.2" height="15.0" fill="rgb(206,216,16)" rx="2" ry="2" />
<text  x="1189.46" y="463.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (107,750,000 samples, 1.11%)</title><rect x="16.5" y="485" width="13.2" height="15.0" fill="rgb(231,157,36)" rx="2" ry="2" />
<text  x="19.53" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter, true&gt; (9,500,000 samples, 0.10%)</title><rect x="1119.2" y="101" width="1.2" height="15.0" fill="rgb(232,190,8)" rx="2" ry="2" />
<text  x="1122.24" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (1,500,000 samples, 0.02%)</title><rect x="1055.4" y="277" width="0.2" height="15.0" fill="rgb(207,175,2)" rx="2" ry="2" />
<text  x="1058.41" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (2,000,000 samples, 0.02%)</title><rect x="591.0" y="261" width="0.2" height="15.0" fill="rgb(251,3,30)" rx="2" ry="2" />
<text  x="594.00" y="271.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (1,000,000 samples, 0.01%)</title><rect x="1000.4" y="229" width="0.1" height="15.0" fill="rgb(234,202,28)" rx="2" ry="2" />
<text  x="1003.42" y="239.5" ></text>
</g>
<g >
<title>std::once_flag::once_flag (1,250,000 samples, 0.01%)</title><rect x="1118.5" y="133" width="0.1" height="15.0" fill="rgb(222,101,35)" rx="2" ry="2" />
<text  x="1121.48" y="143.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (3,750,000 samples, 0.04%)</title><rect x="586.8" y="277" width="0.5" height="15.0" fill="rgb(251,124,30)" rx="2" ry="2" />
<text  x="589.82" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (193,750,000 samples, 2.00%)</title><rect x="1132.3" y="245" width="23.6" height="15.0" fill="rgb(218,219,53)" rx="2" ry="2" />
<text  x="1135.30" y="255.5" >s..</text>
</g>
<g >
<title>__ext4_get_inode_loc (2,000,000 samples, 0.02%)</title><rect x="421.4" y="197" width="0.3" height="15.0" fill="rgb(239,30,24)" rx="2" ry="2" />
<text  x="424.41" y="207.5" ></text>
</g>
<g >
<title>mark_page_accessed (2,750,000 samples, 0.03%)</title><rect x="518.7" y="229" width="0.3" height="15.0" fill="rgb(214,86,50)" rx="2" ry="2" />
<text  x="521.65" y="239.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (1,500,000 samples, 0.02%)</title><rect x="726.0" y="181" width="0.2" height="15.0" fill="rgb(229,202,32)" rx="2" ry="2" />
<text  x="729.02" y="191.5" ></text>
</g>
<g >
<title>ext4_superblock_csum_set (8,750,000 samples, 0.09%)</title><rect x="451.4" y="277" width="1.1" height="15.0" fill="rgb(225,128,36)" rx="2" ry="2" />
<text  x="454.43" y="287.5" ></text>
</g>
<g >
<title>leveldb::Benchmark::DoWrite (3,634,750,000 samples, 37.60%)</title><rect x="730.7" y="325" width="443.6" height="15.0" fill="rgb(226,155,44)" rx="2" ry="2" />
<text  x="733.72" y="335.5" >leveldb::Benchmark::DoWrite</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (1,000,000 samples, 0.01%)</title><rect x="574.3" y="309" width="0.1" height="15.0" fill="rgb(229,189,31)" rx="2" ry="2" />
<text  x="577.31" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1,750,000 samples, 0.02%)</title><rect x="10.1" y="341" width="0.2" height="15.0" fill="rgb(252,213,12)" rx="2" ry="2" />
<text  x="13.06" y="351.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (1,000,000 samples, 0.01%)</title><rect x="773.4" y="261" width="0.1" height="15.0" fill="rgb(206,139,14)" rx="2" ry="2" />
<text  x="776.41" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (1,250,000 samples, 0.01%)</title><rect x="577.1" y="245" width="0.1" height="15.0" fill="rgb(222,146,3)" rx="2" ry="2" />
<text  x="580.08" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::front (24,250,000 samples, 0.25%)</title><rect x="1056.9" y="277" width="3.0" height="15.0" fill="rgb(231,194,54)" rx="2" ry="2" />
<text  x="1059.90" y="287.5" ></text>
</g>
<g >
<title>__blkdev_issue_zero_pages (5,250,000 samples, 0.05%)</title><rect x="427.9" y="261" width="0.6" height="15.0" fill="rgb(212,195,42)" rx="2" ry="2" />
<text  x="430.88" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1,500,000 samples, 0.02%)</title><rect x="688.0" y="197" width="0.2" height="15.0" fill="rgb(224,114,12)" rx="2" ry="2" />
<text  x="691.00" y="207.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (17,250,000 samples, 0.18%)</title><rect x="419.7" y="261" width="2.1" height="15.0" fill="rgb(215,72,2)" rx="2" ry="2" />
<text  x="422.67" y="271.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (7,500,000 samples, 0.08%)</title><rect x="457.9" y="293" width="0.9" height="15.0" fill="rgb(226,88,43)" rx="2" ry="2" />
<text  x="460.90" y="303.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (1,000,000 samples, 0.01%)</title><rect x="1051.8" y="245" width="0.2" height="15.0" fill="rgb(222,225,49)" rx="2" ry="2" />
<text  x="1054.84" y="255.5" ></text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (10,250,000 samples, 0.11%)</title><rect x="702.7" y="149" width="1.3" height="15.0" fill="rgb(247,14,29)" rx="2" ry="2" />
<text  x="705.71" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (64,750,000 samples, 0.67%)</title><rect x="430.2" y="149" width="7.9" height="15.0" fill="rgb(221,35,29)" rx="2" ry="2" />
<text  x="433.19" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,000,000 samples, 0.01%)</title><rect x="1178.4" y="437" width="0.1" height="15.0" fill="rgb(238,28,37)" rx="2" ry="2" />
<text  x="1181.37" y="447.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_destroy (30,000,000 samples, 0.31%)</title><rect x="1147.0" y="117" width="3.7" height="15.0" fill="rgb(241,6,43)" rx="2" ry="2" />
<text  x="1150.01" y="127.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (1,000,000 samples, 0.01%)</title><rect x="640.8" y="229" width="0.1" height="15.0" fill="rgb(241,13,1)" rx="2" ry="2" />
<text  x="643.77" y="239.5" ></text>
</g>
<g >
<title>std::swap&lt;std::__future_base::_State_baseV2*&gt; (12,750,000 samples, 0.13%)</title><rect x="1093.5" y="229" width="1.6" height="15.0" fill="rgb(211,108,26)" rx="2" ry="2" />
<text  x="1096.52" y="239.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,000,000 samples, 0.04%)</title><rect x="982.1" y="229" width="0.5" height="15.0" fill="rgb(229,80,6)" rx="2" ry="2" />
<text  x="985.15" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4,000,000 samples, 0.04%)</title><rect x="29.7" y="437" width="0.5" height="15.0" fill="rgb(233,168,1)" rx="2" ry="2" />
<text  x="32.74" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6,250,000 samples, 0.06%)</title><rect x="1130.7" y="245" width="0.8" height="15.0" fill="rgb(207,99,42)" rx="2" ry="2" />
<text  x="1133.74" y="255.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::SetCount (8,250,000 samples, 0.09%)</title><rect x="1168.9" y="293" width="1.0" height="15.0" fill="rgb(221,165,3)" rx="2" ry="2" />
<text  x="1171.88" y="303.5" ></text>
</g>
<g >
<title>leveldb::Status::OK (4,500,000 samples, 0.05%)</title><rect x="1006.1" y="197" width="0.6" height="15.0" fill="rgb(251,117,47)" rx="2" ry="2" />
<text  x="1009.13" y="207.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__future_base::_State_baseV2&gt; (162,000,000 samples, 1.68%)</title><rect x="1106.1" y="277" width="19.7" height="15.0" fill="rgb(230,45,52)" rx="2" ry="2" />
<text  x="1109.06" y="287.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (5,250,000 samples, 0.05%)</title><rect x="658.2" y="165" width="0.7" height="15.0" fill="rgb(254,169,53)" rx="2" ry="2" />
<text  x="661.25" y="175.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (6,000,000 samples, 0.06%)</title><rect x="1086.2" y="197" width="0.7" height="15.0" fill="rgb(234,56,25)" rx="2" ry="2" />
<text  x="1089.19" y="207.5" ></text>
</g>
<g >
<title>pthread_cond_destroy@@GLIBC_2.3.2 (11,000,000 samples, 0.11%)</title><rect x="759.6" y="261" width="1.4" height="15.0" fill="rgb(246,177,47)" rx="2" ry="2" />
<text  x="762.64" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5,750,000 samples, 0.06%)</title><rect x="1177.8" y="501" width="0.7" height="15.0" fill="rgb(245,82,0)" rx="2" ry="2" />
<text  x="1180.79" y="511.5" ></text>
</g>
<g >
<title>_cond_resched (1,250,000 samples, 0.01%)</title><rect x="477.1" y="309" width="0.1" height="15.0" fill="rgb(245,114,45)" rx="2" ry="2" />
<text  x="480.09" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (16,250,000 samples, 0.17%)</title><rect x="1118.6" y="133" width="2.0" height="15.0" fill="rgb(231,198,38)" rx="2" ry="2" />
<text  x="1121.63" y="143.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (7,750,000 samples, 0.08%)</title><rect x="1152.3" y="117" width="0.9" height="15.0" fill="rgb(216,225,39)" rx="2" ry="2" />
<text  x="1155.29" y="127.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::~_Result (12,750,000 samples, 0.13%)</title><rect x="1148.2" y="85" width="1.6" height="15.0" fill="rgb(250,184,36)" rx="2" ry="2" />
<text  x="1151.20" y="95.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt;::operator (99,750,000 samples, 1.03%)</title><rect x="569.3" y="341" width="12.1" height="15.0" fill="rgb(234,219,11)" rx="2" ry="2" />
<text  x="572.27" y="351.5" ></text>
</g>
<g >
<title>ext4_iomap_begin (592,000,000 samples, 6.12%)</title><rect x="384.2" y="325" width="72.2" height="15.0" fill="rgb(250,109,48)" rx="2" ry="2" />
<text  x="387.15" y="335.5" >ext4_iom..</text>
</g>
<g >
<title>submit_bio_wait_endio (66,000,000 samples, 0.68%)</title><rect x="430.0" y="181" width="8.1" height="15.0" fill="rgb(245,77,52)" rx="2" ry="2" />
<text  x="433.04" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::_M_pop_front_aux (1,500,000 samples, 0.02%)</title><rect x="1060.4" y="261" width="0.2" height="15.0" fill="rgb(222,186,6)" rx="2" ry="2" />
<text  x="1063.44" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (3,000,000 samples, 0.03%)</title><rect x="767.4" y="245" width="0.4" height="15.0" fill="rgb(206,108,25)" rx="2" ry="2" />
<text  x="770.43" y="255.5" ></text>
</g>
<g >
<title>std::move&lt;std::__future_base::_Result_base::_Deleter&amp;&gt; (4,250,000 samples, 0.04%)</title><rect x="600.3" y="325" width="0.5" height="15.0" fill="rgb(237,55,50)" rx="2" ry="2" />
<text  x="603.31" y="335.5" ></text>
</g>
<g >
<title>dax_read_unlock (2,454,500,000 samples, 25.39%)</title><rect x="81.4" y="309" width="299.6" height="15.0" fill="rgb(231,129,43)" rx="2" ry="2" />
<text  x="84.40" y="319.5" >dax_read_unlock</text>
</g>
<g >
<title>snappy::ByteArraySource::Available (1,250,000 samples, 0.01%)</title><rect x="607.3" y="453" width="0.2" height="15.0" fill="rgb(247,158,27)" rx="2" ry="2" />
<text  x="610.32" y="463.5" ></text>
</g>
<g >
<title>dax_iomap_actor (11,750,000 samples, 0.12%)</title><rect x="59.2" y="341" width="1.5" height="15.0" fill="rgb(228,141,50)" rx="2" ry="2" />
<text  x="62.25" y="351.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::InsertInto (1,761,750,000 samples, 18.22%)</title><rect x="771.2" y="277" width="215.0" height="15.0" fill="rgb(208,13,1)" rx="2" ry="2" />
<text  x="774.21" y="287.5" >leveldb::WriteBatchInternal:..</text>
</g>
<g >
<title>std::move&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt;&amp;&gt; (1,000,000 samples, 0.01%)</title><rect x="1076.7" y="213" width="0.1" height="15.0" fill="rgb(242,213,3)" rx="2" ry="2" />
<text  x="1079.67" y="223.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (3,750,000 samples, 0.04%)</title><rect x="1174.4" y="325" width="0.5" height="15.0" fill="rgb(217,86,10)" rx="2" ry="2" />
<text  x="1177.44" y="335.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (1,750,000 samples, 0.02%)</title><rect x="628.5" y="229" width="0.2" height="15.0" fill="rgb(235,172,26)" rx="2" ry="2" />
<text  x="631.50" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2,500,000 samples, 0.03%)</title><rect x="1131.2" y="229" width="0.3" height="15.0" fill="rgb(233,5,16)" rx="2" ry="2" />
<text  x="1134.20" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (5,000,000 samples, 0.05%)</title><rect x="588.7" y="293" width="0.6" height="15.0" fill="rgb(247,180,20)" rx="2" ry="2" />
<text  x="591.68" y="303.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (90,500,000 samples, 0.94%)</title><rect x="416.6" y="293" width="11.1" height="15.0" fill="rgb(205,180,21)" rx="2" ry="2" />
<text  x="419.65" y="303.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt; (3,500,000 samples, 0.04%)</title><rect x="568.8" y="325" width="0.4" height="15.0" fill="rgb(236,132,27)" rx="2" ry="2" />
<text  x="571.75" y="335.5" ></text>
</g>
<g >
<title>leveldb::MutexLock::MutexLock (14,000,000 samples, 0.14%)</title><rect x="761.2" y="277" width="1.7" height="15.0" fill="rgb(253,18,13)" rx="2" ry="2" />
<text  x="764.17" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25,750,000 samples, 0.27%)</title><rect x="776.1" y="229" width="3.2" height="15.0" fill="rgb(239,221,50)" rx="2" ry="2" />
<text  x="779.12" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_get_pointer (8,750,000 samples, 0.09%)</title><rect x="568.2" y="341" width="1.0" height="15.0" fill="rgb(237,204,28)" rx="2" ry="2" />
<text  x="571.17" y="351.5" ></text>
</g>
<g >
<title>__do_sys_madvise (1,000,000 samples, 0.01%)</title><rect x="13.1" y="405" width="0.1" height="15.0" fill="rgb(207,205,3)" rx="2" ry="2" />
<text  x="16.11" y="415.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (2,750,000 samples, 0.03%)</title><rect x="697.1" y="213" width="0.3" height="15.0" fill="rgb(244,180,40)" rx="2" ry="2" />
<text  x="700.06" y="223.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (75,750,000 samples, 0.78%)</title><rect x="941.1" y="165" width="9.3" height="15.0" fill="rgb(238,191,54)" rx="2" ry="2" />
<text  x="944.11" y="175.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (3,250,000 samples, 0.03%)</title><rect x="1062.9" y="277" width="0.4" height="15.0" fill="rgb(227,101,41)" rx="2" ry="2" />
<text  x="1065.94" y="287.5" ></text>
</g>
<g >
<title>path_openat (4,000,000 samples, 0.04%)</title><rect x="29.7" y="389" width="0.5" height="15.0" fill="rgb(226,70,16)" rx="2" ry="2" />
<text  x="32.74" y="399.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::Next (1,000,000 samples, 0.01%)</title><rect x="730.0" y="245" width="0.1" height="15.0" fill="rgb(249,70,36)" rx="2" ry="2" />
<text  x="732.96" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result_base*, false&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="1153.1" y="69" width="0.1" height="15.0" fill="rgb(247,197,22)" rx="2" ry="2" />
<text  x="1156.11" y="79.5" ></text>
</g>
<g >
<title>db_bench (9,668,000,000 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(244,34,45)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >db_bench</text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::operator (11,250,000 samples, 0.12%)</title><rect x="572.3" y="325" width="1.4" height="15.0" fill="rgb(208,71,35)" rx="2" ry="2" />
<text  x="575.29" y="335.5" ></text>
</g>
<g >
<title>leveldb::GetVarint32Ptr (14,500,000 samples, 0.15%)</title><rect x="867.4" y="149" width="1.8" height="15.0" fill="rgb(234,144,27)" rx="2" ry="2" />
<text  x="870.42" y="159.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (1,000,000 samples, 0.01%)</title><rect x="628.7" y="229" width="0.1" height="15.0" fill="rgb(234,94,49)" rx="2" ry="2" />
<text  x="631.71" y="239.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (2,000,000 samples, 0.02%)</title><rect x="1081.2" y="293" width="0.2" height="15.0" fill="rgb(215,198,28)" rx="2" ry="2" />
<text  x="1084.19" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (5,500,000 samples, 0.06%)</title><rect x="601.6" y="357" width="0.7" height="15.0" fill="rgb(217,41,28)" rx="2" ry="2" />
<text  x="604.62" y="367.5" ></text>
</g>
<g >
<title>__fsnotify_parent (5,000,000 samples, 0.05%)</title><rect x="50.9" y="389" width="0.6" height="15.0" fill="rgb(224,115,9)" rx="2" ry="2" />
<text  x="53.86" y="399.5" ></text>
</g>
<g >
<title>__fget (1,000,000 samples, 0.01%)</title><rect x="42.6" y="389" width="0.1" height="15.0" fill="rgb(226,210,54)" rx="2" ry="2" />
<text  x="45.56" y="399.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (4,750,000 samples, 0.05%)</title><rect x="480.7" y="293" width="0.6" height="15.0" fill="rgb(216,203,4)" rx="2" ry="2" />
<text  x="483.72" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (2,500,000 samples, 0.03%)</title><rect x="1083.9" y="245" width="0.3" height="15.0" fill="rgb(223,156,40)" rx="2" ry="2" />
<text  x="1086.91" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (16,250,000 samples, 0.17%)</title><rect x="1134.5" y="213" width="2.0" height="15.0" fill="rgb(253,195,45)" rx="2" ry="2" />
<text  x="1137.50" y="223.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (1,250,000 samples, 0.01%)</title><rect x="1007.6" y="245" width="0.1" height="15.0" fill="rgb(247,8,31)" rx="2" ry="2" />
<text  x="1010.59" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::emplace_back&lt;unsigned int&gt; (3,500,000 samples, 0.04%)</title><rect x="688.7" y="181" width="0.5" height="15.0" fill="rgb(240,214,44)" rx="2" ry="2" />
<text  x="691.73" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (11,250,000 samples, 0.12%)</title><rect x="392.5" y="277" width="1.4" height="15.0" fill="rgb(245,85,4)" rx="2" ry="2" />
<text  x="395.54" y="287.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Count (6,000,000 samples, 0.06%)</title><rect x="770.5" y="277" width="0.7" height="15.0" fill="rgb(225,219,39)" rx="2" ry="2" />
<text  x="773.48" y="287.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (6,250,000 samples, 0.06%)</title><rect x="453.2" y="261" width="0.8" height="15.0" fill="rgb(254,75,39)" rx="2" ry="2" />
<text  x="456.20" y="271.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned int&gt;::__atomic_base (3,250,000 samples, 0.03%)</title><rect x="1117.4" y="101" width="0.4" height="15.0" fill="rgb(235,211,15)" rx="2" ry="2" />
<text  x="1120.38" y="111.5" ></text>
</g>
<g >
<title>std::operator&amp; (1,000,000 samples, 0.01%)</title><rect x="953.5" y="181" width="0.1" height="15.0" fill="rgb(207,203,42)" rx="2" ry="2" />
<text  x="956.52" y="191.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (16,750,000 samples, 0.17%)</title><rect x="1138.4" y="197" width="2.0" height="15.0" fill="rgb(209,135,45)" rx="2" ry="2" />
<text  x="1141.37" y="207.5" ></text>
</g>
<g >
<title>std::once_flag::once_flag (1,000,000 samples, 0.01%)</title><rect x="1120.7" y="149" width="0.1" height="15.0" fill="rgb(227,168,28)" rx="2" ry="2" />
<text  x="1123.70" y="159.5" ></text>
</g>
<g >
<title>leveldb::MemTableIterator::Valid (3,750,000 samples, 0.04%)</title><rect x="630.4" y="229" width="0.4" height="15.0" fill="rgb(233,20,15)" rx="2" ry="2" />
<text  x="633.39" y="239.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::~future (11,750,000 samples, 0.12%)</title><rect x="1096.2" y="293" width="1.4" height="15.0" fill="rgb(208,43,29)" rx="2" ry="2" />
<text  x="1099.20" y="303.5" ></text>
</g>
<g >
<title>leveldb::GetLengthPrefixedSlice (80,750,000 samples, 0.84%)</title><rect x="969.2" y="245" width="9.9" height="15.0" fill="rgb(229,147,48)" rx="2" ry="2" />
<text  x="972.21" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (9,000,000 samples, 0.09%)</title><rect x="763.6" y="229" width="1.1" height="15.0" fill="rgb(216,162,5)" rx="2" ry="2" />
<text  x="766.58" y="239.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,750,000 samples, 0.02%)</title><rect x="590.2" y="293" width="0.2" height="15.0" fill="rgb(207,174,6)" rx="2" ry="2" />
<text  x="593.24" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,000,000 samples, 0.01%)</title><rect x="13.1" y="437" width="0.1" height="15.0" fill="rgb(217,63,32)" rx="2" ry="2" />
<text  x="16.11" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt;&gt; (153,000,000 samples, 1.58%)</title><rect x="1106.9" y="245" width="18.7" height="15.0" fill="rgb(245,113,1)" rx="2" ry="2" />
<text  x="1109.88" y="255.5" ></text>
</g>
<g >
<title>futex_wake (23,250,000 samples, 0.24%)</title><rect x="555.8" y="405" width="2.9" height="15.0" fill="rgb(215,144,30)" rx="2" ry="2" />
<text  x="558.82" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (12,000,000 samples, 0.12%)</title><rect x="1171.0" y="309" width="1.5" height="15.0" fill="rgb(225,143,21)" rx="2" ry="2" />
<text  x="1174.02" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1,000,000 samples, 0.01%)</title><rect x="986.1" y="261" width="0.1" height="15.0" fill="rgb(217,103,29)" rx="2" ry="2" />
<text  x="989.11" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get (8,000,000 samples, 0.08%)</title><rect x="580.5" y="293" width="0.9" height="15.0" fill="rgb(235,161,9)" rx="2" ry="2" />
<text  x="583.47" y="303.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (1,500,000 samples, 0.02%)</title><rect x="653.5" y="197" width="0.1" height="15.0" fill="rgb(208,221,8)" rx="2" ry="2" />
<text  x="656.46" y="207.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (89,750,000 samples, 0.93%)</title><rect x="1040.1" y="213" width="11.0" height="15.0" fill="rgb(234,211,6)" rx="2" ry="2" />
<text  x="1043.12" y="223.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::WriteUnbuffered (17,250,000 samples, 0.18%)</title><rect x="1004.6" y="213" width="2.1" height="15.0" fill="rgb(246,21,44)" rx="2" ry="2" />
<text  x="1007.60" y="223.5" ></text>
</g>
<g >
<title>pmem_copy_from_iter (15,000,000 samples, 0.16%)</title><rect x="381.1" y="309" width="1.8" height="15.0" fill="rgb(208,1,4)" rx="2" ry="2" />
<text  x="384.10" y="319.5" ></text>
</g>
<g >
<title>ext4_evict_inode (1,750,000 samples, 0.02%)</title><rect x="30.4" y="309" width="0.3" height="15.0" fill="rgb(222,98,39)" rx="2" ry="2" />
<text  x="33.44" y="319.5" ></text>
</g>
<g >
<title>operator new[] (1,000,000 samples, 0.01%)</title><rect x="1123.4" y="165" width="0.1" height="15.0" fill="rgb(217,142,34)" rx="2" ry="2" />
<text  x="1126.39" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (1,000,000 samples, 0.01%)</title><rect x="10.1" y="261" width="0.1" height="15.0" fill="rgb(248,195,48)" rx="2" ry="2" />
<text  x="13.12" y="271.5" ></text>
</g>
<g >
<title>_IO_padn (2,250,000 samples, 0.02%)</title><rect x="15.3" y="485" width="0.3" height="15.0" fill="rgb(240,228,39)" rx="2" ry="2" />
<text  x="18.31" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::operator++ (6,500,000 samples, 0.07%)</title><rect x="747.7" y="261" width="0.8" height="15.0" fill="rgb(224,0,11)" rx="2" ry="2" />
<text  x="750.68" y="271.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::get (2,000,000 samples, 0.02%)</title><rect x="1173.6" y="309" width="0.3" height="15.0" fill="rgb(253,78,3)" rx="2" ry="2" />
<text  x="1176.65" y="319.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (4,500,000 samples, 0.05%)</title><rect x="418.0" y="245" width="0.5" height="15.0" fill="rgb(221,129,36)" rx="2" ry="2" />
<text  x="420.99" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (12,250,000 samples, 0.13%)</title><rect x="1134.9" y="197" width="1.5" height="15.0" fill="rgb(231,125,9)" rx="2" ry="2" />
<text  x="1137.89" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__future_base::_State_baseV2&gt;::~allocator (1,500,000 samples, 0.02%)</title><rect x="1125.4" y="213" width="0.2" height="15.0" fill="rgb(220,220,51)" rx="2" ry="2" />
<text  x="1128.37" y="223.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Append (20,250,000 samples, 0.21%)</title><rect x="999.0" y="245" width="2.4" height="15.0" fill="rgb(243,69,23)" rx="2" ry="2" />
<text  x="1001.96" y="255.5" ></text>
</g>
<g >
<title>leveldb::Status::ok (1,250,000 samples, 0.01%)</title><rect x="992.9" y="261" width="0.1" height="15.0" fill="rgb(239,131,4)" rx="2" ry="2" />
<text  x="995.89" y="271.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Iterate (1,723,000,000 samples, 17.82%)</title><rect x="774.1" y="261" width="210.3" height="15.0" fill="rgb(217,221,2)" rx="2" ry="2" />
<text  x="777.11" y="271.5" >leveldb::WriteBatch::Iterate</text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::pop_front (6,250,000 samples, 0.06%)</title><rect x="1059.9" y="277" width="0.7" height="15.0" fill="rgb(206,16,38)" rx="2" ry="2" />
<text  x="1062.86" y="287.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Iterate (1,000,000 samples, 0.01%)</title><rect x="769.8" y="277" width="0.1" height="15.0" fill="rgb(230,45,20)" rx="2" ry="2" />
<text  x="772.81" y="287.5" ></text>
</g>
<g >
<title>__open64 (2,250,000 samples, 0.02%)</title><rect x="628.0" y="229" width="0.3" height="15.0" fill="rgb(245,119,37)" rx="2" ry="2" />
<text  x="631.04" y="239.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1,250,000 samples, 0.01%)</title><rect x="419.8" y="229" width="0.1" height="15.0" fill="rgb(234,121,20)" rx="2" ry="2" />
<text  x="422.76" y="239.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (5,750,000 samples, 0.06%)</title><rect x="1096.9" y="245" width="0.7" height="15.0" fill="rgb(236,102,16)" rx="2" ry="2" />
<text  x="1099.94" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (7,750,000 samples, 0.08%)</title><rect x="748.5" y="261" width="1.0" height="15.0" fill="rgb(209,12,25)" rx="2" ry="2" />
<text  x="751.54" y="271.5" ></text>
</g>
<g >
<title>do_lookup_x (1,500,000 samples, 0.02%)</title><rect x="1182.9" y="501" width="0.1" height="15.0" fill="rgb(212,5,5)" rx="2" ry="2" />
<text  x="1185.86" y="511.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (1,000,000 samples, 0.01%)</title><rect x="560.8" y="437" width="0.1" height="15.0" fill="rgb(230,97,24)" rx="2" ry="2" />
<text  x="563.76" y="447.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (5,000,000 samples, 0.05%)</title><rect x="663.6" y="197" width="0.6" height="15.0" fill="rgb(222,32,30)" rx="2" ry="2" />
<text  x="666.59" y="207.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_value (4,000,000 samples, 0.04%)</title><rect x="1149.3" y="69" width="0.5" height="15.0" fill="rgb(221,24,30)" rx="2" ry="2" />
<text  x="1152.27" y="79.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,750,000 samples, 0.02%)</title><rect x="580.3" y="293" width="0.2" height="15.0" fill="rgb(238,118,12)" rx="2" ry="2" />
<text  x="583.26" y="303.5" ></text>
</g>
<g >
<title>bio_endio (69,000,000 samples, 0.71%)</title><rect x="429.7" y="197" width="8.4" height="15.0" fill="rgb(243,40,50)" rx="2" ry="2" />
<text  x="432.68" y="207.5" ></text>
</g>
<g >
<title>dax_get_private (1,500,000 samples, 0.02%)</title><rect x="78.8" y="293" width="0.2" height="15.0" fill="rgb(219,91,38)" rx="2" ry="2" />
<text  x="81.78" y="303.5" ></text>
</g>
<g >
<title>from_kuid (3,500,000 samples, 0.04%)</title><rect x="513.1" y="277" width="0.4" height="15.0" fill="rgb(219,129,48)" rx="2" ry="2" />
<text  x="516.10" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (2,250,000 samples, 0.02%)</title><rect x="1142.8" y="197" width="0.3" height="15.0" fill="rgb(231,97,21)" rx="2" ry="2" />
<text  x="1145.80" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get (1,000,000 samples, 0.01%)</title><rect x="588.0" y="325" width="0.1" height="15.0" fill="rgb(226,91,32)" rx="2" ry="2" />
<text  x="590.98" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__future_base::_Result_base::_Deleter&gt; (1,000,000 samples, 0.01%)</title><rect x="594.9" y="325" width="0.2" height="15.0" fill="rgb(244,228,0)" rx="2" ry="2" />
<text  x="597.93" y="335.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::WriteRawBlock (186,000,000 samples, 1.92%)</title><rect x="701.9" y="181" width="22.7" height="15.0" fill="rgb(219,75,41)" rx="2" ry="2" />
<text  x="704.91" y="191.5" >l..</text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter, true&gt; (1,750,000 samples, 0.02%)</title><rect x="1120.4" y="117" width="0.2" height="15.0" fill="rgb(249,50,7)" rx="2" ry="2" />
<text  x="1123.40" y="127.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (5,500,000 samples, 0.06%)</title><rect x="565.2" y="373" width="0.7" height="15.0" fill="rgb(217,196,22)" rx="2" ry="2" />
<text  x="568.18" y="383.5" ></text>
</g>
<g >
<title>kmem_cache_free (9,250,000 samples, 0.10%)</title><rect x="475.9" y="277" width="1.1" height="15.0" fill="rgb(226,89,48)" rx="2" ry="2" />
<text  x="478.90" y="287.5" ></text>
</g>
<g >
<title>crypto_shash_update (4,000,000 samples, 0.04%)</title><rect x="420.9" y="165" width="0.5" height="15.0" fill="rgb(211,174,13)" rx="2" ry="2" />
<text  x="423.92" y="175.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (96,500,000 samples, 1.00%)</title><rect x="387.6" y="309" width="11.8" height="15.0" fill="rgb(207,11,19)" rx="2" ry="2" />
<text  x="390.63" y="319.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Valid (1,000,000 samples, 0.01%)</title><rect x="630.3" y="213" width="0.1" height="15.0" fill="rgb(219,166,15)" rx="2" ry="2" />
<text  x="633.27" y="223.5" ></text>
</g>
<g >
<title>ext4_ext_insert_extent (14,250,000 samples, 0.15%)</title><rect x="417.1" y="277" width="1.7" height="15.0" fill="rgb(238,70,11)" rx="2" ry="2" />
<text  x="420.07" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (12,500,000 samples, 0.13%)</title><rect x="1072.8" y="261" width="1.5" height="15.0" fill="rgb(205,218,51)" rx="2" ry="2" />
<text  x="1075.77" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (1,750,000 samples, 0.02%)</title><rect x="1172.6" y="309" width="0.3" height="15.0" fill="rgb(245,92,37)" rx="2" ry="2" />
<text  x="1175.64" y="319.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (1,000,000 samples, 0.01%)</title><rect x="993.9" y="245" width="0.1" height="15.0" fill="rgb(238,193,0)" rx="2" ry="2" />
<text  x="996.89" y="255.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (4,750,000 samples, 0.05%)</title><rect x="1154.6" y="213" width="0.6" height="15.0" fill="rgb(213,13,0)" rx="2" ry="2" />
<text  x="1157.64" y="223.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1,750,000 samples, 0.02%)</title><rect x="1064.6" y="261" width="0.2" height="15.0" fill="rgb(205,35,21)" rx="2" ry="2" />
<text  x="1067.59" y="271.5" ></text>
</g>
<g >
<title>madvise_free_single_vma (1,750,000 samples, 0.02%)</title><rect x="540.4" y="405" width="0.3" height="15.0" fill="rgb(253,25,6)" rx="2" ry="2" />
<text  x="543.44" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (10,750,000 samples, 0.11%)</title><rect x="1113.0" y="181" width="1.4" height="15.0" fill="rgb(206,8,16)" rx="2" ry="2" />
<text  x="1116.05" y="191.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (1,250,000 samples, 0.01%)</title><rect x="766.1" y="261" width="0.1" height="15.0" fill="rgb(251,6,36)" rx="2" ry="2" />
<text  x="769.08" y="271.5" ></text>
</g>
<g >
<title>ext4_create (1,500,000 samples, 0.02%)</title><rect x="628.0" y="117" width="0.2" height="15.0" fill="rgb(228,80,29)" rx="2" ry="2" />
<text  x="631.04" y="127.5" ></text>
</g>
<g >
<title>vsnprintf (4,000,000 samples, 0.04%)</title><rect x="1187.2" y="309" width="0.5" height="15.0" fill="rgb(210,18,36)" rx="2" ry="2" />
<text  x="1190.16" y="319.5" ></text>
</g>
<g >
<title>[vmlinux] (2,000,000 samples, 0.02%)</title><rect x="1183.0" y="469" width="0.3" height="15.0" fill="rgb(210,111,9)" rx="2" ry="2" />
<text  x="1186.04" y="479.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;&gt; (157,250,000 samples, 1.63%)</title><rect x="1106.4" y="261" width="19.2" height="15.0" fill="rgb(237,30,16)" rx="2" ry="2" />
<text  x="1109.36" y="271.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (526,250,000 samples, 5.44%)</title><rect x="869.2" y="149" width="64.2" height="15.0" fill="rgb(223,224,19)" rx="2" ry="2" />
<text  x="872.19" y="159.5" >leveldb..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,000,000 samples, 0.01%)</title><rect x="13.1" y="453" width="0.1" height="15.0" fill="rgb(206,200,34)" rx="2" ry="2" />
<text  x="16.11" y="463.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (2,500,000 samples, 0.03%)</title><rect x="1159.9" y="309" width="0.3" height="15.0" fill="rgb(238,40,30)" rx="2" ry="2" />
<text  x="1162.88" y="319.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (58,750,000 samples, 0.61%)</title><rect x="469.9" y="293" width="7.1" height="15.0" fill="rgb(228,20,15)" rx="2" ry="2" />
<text  x="472.86" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (1,500,000 samples, 0.02%)</title><rect x="1117.8" y="133" width="0.2" height="15.0" fill="rgb(226,83,19)" rx="2" ry="2" />
<text  x="1120.78" y="143.5" ></text>
</g>
<g >
<title>jbd2__journal_start (88,250,000 samples, 0.91%)</title><rect x="458.8" y="293" width="10.8" height="15.0" fill="rgb(222,100,38)" rx="2" ry="2" />
<text  x="461.82" y="303.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (1,500,000 samples, 0.02%)</title><rect x="10.4" y="437" width="0.2" height="15.0" fill="rgb(240,218,26)" rx="2" ry="2" />
<text  x="13.43" y="447.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.81 (11,250,000 samples, 0.12%)</title><rect x="410.1" y="293" width="1.3" height="15.0" fill="rgb(217,49,9)" rx="2" ry="2" />
<text  x="413.06" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (1,000,000 samples, 0.01%)</title><rect x="1151.7" y="133" width="0.1" height="15.0" fill="rgb(230,33,48)" rx="2" ry="2" />
<text  x="1154.71" y="143.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (3,000,000 samples, 0.03%)</title><rect x="758.2" y="261" width="0.4" height="15.0" fill="rgb(227,50,51)" rx="2" ry="2" />
<text  x="761.21" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (3,250,000 samples, 0.03%)</title><rect x="578.7" y="277" width="0.4" height="15.0" fill="rgb(244,101,3)" rx="2" ry="2" />
<text  x="581.67" y="287.5" ></text>
</g>
<g >
<title>leveldb::Status::operator= (2,500,000 samples, 0.03%)</title><rect x="1079.4" y="293" width="0.3" height="15.0" fill="rgb(236,81,28)" rx="2" ry="2" />
<text  x="1082.39" y="303.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1,000,000 samples, 0.01%)</title><rect x="67.8" y="309" width="0.1" height="15.0" fill="rgb(245,89,34)" rx="2" ry="2" />
<text  x="70.76" y="319.5" ></text>
</g>
<g >
<title>pmem_dax_direct_access (9,000,000 samples, 0.09%)</title><rect x="382.9" y="309" width="1.1" height="15.0" fill="rgb(207,141,50)" rx="2" ry="2" />
<text  x="385.93" y="319.5" ></text>
</g>
<g >
<title>leveldb::DB::Open (1,500,000 samples, 0.02%)</title><rect x="30.8" y="421" width="0.2" height="15.0" fill="rgb(224,35,49)" rx="2" ry="2" />
<text  x="33.78" y="431.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::~promise (1,750,000 samples, 0.02%)</title><rect x="1174.0" y="309" width="0.2" height="15.0" fill="rgb(238,89,30)" rx="2" ry="2" />
<text  x="1176.98" y="319.5" ></text>
</g>
<g >
<title>__sb_end_write (5,250,000 samples, 0.05%)</title><rect x="47.1" y="405" width="0.6" height="15.0" fill="rgb(243,184,44)" rx="2" ry="2" />
<text  x="50.07" y="415.5" ></text>
</g>
<g >
<title>ext4_es_insert_extent (2,250,000 samples, 0.02%)</title><rect x="414.9" y="293" width="0.3" height="15.0" fill="rgb(253,189,14)" rx="2" ry="2" />
<text  x="417.94" y="303.5" ></text>
</g>
<g >
<title>__GI___unlink (2,250,000 samples, 0.02%)</title><rect x="30.4" y="421" width="0.3" height="15.0" fill="rgb(217,150,38)" rx="2" ry="2" />
<text  x="33.44" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;char const*&amp;&gt; (3,250,000 samples, 0.03%)</title><rect x="1010.5" y="213" width="0.4" height="15.0" fill="rgb(220,87,41)" rx="2" ry="2" />
<text  x="1013.49" y="223.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_value (2,000,000 samples, 0.02%)</title><rect x="1095.7" y="277" width="0.3" height="15.0" fill="rgb(216,165,45)" rx="2" ry="2" />
<text  x="1098.75" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (18,750,000 samples, 0.19%)</title><rect x="1125.8" y="277" width="2.3" height="15.0" fill="rgb(208,47,31)" rx="2" ry="2" />
<text  x="1128.83" y="287.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (4,496,500,000 samples, 46.51%)</title><rect x="626.2" y="405" width="548.8" height="15.0" fill="rgb(246,168,19)" rx="2" ry="2" />
<text  x="629.18" y="415.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>do_page_fault (1,250,000 samples, 0.01%)</title><rect x="1178.3" y="469" width="0.2" height="15.0" fill="rgb(233,169,46)" rx="2" ry="2" />
<text  x="1181.34" y="479.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (7,500,000 samples, 0.08%)</title><rect x="1165.2" y="277" width="0.9" height="15.0" fill="rgb(206,14,4)" rx="2" ry="2" />
<text  x="1168.19" y="287.5" ></text>
</g>
<g >
<title>ext4_truncate (1,000,000 samples, 0.01%)</title><rect x="30.5" y="293" width="0.2" height="15.0" fill="rgb(228,63,46)" rx="2" ry="2" />
<text  x="33.54" y="303.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (6,250,000 samples, 0.06%)</title><rect x="65.1" y="325" width="0.7" height="15.0" fill="rgb(213,98,39)" rx="2" ry="2" />
<text  x="68.08" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (4,750,000 samples, 0.05%)</title><rect x="592.4" y="357" width="0.6" height="15.0" fill="rgb(247,104,43)" rx="2" ry="2" />
<text  x="595.43" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::construct&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&gt; (4,500,000 samples, 0.05%)</title><rect x="1061.8" y="245" width="0.6" height="15.0" fill="rgb(205,173,18)" rx="2" ry="2" />
<text  x="1064.85" y="255.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result (1,500,000 samples, 0.02%)</title><rect x="1055.6" y="277" width="0.2" height="15.0" fill="rgb(251,20,42)" rx="2" ry="2" />
<text  x="1058.59" y="287.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (5,000,000 samples, 0.05%)</title><rect x="542.5" y="485" width="0.6" height="15.0" fill="rgb(210,139,39)" rx="2" ry="2" />
<text  x="545.51" y="495.5" ></text>
</g>
<g >
<title>leveldb::log::Writer::EmitPhysicalRecord (456,750,000 samples, 4.72%)</title><rect x="995.5" y="261" width="55.7" height="15.0" fill="rgb(253,12,9)" rx="2" ry="2" />
<text  x="998.48" y="271.5" >level..</text>
</g>
<g >
<title>leveldb::crc32c::(anonymous namespace)::ReadUint32LE (82,250,000 samples, 0.85%)</title><rect x="714.6" y="133" width="10.0" height="15.0" fill="rgb(220,90,51)" rx="2" ry="2" />
<text  x="717.58" y="143.5" ></text>
</g>
<g >
<title>do_dentry_open (4,000,000 samples, 0.04%)</title><rect x="29.7" y="357" width="0.5" height="15.0" fill="rgb(216,182,51)" rx="2" ry="2" />
<text  x="32.74" y="367.5" ></text>
</g>
<g >
<title>down_write_trylock (7,500,000 samples, 0.08%)</title><rect x="54.4" y="373" width="0.9" height="15.0" fill="rgb(205,223,0)" rx="2" ry="2" />
<text  x="57.40" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::_M_push_back_aux&lt;leveldb::DBImpl::Writer*&gt; (3,000,000 samples, 0.03%)</title><rect x="1062.4" y="245" width="0.4" height="15.0" fill="rgb(231,187,15)" rx="2" ry="2" />
<text  x="1065.39" y="255.5" ></text>
</g>
<g >
<title>vfprintf (51,250,000 samples, 0.53%)</title><rect x="23.4" y="469" width="6.3" height="15.0" fill="rgb(207,104,51)" rx="2" ry="2" />
<text  x="26.43" y="479.5" ></text>
</g>
<g >
<title>next_bio (3,250,000 samples, 0.03%)</title><rect x="428.1" y="245" width="0.4" height="15.0" fill="rgb(227,70,26)" rx="2" ry="2" />
<text  x="431.09" y="255.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::call_once&lt;void  (1,250,000 samples, 0.01%)</title><rect x="1071.4" y="229" width="0.1" height="15.0" fill="rgb(228,31,52)" rx="2" ry="2" />
<text  x="1074.37" y="239.5" ></text>
</g>
<g >
<title>std::future&lt;leveldb::Status&gt;::future (55,000,000 samples, 0.57%)</title><rect x="1098.2" y="277" width="6.7" height="15.0" fill="rgb(243,213,50)" rx="2" ry="2" />
<text  x="1101.19" y="287.5" ></text>
</g>
<g >
<title>leveldb::port::Mutex::Unlock (13,750,000 samples, 0.14%)</title><rect x="763.0" y="261" width="1.7" height="15.0" fill="rgb(228,116,44)" rx="2" ry="2" />
<text  x="766.00" y="271.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (28,250,000 samples, 0.29%)</title><rect x="923.0" y="117" width="3.4" height="15.0" fill="rgb(252,196,35)" rx="2" ry="2" />
<text  x="925.98" y="127.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r10 (1,250,000 samples, 0.01%)</title><rect x="58.7" y="341" width="0.2" height="15.0" fill="rgb(217,55,9)" rx="2" ry="2" />
<text  x="61.70" y="351.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1,500,000 samples, 0.02%)</title><rect x="1001.2" y="229" width="0.2" height="15.0" fill="rgb(246,220,10)" rx="2" ry="2" />
<text  x="1004.25" y="239.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (4,500,000 samples, 0.05%)</title><rect x="695.0" y="181" width="0.6" height="15.0" fill="rgb(239,125,23)" rx="2" ry="2" />
<text  x="698.02" y="191.5" ></text>
</g>
<g >
<title>mempool_free (1,250,000 samples, 0.01%)</title><rect x="428.5" y="229" width="0.2" height="15.0" fill="rgb(210,32,6)" rx="2" ry="2" />
<text  x="431.55" y="239.5" ></text>
</g>
<g >
<title>__kernel_fpu_end (1,500,000 samples, 0.02%)</title><rect x="417.4" y="181" width="0.2" height="15.0" fill="rgb(225,146,22)" rx="2" ry="2" />
<text  x="420.44" y="191.5" ></text>
</g>
<g >
<title>std::promise&lt;leveldb::Status&gt;::get_future (58,750,000 samples, 0.61%)</title><rect x="1097.7" y="293" width="7.2" height="15.0" fill="rgb(252,133,50)" rx="2" ry="2" />
<text  x="1100.73" y="303.5" ></text>
</g>
<g >
<title>pagevec_lookup_range (18,500,000 samples, 0.19%)</title><rect x="412.5" y="277" width="2.3" height="15.0" fill="rgb(232,212,37)" rx="2" ry="2" />
<text  x="415.50" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2,250,000 samples, 0.02%)</title><rect x="727.4" y="213" width="0.3" height="15.0" fill="rgb(243,160,31)" rx="2" ry="2" />
<text  x="730.42" y="223.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (8,500,000 samples, 0.09%)</title><rect x="420.4" y="197" width="1.0" height="15.0" fill="rgb(246,94,51)" rx="2" ry="2" />
<text  x="423.37" y="207.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (62,750,000 samples, 0.65%)</title><rect x="675.1" y="181" width="7.6" height="15.0" fill="rgb(208,57,45)" rx="2" ry="2" />
<text  x="678.06" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__future_base::_Result_base::_Deleter&gt; (1,250,000 samples, 0.01%)</title><rect x="587.8" y="325" width="0.2" height="15.0" fill="rgb(224,80,52)" rx="2" ry="2" />
<text  x="590.83" y="335.5" ></text>
</g>
<g >
<title>write_pmem (92,250,000 samples, 0.95%)</title><rect x="438.1" y="181" width="11.3" height="15.0" fill="rgb(213,218,20)" rx="2" ry="2" />
<text  x="441.13" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (14,000,000 samples, 0.14%)</title><rect x="1052.0" y="245" width="1.7" height="15.0" fill="rgb(230,187,43)" rx="2" ry="2" />
<text  x="1054.96" y="255.5" ></text>
</g>
<g >
<title>leveldb::Slice::Slice (53,250,000 samples, 0.55%)</title><rect x="914.5" y="117" width="6.5" height="15.0" fill="rgb(218,166,40)" rx="2" ry="2" />
<text  x="917.53" y="127.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::Contents (4,250,000 samples, 0.04%)</title><rect x="770.0" y="277" width="0.5" height="15.0" fill="rgb(248,212,18)" rx="2" ry="2" />
<text  x="772.96" y="287.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (6,000,000 samples, 0.06%)</title><rect x="532.6" y="341" width="0.7" height="15.0" fill="rgb(253,214,13)" rx="2" ry="2" />
<text  x="535.60" y="351.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (6,750,000 samples, 0.07%)</title><rect x="15.7" y="485" width="0.8" height="15.0" fill="rgb(220,67,32)" rx="2" ry="2" />
<text  x="18.71" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (36,500,000 samples, 0.38%)</title><rect x="1074.5" y="261" width="4.5" height="15.0" fill="rgb(234,214,50)" rx="2" ry="2" />
<text  x="1077.51" y="271.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (1,750,000 samples, 0.02%)</title><rect x="763.3" y="229" width="0.2" height="15.0" fill="rgb(217,215,41)" rx="2" ry="2" />
<text  x="766.34" y="239.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (2,500,000 samples, 0.03%)</title><rect x="454.5" y="261" width="0.3" height="15.0" fill="rgb(234,33,47)" rx="2" ry="2" />
<text  x="457.45" y="271.5" ></text>
</g>
<g >
<title>__pthread_once_slow (508,500,000 samples, 5.26%)</title><rect x="543.6" y="485" width="62.1" height="15.0" fill="rgb(245,127,19)" rx="2" ry="2" />
<text  x="546.64" y="495.5" >__pthr..</text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixWritableFile::Flush (45,750,000 samples, 0.47%)</title><rect x="1001.4" y="245" width="5.6" height="15.0" fill="rgb(219,159,35)" rx="2" ry="2" />
<text  x="1004.43" y="255.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BuildBatchGroup (61,750,000 samples, 0.64%)</title><rect x="746.2" y="277" width="7.5" height="15.0" fill="rgb(220,28,2)" rx="2" ry="2" />
<text  x="749.16" y="287.5" ></text>
</g>
<g >
<title>seq_printf (4,750,000 samples, 0.05%)</title><rect x="1187.1" y="341" width="0.6" height="15.0" fill="rgb(242,95,17)" rx="2" ry="2" />
<text  x="1190.07" y="351.5" ></text>
</g>
<g >
<title>std::operator!=&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt; (4,500,000 samples, 0.05%)</title><rect x="753.1" y="261" width="0.6" height="15.0" fill="rgb(237,169,12)" rx="2" ry="2" />
<text  x="756.14" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;leveldb::DBImpl::Writer*&gt;::construct&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&gt; (2,500,000 samples, 0.03%)</title><rect x="1062.0" y="229" width="0.3" height="15.0" fill="rgb(251,225,54)" rx="2" ry="2" />
<text  x="1065.03" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_manager (8,250,000 samples, 0.09%)</title><rect x="1077.9" y="229" width="1.0" height="15.0" fill="rgb(231,65,45)" rx="2" ry="2" />
<text  x="1080.93" y="239.5" ></text>
</g>
<g >
<title>_IO_padn (1,500,000 samples, 0.02%)</title><rect x="19.0" y="469" width="0.2" height="15.0" fill="rgb(251,136,48)" rx="2" ry="2" />
<text  x="22.00" y="479.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (2,250,000 samples, 0.02%)</title><rect x="421.4" y="213" width="0.3" height="15.0" fill="rgb(241,101,39)" rx="2" ry="2" />
<text  x="424.41" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::front (18,000,000 samples, 0.19%)</title><rect x="750.9" y="261" width="2.2" height="15.0" fill="rgb(215,27,39)" rx="2" ry="2" />
<text  x="753.95" y="271.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed32 (5,500,000 samples, 0.06%)</title><rect x="1168.2" y="277" width="0.7" height="15.0" fill="rgb(209,105,3)" rx="2" ry="2" />
<text  x="1171.21" y="287.5" ></text>
</g>
<g >
<title>aa_file_perm (2,500,000 samples, 0.03%)</title><rect x="539.5" y="325" width="0.3" height="15.0" fill="rgb(247,69,12)" rx="2" ry="2" />
<text  x="542.52" y="335.5" ></text>
</g>
<g >
<title>do_sys_open (4,000,000 samples, 0.04%)</title><rect x="29.7" y="421" width="0.5" height="15.0" fill="rgb(254,185,16)" rx="2" ry="2" />
<text  x="32.74" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2,500,000 samples, 0.03%)</title><rect x="728.3" y="213" width="0.3" height="15.0" fill="rgb(244,228,43)" rx="2" ry="2" />
<text  x="731.34" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (1,000,000 samples, 0.01%)</title><rect x="1123.3" y="149" width="0.1" height="15.0" fill="rgb(212,182,28)" rx="2" ry="2" />
<text  x="1126.27" y="159.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::Populate (7,750,000 samples, 0.08%)</title><rect x="1175.3" y="485" width="0.9" height="15.0" fill="rgb(213,21,51)" rx="2" ry="2" />
<text  x="1178.29" y="495.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (7,500,000 samples, 0.08%)</title><rect x="423.0" y="213" width="0.9" height="15.0" fill="rgb(228,121,12)" rx="2" ry="2" />
<text  x="426.02" y="223.5" ></text>
</g>
<g >
<title>std::operator&amp; (9,500,000 samples, 0.10%)</title><rect x="949.2" y="149" width="1.2" height="15.0" fill="rgb(252,32,7)" rx="2" ry="2" />
<text  x="952.19" y="159.5" ></text>
</g>
<g >
<title>crypto_shash_update (1,250,000 samples, 0.01%)</title><rect x="492.3" y="261" width="0.1" height="15.0" fill="rgb(206,116,2)" rx="2" ry="2" />
<text  x="495.29" y="271.5" ></text>
</g>
<g >
<title>get_futex_key (5,750,000 samples, 0.06%)</title><rect x="556.7" y="389" width="0.7" height="15.0" fill="rgb(253,153,29)" rx="2" ry="2" />
<text  x="559.70" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;*&amp;, std::__future_base::_Result_base::_Deleter, void&gt; (16,750,000 samples, 0.17%)</title><rect x="575.5" y="277" width="2.1" height="15.0" fill="rgb(236,33,19)" rx="2" ry="2" />
<text  x="578.53" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (2,250,000 samples, 0.02%)</title><rect x="1178.5" y="501" width="0.3" height="15.0" fill="rgb(216,146,0)" rx="2" ry="2" />
<text  x="1181.50" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,000,000 samples, 0.02%)</title><rect x="1183.0" y="485" width="0.3" height="15.0" fill="rgb(206,15,6)" rx="2" ry="2" />
<text  x="1186.04" y="495.5" ></text>
</g>
<g >
<title>__sb_start_write (9,500,000 samples, 0.10%)</title><rect x="51.5" y="389" width="1.1" height="15.0" fill="rgb(238,164,2)" rx="2" ry="2" />
<text  x="54.47" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (4,000,000 samples, 0.04%)</title><rect x="1103.5" y="165" width="0.5" height="15.0" fill="rgb(237,222,41)" rx="2" ry="2" />
<text  x="1106.53" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (1,000,000 samples, 0.01%)</title><rect x="1103.2" y="197" width="0.1" height="15.0" fill="rgb(238,51,25)" rx="2" ry="2" />
<text  x="1106.16" y="207.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed64 (7,500,000 samples, 0.08%)</title><rect x="779.6" y="229" width="0.9" height="15.0" fill="rgb(227,31,31)" rx="2" ry="2" />
<text  x="782.57" y="239.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (1,000,000 samples, 0.01%)</title><rect x="1001.0" y="213" width="0.2" height="15.0" fill="rgb(225,14,45)" rx="2" ry="2" />
<text  x="1004.03" y="223.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (3,500,000 samples, 0.04%)</title><rect x="629.8" y="181" width="0.4" height="15.0" fill="rgb(240,225,37)" rx="2" ry="2" />
<text  x="632.81" y="191.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl (7,750,000 samples, 0.08%)</title><rect x="1119.4" y="85" width="0.9" height="15.0" fill="rgb(210,186,21)" rx="2" ry="2" />
<text  x="1122.39" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,000,000 samples, 0.01%)</title><rect x="30.2" y="453" width="0.2" height="15.0" fill="rgb(241,52,45)" rx="2" ry="2" />
<text  x="33.23" y="463.5" ></text>
</g>
<g >
<title>leveldb::EncodeFixed32 (4,500,000 samples, 0.05%)</title><rect x="1007.0" y="245" width="0.6" height="15.0" fill="rgb(230,168,2)" rx="2" ry="2" />
<text  x="1010.04" y="255.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (3,000,000 samples, 0.03%)</title><rect x="601.9" y="325" width="0.4" height="15.0" fill="rgb(233,96,25)" rx="2" ry="2" />
<text  x="604.92" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13,500,000 samples, 0.14%)</title><rect x="1161.0" y="293" width="1.7" height="15.0" fill="rgb(205,86,39)" rx="2" ry="2" />
<text  x="1164.04" y="303.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3,250,000 samples, 0.03%)</title><rect x="1097.2" y="229" width="0.4" height="15.0" fill="rgb(251,140,25)" rx="2" ry="2" />
<text  x="1100.24" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,000,000 samples, 0.01%)</title><rect x="427.2" y="261" width="0.2" height="15.0" fill="rgb(254,110,51)" rx="2" ry="2" />
<text  x="430.24" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (4,496,500,000 samples, 46.51%)</title><rect x="626.2" y="389" width="548.8" height="15.0" fill="rgb(251,194,23)" rx="2" ry="2" />
<text  x="629.18" y="399.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>apparmor_file_permission (9,500,000 samples, 0.10%)</title><rect x="538.7" y="357" width="1.1" height="15.0" fill="rgb(207,1,7)" rx="2" ry="2" />
<text  x="541.67" y="367.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2,750,000 samples, 0.03%)</title><rect x="420.6" y="165" width="0.3" height="15.0" fill="rgb(212,67,33)" rx="2" ry="2" />
<text  x="423.58" y="175.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6,750,000 samples, 0.07%)</title><rect x="652.5" y="197" width="0.9" height="15.0" fill="rgb(207,88,51)" rx="2" ry="2" />
<text  x="655.54" y="207.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1,250,000 samples, 0.01%)</title><rect x="540.5" y="341" width="0.2" height="15.0" fill="rgb(218,119,43)" rx="2" ry="2" />
<text  x="543.50" y="351.5" ></text>
</g>
<g >
<title>evict (1,750,000 samples, 0.02%)</title><rect x="30.4" y="325" width="0.3" height="15.0" fill="rgb(221,83,6)" rx="2" ry="2" />
<text  x="33.44" y="335.5" ></text>
</g>
<g >
<title>ext4_meta_trans_blocks (13,500,000 samples, 0.14%)</title><rect x="449.7" y="309" width="1.6" height="15.0" fill="rgb(237,174,38)" rx="2" ry="2" />
<text  x="452.66" y="319.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (9,750,000 samples, 0.10%)</title><rect x="1130.3" y="261" width="1.2" height="15.0" fill="rgb(209,123,50)" rx="2" ry="2" />
<text  x="1133.32" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_destroy (3,000,000 samples, 0.03%)</title><rect x="1077.6" y="229" width="0.3" height="15.0" fill="rgb(225,118,48)" rx="2" ry="2" />
<text  x="1080.56" y="239.5" ></text>
</g>
<g >
<title>__brelse (6,750,000 samples, 0.07%)</title><rect x="478.9" y="293" width="0.8" height="15.0" fill="rgb(223,200,13)" rx="2" ry="2" />
<text  x="481.86" y="303.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::__atomic_futex_unsigned (8,500,000 samples, 0.09%)</title><rect x="1116.7" y="133" width="1.1" height="15.0" fill="rgb(244,56,13)" rx="2" ry="2" />
<text  x="1119.74" y="143.5" ></text>
</g>
<g >
<title>show_cpuinfo (9,500,000 samples, 0.10%)</title><rect x="1186.5" y="357" width="1.2" height="15.0" fill="rgb(239,41,30)" rx="2" ry="2" />
<text  x="1189.49" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (6,000,000 samples, 0.06%)</title><rect x="1103.3" y="181" width="0.7" height="15.0" fill="rgb(216,10,14)" rx="2" ry="2" />
<text  x="1106.31" y="191.5" ></text>
</g>
<g >
<title>map_id_up (3,500,000 samples, 0.04%)</title><rect x="513.1" y="261" width="0.4" height="15.0" fill="rgb(210,80,52)" rx="2" ry="2" />
<text  x="516.10" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (10,250,000 samples, 0.11%)</title><rect x="595.1" y="325" width="1.2" height="15.0" fill="rgb(234,175,51)" rx="2" ry="2" />
<text  x="598.06" y="335.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;leveldb::Status&gt;::_Reset::~_Reset (2,000,000 samples, 0.02%)</title><rect x="1080.8" y="293" width="0.2" height="15.0" fill="rgb(252,43,48)" rx="2" ry="2" />
<text  x="1083.79" y="303.5" ></text>
</g>
<g >
<title>ksys_write (4,086,500,000 samples, 42.27%)</title><rect x="41.2" y="421" width="498.8" height="15.0" fill="rgb(211,72,1)" rx="2" ry="2" />
<text  x="44.25" y="431.5" >ksys_write</text>
</g>
<g >
<title>jbd2_write_access_granted.part.11 (7,250,000 samples, 0.07%)</title><rect x="520.2" y="245" width="0.9" height="15.0" fill="rgb(253,59,49)" rx="2" ry="2" />
<text  x="523.18" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_State_baseV2::_Setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; &gt;::_M_get_pointer (5,250,000 samples, 0.05%)</title><rect x="566.5" y="357" width="0.6" height="15.0" fill="rgb(227,67,42)" rx="2" ry="2" />
<text  x="569.47" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (3,250,000 samples, 0.03%)</title><rect x="605.7" y="485" width="0.4" height="15.0" fill="rgb(247,57,39)" rx="2" ry="2" />
<text  x="608.71" y="495.5" ></text>
</g>
<g >
<title>ext4_mb_new_blocks (66,750,000 samples, 0.69%)</title><rect x="419.4" y="277" width="8.1" height="15.0" fill="rgb(206,22,4)" rx="2" ry="2" />
<text  x="422.39" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt; (2,250,000 samples, 0.02%)</title><rect x="757.0" y="245" width="0.2" height="15.0" fill="rgb(209,26,19)" rx="2" ry="2" />
<text  x="759.96" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,250,000 samples, 0.02%)</title><rect x="30.4" y="405" width="0.3" height="15.0" fill="rgb(220,67,4)" rx="2" ry="2" />
<text  x="33.44" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::empty (3,500,000 samples, 0.04%)</title><rect x="749.5" y="261" width="0.4" height="15.0" fill="rgb(236,37,12)" rx="2" ry="2" />
<text  x="752.48" y="271.5" ></text>
</g>
<g >
<title>operator new (1,500,000 samples, 0.02%)</title><rect x="1109.4" y="197" width="0.2" height="15.0" fill="rgb(217,146,15)" rx="2" ry="2" />
<text  x="1112.42" y="207.5" ></text>
</g>
<g >
<title>snappy::RawUncompress (1,250,000 samples, 0.01%)</title><rect x="607.2" y="485" width="0.1" height="15.0" fill="rgb(229,127,21)" rx="2" ry="2" />
<text  x="610.17" y="495.5" ></text>
</g>
<g >
<title>__madvise (1,750,000 samples, 0.02%)</title><rect x="540.4" y="485" width="0.3" height="15.0" fill="rgb(223,144,27)" rx="2" ry="2" />
<text  x="543.44" y="495.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result (54,750,000 samples, 0.57%)</title><rect x="1064.9" y="261" width="6.6" height="15.0" fill="rgb(234,72,50)" rx="2" ry="2" />
<text  x="1067.87" y="271.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (14,000,000 samples, 0.14%)</title><rect x="519.4" y="277" width="1.8" height="15.0" fill="rgb(228,23,39)" rx="2" ry="2" />
<text  x="522.45" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,750,000 samples, 0.02%)</title><rect x="540.4" y="469" width="0.3" height="15.0" fill="rgb(236,168,14)" rx="2" ry="2" />
<text  x="543.44" y="479.5" ></text>
</g>
<g >
<title>_raw_read_lock (6,000,000 samples, 0.06%)</title><rect x="408.0" y="309" width="0.7" height="15.0" fill="rgb(247,64,10)" rx="2" ry="2" />
<text  x="411.01" y="319.5" ></text>
</g>
<g >
<title>leveldb::WriteBatch::Handler::~Handler (1,250,000 samples, 0.01%)</title><rect x="773.2" y="245" width="0.1" height="15.0" fill="rgb(222,35,26)" rx="2" ry="2" />
<text  x="776.16" y="255.5" ></text>
</g>
<g >
<title>__dquot_alloc_space (1,000,000 samples, 0.01%)</title><rect x="419.5" y="261" width="0.2" height="15.0" fill="rgb(233,92,33)" rx="2" ry="2" />
<text  x="422.55" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (12,000,000 samples, 0.12%)</title><rect x="601.0" y="373" width="1.4" height="15.0" fill="rgb(223,47,6)" rx="2" ry="2" />
<text  x="603.98" y="383.5" ></text>
</g>
<g >
<title>leveldb::crc32c::Extend (169,250,000 samples, 1.75%)</title><rect x="704.0" y="149" width="20.6" height="15.0" fill="rgb(212,139,45)" rx="2" ry="2" />
<text  x="706.96" y="159.5" ></text>
</g>
<g >
<title>ext4_ext_index_trans_blocks (1,500,000 samples, 0.02%)</title><rect x="408.8" y="309" width="0.2" height="15.0" fill="rgb(226,227,15)" rx="2" ry="2" />
<text  x="411.81" y="319.5" ></text>
</g>
<g >
<title>do_group_exit (2,000,000 samples, 0.02%)</title><rect x="1183.0" y="453" width="0.3" height="15.0" fill="rgb(246,64,15)" rx="2" ry="2" />
<text  x="1186.04" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (2,750,000 samples, 0.03%)</title><rect x="1189.4" y="501" width="0.3" height="15.0" fill="rgb(250,47,15)" rx="2" ry="2" />
<text  x="1192.36" y="511.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (5,500,000 samples, 0.06%)</title><rect x="1150.0" y="101" width="0.7" height="15.0" fill="rgb(242,141,21)" rx="2" ry="2" />
<text  x="1153.00" y="111.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (1,500,000 samples, 0.02%)</title><rect x="1122.7" y="165" width="0.2" height="15.0" fill="rgb(251,36,26)" rx="2" ry="2" />
<text  x="1125.72" y="175.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.16 (9,500,000 samples, 0.10%)</title><rect x="557.4" y="389" width="1.2" height="15.0" fill="rgb(208,209,4)" rx="2" ry="2" />
<text  x="560.40" y="399.5" ></text>
</g>
<g >
<title>memset_erms (6,500,000 samples, 0.07%)</title><rect x="393.9" y="277" width="0.8" height="15.0" fill="rgb(227,203,35)" rx="2" ry="2" />
<text  x="396.95" y="287.5" ></text>
</g>
<g >
<title>pmem_do_bvec (92,500,000 samples, 0.96%)</title><rect x="438.1" y="197" width="11.3" height="15.0" fill="rgb(224,152,17)" rx="2" ry="2" />
<text  x="441.10" y="207.5" ></text>
</g>
<g >
<title>mutex_lock (8,750,000 samples, 0.09%)</title><rect x="45.4" y="389" width="1.0" height="15.0" fill="rgb(250,139,16)" rx="2" ry="2" />
<text  x="48.36" y="399.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (2,500,000 samples, 0.03%)</title><rect x="495.6" y="245" width="0.4" height="15.0" fill="rgb(218,6,17)" rx="2" ry="2" />
<text  x="498.65" y="255.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (1,000,000 samples, 0.01%)</title><rect x="1152.2" y="117" width="0.1" height="15.0" fill="rgb(224,79,40)" rx="2" ry="2" />
<text  x="1155.16" y="127.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (171,250,000 samples, 1.77%)</title><rect x="883.2" y="133" width="20.9" height="15.0" fill="rgb(227,23,31)" rx="2" ry="2" />
<text  x="886.16" y="143.5" ></text>
</g>
<g >
<title>leveldb::Random::Next (8,000,000 samples, 0.08%)</title><rect x="964.3" y="165" width="1.0" height="15.0" fill="rgb(225,148,20)" rx="2" ry="2" />
<text  x="967.33" y="175.5" ></text>
</g>
<g >
<title>kernel_fpu_begin (1,250,000 samples, 0.01%)</title><rect x="451.6" y="229" width="0.1" height="15.0" fill="rgb(248,183,6)" rx="2" ry="2" />
<text  x="454.55" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6,500,000 samples, 0.07%)</title><rect x="655.0" y="165" width="0.8" height="15.0" fill="rgb(249,163,54)" rx="2" ry="2" />
<text  x="657.98" y="175.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (1,750,000 samples, 0.02%)</title><rect x="695.9" y="197" width="0.2" height="15.0" fill="rgb(213,147,0)" rx="2" ry="2" />
<text  x="698.87" y="207.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2,000,000 samples, 0.02%)</title><rect x="525.1" y="229" width="0.2" height="15.0" fill="rgb(227,111,42)" rx="2" ry="2" />
<text  x="528.06" y="239.5" ></text>
</g>
<g >
<title>std::atomic_flag::atomic_flag (2,750,000 samples, 0.03%)</title><rect x="1118.1" y="133" width="0.4" height="15.0" fill="rgb(212,109,15)" rx="2" ry="2" />
<text  x="1121.14" y="143.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (13,250,000 samples, 0.14%)</title><rect x="388.2" y="293" width="1.6" height="15.0" fill="rgb(228,146,13)" rx="2" ry="2" />
<text  x="391.21" y="303.5" ></text>
</g>
<g >
<title>futex_wake (1,000,000 samples, 0.01%)</title><rect x="560.0" y="421" width="0.1" height="15.0" fill="rgb(206,205,17)" rx="2" ry="2" />
<text  x="562.97" y="431.5" ></text>
</g>
<g >
<title>dax_iomap_rw (3,250,000 samples, 0.03%)</title><rect x="54.0" y="373" width="0.4" height="15.0" fill="rgb(228,3,10)" rx="2" ry="2" />
<text  x="57.00" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9,000,000 samples, 0.09%)</title><rect x="691.5" y="181" width="1.1" height="15.0" fill="rgb(242,125,18)" rx="2" ry="2" />
<text  x="694.48" y="191.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (199,250,000 samples, 2.06%)</title><rect x="1131.6" y="277" width="24.3" height="15.0" fill="rgb(246,130,49)" rx="2" ry="2" />
<text  x="1134.63" y="287.5" >s..</text>
</g>
<g >
<title>leveldb::Slice::compare (3,750,000 samples, 0.04%)</title><rect x="692.6" y="181" width="0.4" height="15.0" fill="rgb(225,89,21)" rx="2" ry="2" />
<text  x="695.58" y="191.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::__setter&lt;leveldb::Status, leveldb::Status const&amp;&gt; (9,500,000 samples, 0.10%)</title><rect x="1071.6" y="261" width="1.2" height="15.0" fill="rgb(234,57,12)" rx="2" ry="2" />
<text  x="1074.61" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (2,750,000 samples, 0.03%)</title><rect x="1101.3" y="213" width="0.4" height="15.0" fill="rgb(242,146,54)" rx="2" ry="2" />
<text  x="1104.33" y="223.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (1,750,000 samples, 0.02%)</title><rect x="992.5" y="261" width="0.2" height="15.0" fill="rgb(227,134,28)" rx="2" ry="2" />
<text  x="995.52" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_futex (58,750,000 samples, 0.61%)</title><rect x="552.9" y="437" width="7.2" height="15.0" fill="rgb(210,55,18)" rx="2" ry="2" />
<text  x="555.92" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (7,000,000 samples, 0.07%)</title><rect x="1156.7" y="261" width="0.9" height="15.0" fill="rgb(237,123,46)" rx="2" ry="2" />
<text  x="1159.74" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,750,000 samples, 0.10%)</title><rect x="1186.5" y="469" width="1.2" height="15.0" fill="rgb(230,136,22)" rx="2" ry="2" />
<text  x="1189.46" y="479.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::status (1,000,000 samples, 0.01%)</title><rect x="726.2" y="213" width="0.1" height="15.0" fill="rgb(220,64,32)" rx="2" ry="2" />
<text  x="729.20" y="223.5" ></text>
</g>
<g >
<title>leveldb::Slice::operator[] (2,000,000 samples, 0.02%)</title><rect x="696.4" y="181" width="0.3" height="15.0" fill="rgb(251,67,44)" rx="2" ry="2" />
<text  x="699.42" y="191.5" ></text>
</g>
<g >
<title>leveldb::test::RandomString (13,250,000 samples, 0.14%)</title><rect x="737.5" y="277" width="1.6" height="15.0" fill="rgb(253,44,40)" rx="2" ry="2" />
<text  x="740.52" y="287.5" ></text>
</g>
<g >
<title>dax_read_lock (11,000,000 samples, 0.11%)</title><rect x="80.1" y="309" width="1.3" height="15.0" fill="rgb(223,135,20)" rx="2" ry="2" />
<text  x="83.06" y="319.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r15 (1,750,000 samples, 0.02%)</title><rect x="58.9" y="341" width="0.2" height="15.0" fill="rgb(230,106,11)" rx="2" ry="2" />
<text  x="61.85" y="351.5" ></text>
</g>
<g >
<title>ext4_mb_initialize_context (2,500,000 samples, 0.03%)</title><rect x="422.0" y="261" width="0.4" height="15.0" fill="rgb(228,227,45)" rx="2" ry="2" />
<text  x="425.05" y="271.5" ></text>
</g>
<g >
<title>std::atomic&lt;unsigned int&gt;::atomic (1,250,000 samples, 0.01%)</title><rect x="1118.0" y="133" width="0.1" height="15.0" fill="rgb(232,37,34)" rx="2" ry="2" />
<text  x="1120.96" y="143.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::operator* (2,000,000 samples, 0.02%)</title><rect x="751.3" y="245" width="0.2" height="15.0" fill="rgb(234,217,21)" rx="2" ry="2" />
<text  x="754.28" y="255.5" ></text>
</g>
<g >
<title>[unknown] (33,750,000 samples, 0.35%)</title><rect x="10.1" y="485" width="4.1" height="15.0" fill="rgb(215,17,37)" rx="2" ry="2" />
<text  x="13.06" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (16,000,000 samples, 0.17%)</title><rect x="1057.9" y="261" width="2.0" height="15.0" fill="rgb(220,106,36)" rx="2" ry="2" />
<text  x="1060.91" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="589.2" y="245" width="0.1" height="15.0" fill="rgb(212,158,50)" rx="2" ry="2" />
<text  x="592.17" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (5,000,000 samples, 0.05%)</title><rect x="1157.0" y="245" width="0.6" height="15.0" fill="rgb(251,69,25)" rx="2" ry="2" />
<text  x="1159.98" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7,000,000 samples, 0.07%)</title><rect x="479.9" y="293" width="0.8" height="15.0" fill="rgb(253,7,0)" rx="2" ry="2" />
<text  x="482.87" y="303.5" ></text>
</g>
<g >
<title>leveldb::TableBuilder::Flush (201,000,000 samples, 2.08%)</title><rect x="700.5" y="213" width="24.5" height="15.0" fill="rgb(223,135,49)" rx="2" ry="2" />
<text  x="703.51" y="223.5" >l..</text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (152,000,000 samples, 1.57%)</title><rect x="1107.0" y="229" width="18.6" height="15.0" fill="rgb(246,185,3)" rx="2" ry="2" />
<text  x="1110.00" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (1,750,000 samples, 0.02%)</title><rect x="540.4" y="437" width="0.3" height="15.0" fill="rgb(215,206,8)" rx="2" ry="2" />
<text  x="543.44" y="447.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::Writer::~Writer (17,000,000 samples, 0.18%)</title><rect x="759.0" y="277" width="2.1" height="15.0" fill="rgb(213,103,20)" rx="2" ry="2" />
<text  x="762.00" y="287.5" ></text>
</g>
<g >
<title>leveldb::Slice::data (1,000,000 samples, 0.01%)</title><rect x="640.1" y="213" width="0.1" height="15.0" fill="rgb(219,187,41)" rx="2" ry="2" />
<text  x="643.12" y="223.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (24,750,000 samples, 0.26%)</title><rect x="472.5" y="261" width="3.1" height="15.0" fill="rgb(245,103,16)" rx="2" ry="2" />
<text  x="475.55" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (96,000,000 samples, 0.99%)</title><rect x="548.4" y="469" width="11.7" height="15.0" fill="rgb(208,18,5)" rx="2" ry="2" />
<text  x="551.37" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (32,750,000 samples, 0.34%)</title><rect x="1178.8" y="501" width="4.0" height="15.0" fill="rgb(213,29,19)" rx="2" ry="2" />
<text  x="1181.77" y="511.5" ></text>
</g>
<g >
<title>leveldb::DecodeFixed64 (12,500,000 samples, 0.13%)</title><rect x="984.6" y="245" width="1.5" height="15.0" fill="rgb(242,142,22)" rx="2" ry="2" />
<text  x="987.59" y="255.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::KeyIsAfterNode (8,750,000 samples, 0.09%)</title><rect x="953.6" y="197" width="1.1" height="15.0" fill="rgb(216,70,40)" rx="2" ry="2" />
<text  x="956.65" y="207.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (8,250,000 samples, 0.09%)</title><rect x="978.1" y="229" width="1.0" height="15.0" fill="rgb(241,160,24)" rx="2" ry="2" />
<text  x="981.06" y="239.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (70,500,000 samples, 0.73%)</title><rect x="399.4" y="309" width="8.6" height="15.0" fill="rgb(248,228,8)" rx="2" ry="2" />
<text  x="402.41" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::__future_base::_State_baseV2,  (3,000,000 samples, 0.03%)</title><rect x="1087.2" y="261" width="0.3" height="15.0" fill="rgb(243,190,37)" rx="2" ry="2" />
<text  x="1090.17" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (11,000,000 samples, 0.11%)</title><rect x="751.8" y="229" width="1.3" height="15.0" fill="rgb(209,224,3)" rx="2" ry="2" />
<text  x="754.80" y="239.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_State_baseV2 (40,500,000 samples, 0.42%)</title><rect x="1115.7" y="149" width="4.9" height="15.0" fill="rgb(236,216,18)" rx="2" ry="2" />
<text  x="1118.67" y="159.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (3,500,000 samples, 0.04%)</title><rect x="1126.8" y="229" width="0.4" height="15.0" fill="rgb(228,165,16)" rx="2" ry="2" />
<text  x="1129.81" y="239.5" ></text>
</g>
<g >
<title>tc_deletearray_nothrow (20,000,000 samples, 0.21%)</title><rect x="10.6" y="453" width="2.5" height="15.0" fill="rgb(249,211,21)" rx="2" ry="2" />
<text  x="13.64" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::__future_base::_State_baseV2&gt;::_M_ptr (1,500,000 samples, 0.02%)</title><rect x="1111.7" y="181" width="0.2" height="15.0" fill="rgb(222,215,17)" rx="2" ry="2" />
<text  x="1114.73" y="191.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::KeyBuffer::slice (1,000,000 samples, 0.01%)</title><rect x="730.5" y="325" width="0.2" height="15.0" fill="rgb(235,169,34)" rx="2" ry="2" />
<text  x="733.53" y="335.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_M_head (2,000,000 samples, 0.02%)</title><rect x="596.1" y="277" width="0.2" height="15.0" fill="rgb(229,143,45)" rx="2" ry="2" />
<text  x="599.06" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, false&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="584.0" y="261" width="0.1" height="15.0" fill="rgb(210,47,19)" rx="2" ry="2" />
<text  x="586.95" y="271.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1,500,000 samples, 0.02%)</title><rect x="59.1" y="341" width="0.1" height="15.0" fill="rgb(224,167,5)" rx="2" ry="2" />
<text  x="62.06" y="351.5" ></text>
</g>
<g >
<title>start_this_handle (36,250,000 samples, 0.37%)</title><rect x="394.8" y="277" width="4.5" height="15.0" fill="rgb(247,164,13)" rx="2" ry="2" />
<text  x="397.83" y="287.5" ></text>
</g>
<g >
<title>radix_tree_next_chunk (18,250,000 samples, 0.19%)</title><rect x="412.5" y="245" width="2.3" height="15.0" fill="rgb(214,57,45)" rx="2" ry="2" />
<text  x="415.53" y="255.5" ></text>
</g>
<g >
<title>generic_make_request (168,500,000 samples, 1.74%)</title><rect x="429.0" y="229" width="20.5" height="15.0" fill="rgb(241,49,12)" rx="2" ry="2" />
<text  x="431.97" y="239.5" ></text>
</g>
<g >
<title>leveldb::Status::Status (3,250,000 samples, 0.03%)</title><rect x="1006.3" y="181" width="0.4" height="15.0" fill="rgb(232,72,19)" rx="2" ry="2" />
<text  x="1009.28" y="191.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;leveldb::Status&gt;::_M_destroy (1,000,000 samples, 0.01%)</title><rect x="1177.6" y="469" width="0.1" height="15.0" fill="rgb(245,63,41)" rx="2" ry="2" />
<text  x="1180.61" y="479.5" ></text>
</g>
<g >
<title>pmem_make_request (164,000,000 samples, 1.70%)</title><rect x="429.4" y="213" width="20.0" height="15.0" fill="rgb(234,187,17)" rx="2" ry="2" />
<text  x="432.43" y="223.5" ></text>
</g>
<g >
<title>seq_vprintf (4,500,000 samples, 0.05%)</title><rect x="1187.1" y="325" width="0.6" height="15.0" fill="rgb(207,168,20)" rx="2" ry="2" />
<text  x="1190.10" y="335.5" ></text>
</g>
<g >
<title>leveldb::Slice::size (1,250,000 samples, 0.01%)</title><rect x="1000.5" y="229" width="0.2" height="15.0" fill="rgb(224,114,22)" rx="2" ry="2" />
<text  x="1003.54" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::begin (1,000,000 samples, 0.01%)</title><rect x="1055.9" y="277" width="0.1" height="15.0" fill="rgb(228,48,27)" rx="2" ry="2" />
<text  x="1058.86" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::empty (3,500,000 samples, 0.04%)</title><rect x="756.8" y="261" width="0.4" height="15.0" fill="rgb(249,132,24)" rx="2" ry="2" />
<text  x="759.81" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (1,750,000 samples, 0.02%)</title><rect x="565.9" y="373" width="0.2" height="15.0" fill="rgb(243,28,10)" rx="2" ry="2" />
<text  x="568.86" y="383.5" ></text>
</g>
<g >
<title>vfs_write (1,000,000 samples, 0.01%)</title><rect x="540.0" y="421" width="0.1" height="15.0" fill="rgb(206,178,39)" rx="2" ry="2" />
<text  x="543.01" y="431.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::Next (6,250,000 samples, 0.06%)</title><rect x="629.5" y="197" width="0.7" height="15.0" fill="rgb(228,172,32)" rx="2" ry="2" />
<text  x="632.48" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (222,000,000 samples, 2.30%)</title><rect x="566.1" y="373" width="27.1" height="15.0" fill="rgb(244,71,3)" rx="2" ry="2" />
<text  x="569.07" y="383.5" >s..</text>
</g>
<g >
<title>ext4_ext_try_to_merge (1,250,000 samples, 0.01%)</title><rect x="418.6" y="261" width="0.1" height="15.0" fill="rgb(229,183,3)" rx="2" ry="2" />
<text  x="421.57" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__future_base::_Result_base::_Deleter, true&gt;::_Head_base&lt;std::__future_base::_Result_base::_Deleter&gt; (1,750,000 samples, 0.02%)</title><rect x="576.5" y="261" width="0.2" height="15.0" fill="rgb(223,25,28)" rx="2" ry="2" />
<text  x="579.47" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_M_head (2,500,000 samples, 0.03%)</title><rect x="1086.6" y="165" width="0.3" height="15.0" fill="rgb(241,133,37)" rx="2" ry="2" />
<text  x="1089.62" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::construct&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&gt; (1,000,000 samples, 0.01%)</title><rect x="1060.7" y="261" width="0.2" height="15.0" fill="rgb(222,58,53)" rx="2" ry="2" />
<text  x="1063.75" y="271.5" ></text>
</g>
<g >
<title>mmput (1,500,000 samples, 0.02%)</title><rect x="1183.1" y="421" width="0.2" height="15.0" fill="rgb(228,149,27)" rx="2" ry="2" />
<text  x="1186.10" y="431.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (4,000,000 samples, 0.04%)</title><rect x="994.9" y="261" width="0.5" height="15.0" fill="rgb(230,146,49)" rx="2" ry="2" />
<text  x="997.93" y="271.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (45,000,000 samples, 0.47%)</title><rect x="653.7" y="197" width="5.5" height="15.0" fill="rgb(233,34,46)" rx="2" ry="2" />
<text  x="656.73" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::emplace_back&lt;leveldb::DBImpl::Writer*&gt; (16,250,000 samples, 0.17%)</title><rect x="1060.9" y="261" width="2.0" height="15.0" fill="rgb(217,217,44)" rx="2" ry="2" />
<text  x="1063.87" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1,000,000 samples, 0.01%)</title><rect x="1177.6" y="485" width="0.1" height="15.0" fill="rgb(211,200,48)" rx="2" ry="2" />
<text  x="1180.61" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1,750,000 samples, 0.02%)</title><rect x="1189.1" y="501" width="0.3" height="15.0" fill="rgb(238,4,31)" rx="2" ry="2" />
<text  x="1192.15" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt; &gt;::destroy&lt;std::__future_base::_State_baseV2&gt; (94,750,000 samples, 0.98%)</title><rect x="1143.1" y="197" width="11.5" height="15.0" fill="rgb(206,120,32)" rx="2" ry="2" />
<text  x="1146.07" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;leveldb::DBImpl::Writer*, std::allocator&lt;leveldb::DBImpl::Writer*&gt; &gt;::empty (7,000,000 samples, 0.07%)</title><rect x="1056.0" y="277" width="0.9" height="15.0" fill="rgb(224,16,7)" rx="2" ry="2" />
<text  x="1059.05" y="287.5" ></text>
</g>
<g >
<title>do_filp_open (4,000,000 samples, 0.04%)</title><rect x="29.7" y="405" width="0.5" height="15.0" fill="rgb(215,22,2)" rx="2" ry="2" />
<text  x="32.74" y="415.5" ></text>
</g>
<g >
<title>all (9,668,000,000 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(230,87,37)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::FindShortestSeparator (4,000,000 samples, 0.04%)</title><rect x="696.2" y="197" width="0.5" height="15.0" fill="rgb(205,88,43)" rx="2" ry="2" />
<text  x="699.18" y="207.5" ></text>
</g>
<g >
<title>mempool_alloc (1,750,000 samples, 0.02%)</title><rect x="428.2" y="213" width="0.2" height="15.0" fill="rgb(248,0,12)" rx="2" ry="2" />
<text  x="431.15" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (3,750,000 samples, 0.04%)</title><rect x="581.0" y="261" width="0.4" height="15.0" fill="rgb(240,217,19)" rx="2" ry="2" />
<text  x="583.99" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_State_baseV2&gt; &gt;::construct&lt;std::__future_base::_State_baseV2&gt; (54,750,000 samples, 0.57%)</title><rect x="1114.8" y="181" width="6.6" height="15.0" fill="rgb(231,90,32)" rx="2" ry="2" />
<text  x="1117.75" y="191.5" ></text>
</g>
<g >
<title>memset_erms (1,250,000 samples, 0.01%)</title><rect x="419.2" y="261" width="0.2" height="15.0" fill="rgb(227,30,33)" rx="2" ry="2" />
<text  x="422.24" y="271.5" ></text>
</g>
<g >
<title>std::atomic&lt;leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node*&gt;::load (8,750,000 samples, 0.09%)</title><rect x="952.2" y="181" width="1.0" height="15.0" fill="rgb(219,67,25)" rx="2" ry="2" />
<text  x="955.15" y="191.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (187,500,000 samples, 1.94%)</title><rect x="1133.0" y="229" width="22.9" height="15.0" fill="rgb(251,81,24)" rx="2" ry="2" />
<text  x="1136.00" y="239.5" >s..</text>
</g>
<g >
<title>leveldb::VarintLength (6,000,000 samples, 0.06%)</title><rect x="967.6" y="213" width="0.7" height="15.0" fill="rgb(245,147,24)" rx="2" ry="2" />
<text  x="970.59" y="223.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Iterator::Valid (2,750,000 samples, 0.03%)</title><rect x="639.7" y="197" width="0.3" height="15.0" fill="rgb(210,11,24)" rx="2" ry="2" />
<text  x="642.70" y="207.5" ></text>
</g>
<g >
<title>from_kprojid (5,250,000 samples, 0.05%)</title><rect x="521.8" y="293" width="0.6" height="15.0" fill="rgb(234,133,49)" rx="2" ry="2" />
<text  x="524.76" y="303.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BackgroundCompaction (854,750,000 samples, 8.84%)</title><rect x="626.2" y="293" width="104.3" height="15.0" fill="rgb(225,148,4)" rx="2" ry="2" />
<text  x="629.18" y="303.5" >leveldb::DBI..</text>
</g>
<g >
<title>leveldb::Arena::AllocateAligned (1,000,000 samples, 0.01%)</title><rect x="789.8" y="197" width="0.1" height="15.0" fill="rgb(241,23,41)" rx="2" ry="2" />
<text  x="792.76" y="207.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MemTableInserter::Put (1,585,250,000 samples, 16.40%)</title><rect x="775.7" y="245" width="193.4" height="15.0" fill="rgb(238,200,34)" rx="2" ry="2" />
<text  x="778.66" y="255.5" >leveldb::(anonymous names..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,150,000,000 samples, 42.93%)</title><rect x="33.9" y="469" width="506.5" height="15.0" fill="rgb(235,28,29)" rx="2" ry="2" />
<text  x="36.92" y="479.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8,000,000 samples, 0.08%)</title><rect x="1166.1" y="277" width="1.0" height="15.0" fill="rgb(232,166,8)" rx="2" ry="2" />
<text  x="1169.11" y="287.5" ></text>
</g>
<g >
<title>ext4_orphan_add (29,250,000 samples, 0.30%)</title><rect x="451.3" y="309" width="3.6" height="15.0" fill="rgb(239,216,2)" rx="2" ry="2" />
<text  x="454.31" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_State_baseV2, std::allocator&lt;std::__future_base::_State_baseV2&gt;,  (2,000,000 samples, 0.02%)</title><rect x="1142.1" y="165" width="0.2" height="15.0" fill="rgb(241,131,12)" rx="2" ry="2" />
<text  x="1145.06" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (11,000,000 samples, 0.11%)</title><rect x="588.1" y="325" width="1.3" height="15.0" fill="rgb(225,38,0)" rx="2" ry="2" />
<text  x="591.10" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (3,750,000 samples, 0.04%)</title><rect x="601.8" y="341" width="0.5" height="15.0" fill="rgb(205,211,35)" rx="2" ry="2" />
<text  x="604.83" y="351.5" ></text>
</g>
<g >
<title>iomap_apply (3,000,000 samples, 0.03%)</title><rect x="534.8" y="357" width="0.3" height="15.0" fill="rgb(251,154,34)" rx="2" ry="2" />
<text  x="537.76" y="367.5" ></text>
</g>
<g >
<title>file_remove_privs (1,750,000 samples, 0.02%)</title><rect x="529.3" y="357" width="0.2" height="15.0" fill="rgb(213,76,10)" rx="2" ry="2" />
<text  x="532.27" y="367.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::NoBarrier_Next (5,000,000 samples, 0.05%)</title><rect x="956.2" y="197" width="0.6" height="15.0" fill="rgb(222,64,6)" rx="2" ry="2" />
<text  x="959.18" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (10,750,000 samples, 0.11%)</title><rect x="1119.1" y="117" width="1.3" height="15.0" fill="rgb(231,103,29)" rx="2" ry="2" />
<text  x="1122.09" y="127.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (2,500,000 samples, 0.03%)</title><rect x="593.3" y="357" width="0.4" height="15.0" fill="rgb(233,82,33)" rx="2" ry="2" />
<text  x="596.35" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (1,250,000 samples, 0.01%)</title><rect x="572.1" y="325" width="0.2" height="15.0" fill="rgb(208,141,10)" rx="2" ry="2" />
<text  x="575.14" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,250,000 samples, 0.01%)</title><rect x="589.3" y="309" width="0.1" height="15.0" fill="rgb(232,162,21)" rx="2" ry="2" />
<text  x="592.29" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__future_base::_Result_base::_Deleter&gt;::_M_head (1,000,000 samples, 0.01%)</title><rect x="595.3" y="309" width="0.2" height="15.0" fill="rgb(232,182,45)" rx="2" ry="2" />
<text  x="598.33" y="319.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result_base*&amp;, std::__future_base::_Result_base::_Deleter, true&gt; (18,500,000 samples, 0.19%)</title><rect x="585.6" y="309" width="2.2" height="15.0" fill="rgb(226,71,17)" rx="2" ry="2" />
<text  x="588.57" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__future_base::_Result&lt;leveldb::Status&gt;*, std::__future_base::_Result_base::_Deleter&gt; (1,750,000 samples, 0.02%)</title><rect x="581.2" y="245" width="0.2" height="15.0" fill="rgb(230,139,7)" rx="2" ry="2" />
<text  x="584.23" y="255.5" ></text>
</g>
<g >
<title>common_file_perm (9,000,000 samples, 0.09%)</title><rect x="538.7" y="341" width="1.1" height="15.0" fill="rgb(246,174,42)" rx="2" ry="2" />
<text  x="541.73" y="351.5" ></text>
</g>
<g >
<title>std::mutex::unlock (12,750,000 samples, 0.13%)</title><rect x="763.1" y="245" width="1.6" height="15.0" fill="rgb(224,203,15)" rx="2" ry="2" />
<text  x="766.12" y="255.5" ></text>
</g>
<g >
<title>std::mutex::unlock (9,250,000 samples, 0.10%)</title><rect x="1053.9" y="261" width="1.1" height="15.0" fill="rgb(226,193,48)" rx="2" ry="2" />
<text  x="1056.85" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_free (13,500,000 samples, 0.14%)</title><rect x="406.3" y="277" width="1.7" height="15.0" fill="rgb(225,29,6)" rx="2" ry="2" />
<text  x="409.33" y="287.5" ></text>
</g>
<g >
<title>leveldb::Status::~Status (4,000,000 samples, 0.04%)</title><rect x="1079.7" y="293" width="0.5" height="15.0" fill="rgb(213,4,24)" rx="2" ry="2" />
<text  x="1082.70" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (7,250,000 samples, 0.07%)</title><rect x="572.6" y="293" width="0.9" height="15.0" fill="rgb(218,94,10)" rx="2" ry="2" />
<text  x="575.63" y="303.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::Node::NoBarrier_SetNext (2,750,000 samples, 0.03%)</title><rect x="966.1" y="213" width="0.4" height="15.0" fill="rgb(217,77,22)" rx="2" ry="2" />
<text  x="969.13" y="223.5" ></text>
</g>
<g >
<title>leveldb::EncodeVarint32 (2,500,000 samples, 0.03%)</title><rect x="780.5" y="229" width="0.3" height="15.0" fill="rgb(219,33,0)" rx="2" ry="2" />
<text  x="783.48" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (1,000,000 samples, 0.01%)</title><rect x="13.1" y="421" width="0.1" height="15.0" fill="rgb(222,8,12)" rx="2" ry="2" />
<text  x="16.11" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned int&gt;::construct&lt;unsigned int, unsigned int&gt; (1,000,000 samples, 0.01%)</title><rect x="688.9" y="149" width="0.1" height="15.0" fill="rgb(230,201,9)" rx="2" ry="2" />
<text  x="691.91" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (5,250,000 samples, 0.05%)</title><rect x="729.3" y="229" width="0.6" height="15.0" fill="rgb(220,118,1)" rx="2" ry="2" />
<text  x="732.25" y="239.5" ></text>
</g>
<g >
<title>leveldb::WriteBatchInternal::SetSequence (2,000,000 samples, 0.02%)</title><rect x="1080.4" y="293" width="0.2" height="15.0" fill="rgb(247,155,26)" rx="2" ry="2" />
<text  x="1083.37" y="303.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9,750,000 samples, 0.10%)</title><rect x="828.3" y="149" width="1.2" height="15.0" fill="rgb(242,101,23)" rx="2" ry="2" />
<text  x="831.33" y="159.5" ></text>
</g>
<g >
<title>_raw_read_lock (12,750,000 samples, 0.13%)</title><rect x="459.8" y="277" width="1.5" height="15.0" fill="rgb(249,212,23)" rx="2" ry="2" />
<text  x="462.76" y="287.5" ></text>
</g>
<g >
<title>bio_free (1,750,000 samples, 0.02%)</title><rect x="428.5" y="245" width="0.2" height="15.0" fill="rgb(208,187,20)" rx="2" ry="2" />
<text  x="431.52" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;leveldb::DBImpl::Writer*, leveldb::DBImpl::Writer*&amp;, leveldb::DBImpl::Writer**&gt;::_Deque_iterator (5,250,000 samples, 0.05%)</title><rect x="748.8" y="245" width="0.7" height="15.0" fill="rgb(233,129,7)" rx="2" ry="2" />
<text  x="751.84" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (1,750,000 samples, 0.02%)</title><rect x="1189.7" y="501" width="0.2" height="15.0" fill="rgb(228,21,29)" rx="2" ry="2" />
<text  x="1192.69" y="511.5" ></text>
</g>
<g >
<title>std::forward&lt;void  (2,250,000 samples, 0.02%)</title><rect x="604.5" y="421" width="0.3" height="15.0" fill="rgb(227,119,44)" rx="2" ry="2" />
<text  x="607.52" y="431.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (61,750,000 samples, 0.64%)</title><rect x="514.0" y="293" width="7.6" height="15.0" fill="rgb(248,86,3)" rx="2" ry="2" />
<text  x="517.04" y="303.5" ></text>
</g>
<g >
<title>leveldb::MutexLock::~MutexLock (15,000,000 samples, 0.16%)</title><rect x="762.9" y="277" width="1.8" height="15.0" fill="rgb(214,76,46)" rx="2" ry="2" />
<text  x="765.88" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_write (4,097,750,000 samples, 42.38%)</title><rect x="40.0" y="437" width="500.1" height="15.0" fill="rgb(219,28,47)" rx="2" ry="2" />
<text  x="42.99" y="447.5" >__x64_sys_write</text>
</g>
<g >
<title>ext4_inode_csum.isra.59 (159,750,000 samples, 1.65%)</title><rect x="492.4" y="261" width="19.5" height="15.0" fill="rgb(205,61,21)" rx="2" ry="2" />
<text  x="495.44" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1,500,000 samples, 0.02%)</title><rect x="1132.8" y="229" width="0.2" height="15.0" fill="rgb(250,171,26)" rx="2" ry="2" />
<text  x="1135.82" y="239.5" ></text>
</g>
<g >
<title>start_this_handle (39,250,000 samples, 0.41%)</title><rect x="464.8" y="277" width="4.8" height="15.0" fill="rgb(223,224,52)" rx="2" ry="2" />
<text  x="467.80" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;leveldb::Status&gt;, std::__future_base::_Result_base::_Deleter&gt;::release (18,250,000 samples, 0.19%)</title><rect x="579.2" y="309" width="2.2" height="15.0" fill="rgb(235,195,49)" rx="2" ry="2" />
<text  x="582.22" y="319.5" ></text>
</g>
<g >
<title>leveldb::SkipList&lt;char const*, leveldb::MemTable::KeyComparator&gt;::FindGreaterOrEqual (1,338,500,000 samples, 13.84%)</title><rect x="789.9" y="197" width="163.3" height="15.0" fill="rgb(240,160,38)" rx="2" ry="2" />
<text  x="792.88" y="207.5" >leveldb::SkipList&lt;cha..</text>
</g>
</g>
</svg>
